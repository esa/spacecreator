image: ${CI_REGISTRY_IMAGE}/taste-buster:latest

stages:
  - build-test
  - build-test-and-bundle
  - code-coverage
  - documentation

default:
  before_script:
    - export PROJECT_ROOT=$(pwd)
    - export ENV_QTC_VERSION_SHORT=4.8
    - export ENV_QTC_VERSION=4.8.2
    - export ENV_QT_VERSION=5.12.1
    - export DOWNLOAD_DIR=/opt/qt-creator-dev
    - export BUILD_DIR=${PROJECT_ROOT}/build
    - export PACKAGE_DIR=${PROJECT_ROOT}/package
    - export CMAKE_BUILD=-DCMAKE_BUILD_TYPE=Release
    - export ENV_QT_BASE_DIR=${DOWNLOAD_DIR}/Qt/${ENV_QT_VERSION}/gcc_64
    - export QTC_INSTALL=${DOWNLOAD_DIR}/spacecreator.AppDir
    - export QTC_SOURCE=${QTC_INSTALL}
    - mkdir -p ${DOWNLOAD_DIR}
    - mkdir -p ${BUILD_DIR}
    - mkdir -p ${PACKAGE_DIR}
    # dependencies
    - apt install -y  build-essential git g++ cmake cmake-data ninja-build make gcovr lcov ccache cccc doxygen graphviz zip p7zip curl wget default-jre uuid-dev pkg-config fuse python3-pip clang-format spin python3-pygraphviz python3-singledispatch python3-stringtemplate3 python3-pexpect 
    # install OpenGEODE dependencies
    # *Python (both for OpenGEODE and sdl2promela)
    - pip3 install black==21.10b0 multipledispatch pyside6 pytest py7zr aqtinstall GitPython
    # install newest OpenGEODE (must be installed in the same directory, removal is more robust than git clean/checkout/force)
    - pushd $HOME/tool-src; rm -r opengeode ; git clone https://gitrepos.estec.esa.int/taste/opengeode.git ; cd opengeode ; make install; popd
    # install sdl2promela
    - git clone https://github.com/n7space/sdl2promela.git
    - pushd sdl2promela ; make install ; popd
    # SpaceCreator
    - python3 ${PROJECT_ROOT}/scripts/prebuild.py --output_dir ${DOWNLOAD_DIR} --qt_version ${ENV_QT_VERSION} --qtcreator_version ${ENV_QTC_VERSION}


space-creator-dev:
  stage: build-test
  script:
    # build space creator
    - python3 ${PROJECT_ROOT}/scripts/build_spacecreator.py --env_dir ${DOWNLOAD_DIR} --env_qt_dir ${ENV_QT_BASE_DIR} --build_dir ${BUILD_DIR} --build_type Release
    # unit tests
    - cd ${DOWNLOAD_DIR}
    - export PATH=$PATH:${DOWNLOAD_DIR}/asn1scc
    - export PATH=$PATH:/root/.local/bin
    - cd ${PROJECT_ROOT}
    - ./scripts/run_tests.sh ${BUILD_DIR}
  cache:
    key: asn1scc
    paths:
      - build/asn1scc_bin
  artifacts:
    reports:
      junit: build/tst_*-result.xml
  rules:
    # For pipelines created when a merge request is created or updated
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event'"


space-creator:
  stage: build-test-and-bundle
  script:
    # build space creator
    - python3 ${PROJECT_ROOT}/scripts/build_spacecreator.py --env_dir ${DOWNLOAD_DIR} --env_qt_dir ${ENV_QT_BASE_DIR} --build_dir ${BUILD_DIR} --build_type Release
    # unit tests
    - cd ${DOWNLOAD_DIR}
    - export PATH=$PATH:${DOWNLOAD_DIR}/asn1scc
    - export PATH=$PATH:/root/.local/bin
    - cd ${PROJECT_ROOT}
    - ./scripts/run_tests.sh ${BUILD_DIR}
    - source ./VERSION # set ${SC_VERSION}. The version of the project is stored the shell script VERSION
    - python3 ${PROJECT_ROOT}/scripts/create_appimage.py --env_dir ${DOWNLOAD_DIR} --env_qt_dir ${ENV_QT_BASE_DIR} --project_version ${SC_VERSION}
  cache:
    key: asn1scc
    paths:
      - build/asn1scc_bin
  artifacts:
    reports:
      junit: build/tst_*-result.xml
    paths:
      - package
    expire_in: 2 days
  rules:
     #- if: "$CI_COMMIT_BRANCH == 'master'"
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event'"


space-creator-coverage:
  stage: code-coverage
  coverage: '/Code coverage: ^ *lines\.*:\s+(\d+.\d+\%)/'
  script:
    - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu/qtcreator:/usr/lib/x86_64-linux-gnu/qtcreator/plugins
    - export QT_QPA_PLATFORM=offscreen
    - mkdir -p coverage ; cd coverage ; rm * -rf
    - cmake -G Ninja -DCOVERAGE_ENABLED=ON ..
    - ninja ; ../scripts/run_tests.sh . ; ninja coverage ; ninja coverage_html
  cache:
    key: asn1scc
    paths:
      - build/asn1scc_bin
  rules:
    - if: "$CI_COMMIT_BRANCH == 'master'"
      when: never


space-creator-doc:
  stage: documentation
  script:
    - ./scripts/generate_documentation.sh
  artifacts:
    paths:
      - doc/doxygen/html
    expire_in: 2 days
  rules:
    - if: "$CI_COMMIT_BRANCH == 'master'"
      when: never
