-- This is autogenerated AADL snippet for %{ProjectName} driver project.
-- Please merge contents of this file with ocarina_components.aadl from your Taste instance
-- installation (usually /home/taste/tool-src/misc/aadl-library/ocarina_components.aadl).
--
-- After Taste installation update, the original contents of ocarina_components.aadl will be restored!
-- If you want to keep using your driver, you will have to merge the following code with
-- ocarina_components.aadl again.

-- ############################################################################
-- Paste the following code into "Configuration Type" section.
-- ############################################################################

data configuration_type_%{ProjectName}
properties
  Type_Source_Name => "%{ProjectNameUpperCaseEscaped}-Conf-T";
  Deployment::ASN1_Module_Name => "%{ProjectNameUpperCaseEscaped}-DRIVER-CONFIGURATION";
  Source_Language => (ASN1);
  Source_Text => ("%{AsnConfigFileInstallationTargetX86Linux}");
end configuration_type_%{ProjectName};

-- ############################################################################
-- Paste the following code into "Device" section.
-- ############################################################################

  ---------------------------
  -- device %{ProjectName} --
  ---------------------------
  device device_%{ProjectName}
  features
    link : requires bus access %{ReqBusAccess};
  end device_%{ProjectName};

  device implementation device_%{ProjectName}.linux
  properties
    Deployment::Driver_Name       => "%{ProjectNameLowerCase}";
    Device_Driver                 => classifier (ocarina_drivers_%{ProjectName}::%{ProjectName}.linux);
    Initialize_Entrypoint         => classifier (ocarina_drivers_%{ProjectName}::driver_%{ProjectName}_init);
    Provided_Virtual_Bus_Class    => (classifier (ocarina_buses::generic.linux));
  end device_%{ProjectName}.linux;

-- ############################################################################
-- Paste the following code into "Driver" section.
-- ############################################################################

package ocarina_drivers_%{ProjectName}
public

  with Deployment;
  with ocarina_drivers;

  subprogram driver_%{ProjectName}_poll
  properties
    Source_Language => (Cpp);
    Source_Name => "%{ProjectNameLowerCase}_DriverPoll";
    Source_Text => ("%{ProjectNameLowerCase}.cc",
                    "%{ProjectNameLowerCase}.h");
  end driver_%{ProjectName}_poll;

  subprogram driver_%{ProjectName}_send
  properties
    Source_Language => (Cpp);
    Source_Name => "%{ProjectNameLowerCase}_DriverSend";
    Source_Text => ("%{ProjectNameLowerCase}.cc",
                    "%{ProjectNameLowerCase}.h");
  end driver_%{ProjectName}_send;

  subprogram driver_%{ProjectName}_init
  properties
    Source_Language => (Cpp);
    Source_Name => "%{ProjectNameLowerCase}_DriverInit";
    Source_Text => ("%{ProjectNameLowerCase}.cc",
                    "%{ProjectNameLowerCase}.h");
  end driver_%{ProjectName}_init;

  thread driver_%{ProjectName}_poller
  end driver_%{ProjectName}_poller;

  thread implementation driver_%{ProjectName}_poller.impl
  calls
    mycall : {
    pspg : subprogram driver_%{ProjectName}_poll;
    };
  properties
    Period => 1000ms;
    Dispatch_Protocol => Periodic;
  end driver_%{ProjectName}_poller.impl;

  abstract %{ProjectName}
  properties
    Deployment::Version  => "1.0";
    Deployment::Help     => "Write your ASN.1 configuration here";
    Deployment::Configuration_Type => classifier (ocarina_drivers::configuration_type_%{ProjectName});
  end %{ProjectName};

  abstract implementation %{ProjectName}.linux
  subcomponents
    receiver : thread driver_%{ProjectName}_poller.impl;
    sender : subprogram driver_%{ProjectName}_send;
  end %{ProjectName}.linux;

end ocarina_drivers_%{ProjectName};
