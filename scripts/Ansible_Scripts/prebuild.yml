---
    - hosts: localhost
      pre_tasks:
        - name: Install dependencies
          become: yes
          apt:
            state: present
            name:
              - build-essential
              - git
              - g++
              - cmake
              - cmake-data
              - ninja-build
              - make
              - gcovr
              - lcov
              - ccache
              - cccc
              - doxygen
              - graphviz
              - zip
              - p7zip-full
              - curl
              - wget
              - default-jre
              - uuid-dev
              - pkg-config
              - fuse
              - python3-pip
              - clang-format
              - spin
              - python3-pygraphviz
              - python3-singledispatch
              - python3-stringtemplate3
              - python3-pexpect
              - xmldiff

        - name: Add backport repository
          become: yes
          apt_repository:
            repo: deb http://ftp.debian.org/debian buster-backports main
            state: present
        - name: Update to backported cmake version
          become: yes
          apt:
            name: cmake
            state: present
            default_release: buster-backports
            update_cache: yes

        - name: Install PIP dependencies
          become: yes
          pip:
           name:
            - black==21.10b0
            - multipledispatch
            - pyside6
            - pytest
            - py7zr
            - aqtinstall
            - GitPython

      vars:
            qt_extra_modules: " --modules qtwebsockets qt5compat"
            qtc_short_version: "{{ qtc_version[:3] }}" #expected format 'X.Y.Z'
            qtc_base_url: "https://download.qt.io/official_releases/qtcreator/{{ qtc_short_version }}/{{ qtc_version }}/installer_source/linux_x64/"
            qtc_bin_url: "{{ qtc_base_url }}qtcreator.7z"
            qtc_dev_url: "{{ qtc_base_url }}qtcreator_dev.7z"
            asn_url: "https://github.com/ttsiodras/asn1scc/releases/download/4.2.4.7f/asn1scc-bin-4.2.4.7f.tar.bz2"
            fuzzer_url: "https://github.com/n7space/asn1scc.Fuzzer/releases/download/0.9/asn1scc-Fuzzer-0.9-linux-x64.tar.gz"
            pusc_url: "https://github.com/n7space/asn1-pusc-lib/releases/download/1.1.0/Asn1Acn-PusC-Library-1.1.0.7z "
            env_qt_install_dir: "{{ env_dir }}/Qt"
            env_qt_dir: "{{ env_dir }}/Qt/{{ env_qt_version }}/gcc_64/"
            env_qt_libexec_dir: "{{ env_qt_dir }}/libexec/"
            env_qt_bin_dir: "{{ env_qt_dir }}/bin/"
            install_dir: "{{ project_dir }}/install/"
            app_dir: "{{ env_dir }}/spacecreator.AppDir"

            app_lib_dir: "{{ app_dir }}/lib/Qt/lib"
            fuzzer_target_dir: "{{ app_dir }}/libexec/qtcreator"
            pusc_target_dir: "{{ app_dir }}/share/qtcreator/asn1acn/libs/PUS-C/"
            space_project_build_dir: "{{ project_dir }}/spacecreator_build_qt6"
            base_qt_cmd: "aqt install-qt --outputdir {{ env_qt_install_dir }} --base 'https://download.qt.io/' linux desktop {{ env_qt_version }}"
            download_timeout: 150
            grantlee_tag: "v5.3.1"
            qmake_dir: "{{ env_qt_dir }}"
            grantlee_source_dir: "{{ download_dir }}/grantlee/"
            grantlee_build_dir: "{{ env_dir }}/grantlee_build/"
            grantlee_ninja_cmd: " cmake -GNinja -DCMAKE_PREFIX_PATH:STRING={{ env_qt_dir }} -DQT_QMAKE_EXECUTABLE:STRING={{ qmake_dir }}  -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX={{ env_qt_dir }} -B {{ grantlee_build_dir }} -S {{ grantlee_source_dir }} -DGRANTLEE_BUILD_WITH_QT6=ON -Wmaybe-uninitialized"
            spacecreator_ninja_config_cmd: " cmake -GNinja  -S{{project_dir }} -B{{ space_project_build_dir }} -DCMAKE_BUILD_TYPE=Release -DBUILD_PATCH_NUMBER={{ patch_version }} -DCMAKE_PREFIX_PATH={{ env_qt_dir }}/lib/cmake/ -DQT_QMAKE_EXECUTABLE:STRING={{ env_qt_dir }}/bin/qmake -DQTC_INSTALL={{ app_dir }} -DQTC_SOURCE={{ app_dir }} -DBUILD_PLUGIN_ASN1=False -DENABLE_FORMAT_CHECK:BOOL=OFF"
            spacecreator_ninja_build_cmd: " cmake --build {{ space_project_build_dir }} --target all"
            p7zip: "7z"
      tasks:
          - name: Create dirs
            file:
              path: "{{ item }}"
              state: directory
              mode: 0755
            loop:
              - "{{ env_dir }}"
              - "{{ env_qt_install_dir }}"
              - "{{ env_qt_dir }}"
              - "{{ env_qt_libexec_dir }}"
              - "{{ env_qt_bin_dir }}"
              - "{{ app_dir }}"
              - "{{ app_dir }}/libexec"
              - "{{ app_lib_dir }}"
              - "{{ pusc_target_dir }}"
              - "{{ download_dir }}"

            # UNCOMMENT IF RUNNING ANSIBLE SCRIPT IN STADALONE MODE (AKA THE SCRIPT HAS NOT BEEN DOWNLOADED AS PART OF THE REPO)
                #   - name: Clone spacecreator repository
                #     git:
                #       repo: "https://gitrepos.estec.esa.int/taste/spacecreator.git"
                #       dest: "{{ project_dir }}"

          - name: Download Qt
            command:
              cmd: "{{ base_qt_cmd}} {% if env_qt_version is defined and  env_qt_version[0]  == '6' %}{{qt_extra_modules}}{%endif%}"
              creates:  "{{ env_qt_install_dir }}/{{ env_qt_version}}/gcc_64/bin/qmake6"

          - name: Download Qt Creator release version
            retries: 2
            get_url:
                url: "{{ qtc_bin_url }}"
                dest: "{{ download_dir }}/qtcreator.7z"
                mode: '0755'
                timeout: "{{ download_timeout }}"

          - name: Extract Qt Creator release version
            command:
              cmd: "{{ p7zip }} x {{ download_dir }}/qtcreator.7z -o{{ app_dir }}"
              creates: "{{ app_dir }}/bin/qtcreator"

          - name: Download Qt Creator development version
            retries: 2
            get_url:
                url: "{{ qtc_dev_url }}"
                dest: "{{ download_dir }}/qtcreator_dev.7z"
                mode: '0755'
                timeout: "{{ download_timeout }}"

          - name: Extract Qt Creator development version
            command:
              cmd: "{{ p7zip }} -y  x {{ download_dir }}/qtcreator_dev.7z -o{{ app_dir }}"
              creates: "{{ app_dir }}/include"

          - name: Copy additional Qt modules from  "{{ app_lib_dir }}" to "{{ env_qt_dir }}/lib"
            copy:
                src: "{{ item }}"
                dest: "{{ app_lib_dir }}"
                mode: 0755
            with_fileglob:
                - "{{ env_qt_dir }}/lib/libQt*WebSockets*"

          - name: Download asn1scc language server
            get_url:
                url: "https://github.com/ttsiodras/asn1scc/releases/download/4.3.1.1/asn1scc_lsp_linux-x64-4.3.1.1.tar.bz2"
                dest: "{{ download_dir }}/asn1scc_lsp_linux-x64-4.3.1.1.tar.bz2"
                mode: '0755'
                timeout: "{{ download_timeout }}"

          - name: Extract archive of asn1scc language server  "{{ env_dir }}"
            unarchive:
                src: "{{ download_dir }}/asn1scc_lsp_linux-x64-4.3.1.1.tar.bz2"
                dest: "{{ env_dir }}"
                creates: "{{ env_dir }}/asn1scc_lsp_linux-x64/System.dll"

          - name: Download Grant Lee Template Library
            git:
              repo: "https://gitrepos.estec.esa.int/taste/grantlee.git"
              dest: "{{ download_dir }}/grantlee"
              version: "{{ grantlee_tag }}"

          - name: Build Grant Lee Template Library
            command:
              cmd: "{{ grantlee_ninja_cmd }}"
              creates: "{{ grantlee_build_dir }}/build.ninja"

          - name: Install Grant Lee Template Library
            command:
              cmd: "cmake --build {{ grantlee_build_dir }} --target install"

          - name: Extract libzxb-util to "{{ app_lib_dir }}"
            unarchive:
                src: "{{ install_dir }}/libzxb-util.tar.gz"
                dest: "{{ app_lib_dir }}"

          - name: Download asn1scc
            get_url:
                url: "{{ asn_url }}"
                dest: "{{ download_dir }}/asn1scc-bin-4.2.4.7f.tar.bz2"
                mode: '0755'
                timeout: "{{ download_timeout }}"

          - name: Extract asn1scc to "{{ env_dir }}"
            unarchive:
                src: "{{ download_dir }}/asn1scc-bin-4.2.4.7f.tar.bz2"
                dest: "{{ env_dir }}"
                creates: "{{ env_dir }}/asn1scc/System.dll"

          - name: Download asn_fuzzer
            get_url:
                url: "{{ fuzzer_url }}"
                dest: "{{ download_dir }}/asn1scc-Fuzzer-0.9-linux-x64.tar.gz"
                mode: '0755'
                timeout: "{{ download_timeout }}"

          - name: Extract asn_fuzzer to "{{ fuzzer_target_dir }}"
            unarchive:
                src: "{{ download_dir }}/asn1scc-Fuzzer-0.9-linux-x64.tar.gz"
                dest: "{{ fuzzer_target_dir }}"
                creates: "{{ fuzzer_target_dir }}/asn1scc-Fuzzer"

          - name: Download Pus-C
            get_url:
                url: "{{ pusc_url }}"
                dest: "{{ download_dir }}/Asn1Acn-PusC-Library-1.1.0.7z"
                mode: '0755'
                timeout: "{{ download_timeout }}"

          - name: Extract Pus-C to "{{ pusc_target_dir }}"
            command:
              cmd: "{{ p7zip }} -y  x {{ download_dir }}/Asn1Acn-PusC-Library-1.1.0.7z -o{{ pusc_target_dir }}"
              creates: "{{ pusc_target_dir }}/ccsds"

          - name: Copy additional Additional AppImage files  "{{ install_dir }}/appimage" to "{{ app_dir }}"
            copy:
                src: "{{ item }}"
                dest: "{{ app_dir }}"
                mode: 0755
            with_fileglob:
                - "{{ install_dir }}/appimage/*"

          - name: Check if  "{{ env_qt_libexec_dir }}/qtqhelpgenerator" exists
            stat:
              path: "{{ env_qt_libexec_dir }}/qtqhelpgenerator"
            register: src_file

          - name: Copy "{{ env_qt_libexec_dir }}/qtqhelpgenerator" to "{{ app_dir }}/libexec"
            copy:
              src:  "{{ env_qt_libexec_dir }}/qtqhelpgenerator"
              dest: "{{ app_dir }}/libexec"
              recursive: yes
            when: src_file.stat.exists

          - name: Config spacecreator in "{{ space_project_build_dir }}"
            command:
              cmd: "{{ spacecreator_ninja_config_cmd }}"
              # creates: "{{ space_project_build_dir }}/build.ninja"

          - name: Build spacecreator in "{{ space_project_build_dir }}"
            command:
                cmd: "cmake --build {{ space_project_build_dir }} --target all"
                creates: "{{ space_project_build_dir }}/bin/IVeditor"
