include(CMakeDependentOption)
cmake_dependent_option(ENABLE_LD_GOLD "Use GNU gold linker" ON "UNIX" OFF)
cmake_dependent_option(ENABLE_LD_LLVM_LLD "Use LLVM lld linker" OFF "UNIX" OFF)
cmake_dependent_option(ENABLE_LD_MOLD "Use Mold linker" OFF "UNIX" OFF)

set(LD_GOLD_FOUND FALSE)
if(ENABLE_LD_GOLD)
  execute_process(COMMAND ${CMAKE_C_COMPILER} -fuse-ld=gold -Wl,--version ERROR_QUIET OUTPUT_VARIABLE LD_VERSION)
  if(LD_VERSION MATCHES "GNU gold")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=gold")
    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=gold")
    set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=gold")
    set(LD_GOLD_FOUND TRUE)
    message(STATUS "Linker: GNU gold")
  else()
    message(WARNING "GNU gold linker is not available, falling back to default system linker")
  endif()
else()
endif()

set(LD_LLVM_LLD_FOUND FALSE)
if(ENABLE_LD_LLVM_LLD)
  execute_process(COMMAND ${CMAKE_C_COMPILER} -fuse-ld=lld -Wl,--version ERROR_QUIET OUTPUT_VARIABLE LD_VERSION)
  if(LD_VERSION MATCHES "LLVM lld")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=lld")
    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=lld")
    set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=lld")
    set(LD_LLVM_LLD_FOUND TRUE)
    message(STATUS "Linker: LLVM lld")
  else()
    message(WARNING "LLVM lld linker is not available, falling back to default system linker")
  endif()
else()
endif()

set(LD_MOLD_FOUND FALSE)
if(ENABLE_LD_MOLD)
  execute_process(COMMAND ${CMAKE_C_COMPILER} -fuse-ld=mold -Wl,--version ERROR_QUIET OUTPUT_VARIABLE LD_VERSION)
  if(LD_VERSION MATCHES "mold")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=mold")
    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=mold")
    set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=mold")
    set(LD_GOLD_FOUND TRUE)
    message(STATUS "Linker: Mold")
  else()
    message(WARNING "Mold linker is not available, falling back to default system linker")
  endif()
else()
endif()
