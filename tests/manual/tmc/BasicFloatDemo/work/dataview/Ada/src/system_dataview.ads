pragma Style_Checks (Off);
--  Code automatically generated by asn1scc tool
pragma Warnings (Off, "no entities of ""Interfaces"" are referenced");
with Interfaces;
pragma Warnings (On, "no entities of ""Interfaces"" are referenced");

pragma Warnings (Off, "use clause for package ""Interfaces"" has no effect");
use Interfaces;
pragma Warnings (On, "use clause for package ""Interfaces"" has no effect");

with adaasn1rtl;


pragma Warnings (Off, "unit ""System"" is not referenced");
with System;
pragma Warnings (On, "unit ""System"" is not referenced");

pragma Warnings (Off, "use clause for package ""adaasn1rtl"" has no effect");
use adaasn1rtl;
pragma Warnings (On, "use clause for package ""adaasn1rtl"" has no effect");

pragma Warnings (Off, "use clause for type");
pragma Warnings (Off, "is already use-visible through package use clause at line");
use type adaasn1rtl.OctetBuffer;
use type adaasn1rtl.BitArray;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;
pragma Warnings (On, "use clause for type");
pragma Warnings (On, "is already use-visible through package use clause at line");



package System_Dataview with SPARK_Mode
is


subtype asn1SccPID_Range is adaasn1rtl.Asn1UInt range 0 .. 4;


function asn1SccPID_Range_Equal(val1, val2 : asn1SccPID_Range) return Boolean;

ERR_PID_RANGE:constant Integer := 41; -- (0..4)
function asn1SccPID_Range_IsConstraintValid(val : asn1SccPID_Range) return adaasn1rtl.ASN1_RESULT;

function asn1SccPID_Range_Init  return asn1SccPID_Range is
(0);
subtype asn1SccPID_index_range is Integer range 0..4;
type asn1SccPID is (asn1Sccactuator, asn1Sccegse, asn1Sccsensor, asn1Sccsystemcontrol, asn1Sccenv) with Size => adaasn1rtl.Enumerated_Size;
for asn1SccPID use
    (asn1Sccactuator => 0, asn1Sccegse => 1, asn1Sccsensor => 2, asn1Sccsystemcontrol => 3, asn1Sccenv => 4);

function asn1SccPID_Equal(val1, val2 : asn1SccPID) return Boolean;

ERR_PID:constant Integer := 46; -- actuator | egse | sensor | systemcontrol | env
function asn1SccPID_IsConstraintValid(val : asn1SccPID) return adaasn1rtl.ASN1_RESULT;

function asn1SccPID_Init  return asn1SccPID is
(asn1Sccactuator);
pragma Warnings (Off, "there are no others");
 
pragma Warnings (On, "there are no others");
private
   --# hide System_Dataview;


end System_Dataview;