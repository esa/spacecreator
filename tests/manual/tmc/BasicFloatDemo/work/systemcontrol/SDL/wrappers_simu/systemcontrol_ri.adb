-- DO NOT EDIT THIS FILE, IT WILL BE OVERWRITTEN DURING THE BUILD
-- Generated by TASTE (kazoo/templates/glue/language_wrappers/ri_adb/function.tmplt)
with Simulator;            use Simulator;
with Simulation_Dataview;  use Simulation_Dataview;
with System_Dataview;      use System_Dataview;
package body Systemcontrol_RI is

   procedure Controlsignal
      (X : in out asn1SccT_Float;
       Dest_PID : asn1sccPID := asn1sccEnv) is
      --  Generate an event to the simulator for the output
      Event_Out_Actuator : asn1SccObservable_Event (Kind => Output_Event_PRESENT);
   begin
      if Dest_PID = asn1sccEnv or Dest_PID = asn1sccActuator then
         Event_Out_Actuator.Output_Event :=
           (Source => asn1sccSystemcontrol,
            Dest   => asn1sccActuator,
            Event  => (Kind => Systemcontrol_PRESENT,
                       Systemcontrol =>
                         (Kind   => Msg_Out_PRESENT,
                          Msg_Out =>
                             (Kind => Controlsignal_PRESENT,
                        Controlsignal =>
                              (X => X)))));
         Push_Event (Event_Out_Actuator);
      end if;
   
   end Controlsignal;
   
   
   
   procedure Tm
      (Y : in out asn1SccT_Int;
       Dest_PID : asn1sccPID := asn1sccEnv) is
      --  Generate an event to the simulator for the output
      Event_Out_Egse : asn1SccObservable_Event (Kind => Output_Event_PRESENT);
   begin
      if Dest_PID = asn1sccEnv or Dest_PID = asn1sccEgse then
         Event_Out_Egse.Output_Event :=
           (Source => asn1sccSystemcontrol,
            Dest   => asn1sccEgse,
            Event  => (Kind => Systemcontrol_PRESENT,
                       Systemcontrol =>
                         (Kind   => Msg_Out_PRESENT,
                          Msg_Out =>
                             (Kind => Tm_PRESENT,
                        Tm =>
                              (Y => Y)))));
         Push_Event (Event_Out_Egse);
      end if;
   
   end Tm;

end Systemcontrol_RI;
