-- DO NOT EDIT THIS FILE, IT WILL BE OVERWRITTEN DURING THE BUILD
-- Generated by TASTE (kazoo/templates/glue/language_wrappers/ri_adb/function.tmplt)
with Simulator;            use Simulator;
with Simulation_Dataview;  use Simulation_Dataview;
with System_Dataview;      use System_Dataview;
with demo_Timer_Manager;
with demo_Timer_Manager;
package body Sensor_RI is

   procedure Reset_Trigger (Dest_PID : asn1sccPID := asn1sccEnv) is
   begin
      --  The global state of the callee has been set, so we can make a direct call
         Demo_Timer_Manager.Reset_Sensor_Trigger;
   end Reset_Trigger;
   
   
   
   procedure Set_Trigger
      (Val : in out asn1SccT_Uint32;
       Dest_PID : asn1sccPID := asn1sccEnv) is
   begin
      --  The global state of the callee has been set, so we can make a direct call
         Demo_Timer_Manager.Set_Sensor_Trigger (Val);
   end Set_Trigger;
   
   
   
   procedure Reading
      (Signalvalue : in out asn1SccNumber;
       Dest_PID : asn1sccPID := asn1sccEnv) is
      --  Generate an event to the simulator for the output
      Event_Out_Controlsystem : asn1SccObservable_Event (Kind => Output_Event_PRESENT);
   begin
      if Dest_PID = asn1sccEnv or Dest_PID = asn1sccControlsystem then
         Event_Out_Controlsystem.Output_Event :=
           (Source => asn1sccSensor,
            Dest   => asn1sccControlsystem,
            Event  => (Kind => Sensor_PRESENT,
                       Sensor =>
                         (Kind   => Msg_Out_PRESENT,
                          Msg_Out =>
                             (Kind => Reading_PRESENT,
                        Reading =>
                              (Signalvalue => Signalvalue)))));
         Push_Event (Event_Out_Controlsystem);
      end if;
   
   end Reading;

end Sensor_RI;
