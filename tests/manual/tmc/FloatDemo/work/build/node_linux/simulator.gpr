with "asn1_iterators";

library project Simulator is

   for Library_Name use "demo";
   for Library_Dir use "../../simulation";
   for Library_Kind use "dynamic";
   --  In order to get the libinit and libfinal functions:
   for Library_Standalone use "encapsulated";
   for Library_Options use ("-lrt", "-lm");
   for Interfaces use
     ("simulation_dataview.ads",
      "simulation_timers_dataview.ads",
      "system_dataview.ads",
      "floatdemo_dataview.ads",
      "taste_basictypes.ads",
      "system_dataview.ads",
      "board_config.ads",
      "simulator.ads",
      "simulator_interface.ads",
      "taste_basictypes.ads",
      "adaasn1rtl-encoding.ads",
      "asn1_gser.ads",
      
      "floatdemo_dataview.ads",
      
      "floatdemo_dataview.ads",
      
      "floatdemo_dataview.ads",
      
      
      
      
      
      
      "actuator.ads",
      "actuator_ri.ads",
      "actuator_pi.ads",
      "actuator_events.ads",
      "actuator_datamodel.ads",
      
      "controlsystem.ads",
      "controlsystem_ri.ads",
      "controlsystem_pi.ads",
      "controlsystem_events.ads",
      "controlsystem_datamodel.ads",
      
      "demo_timer_manager.ads",
      "demo_timer_manager_ri.ads",
      "demo_timer_manager_pi.ads",
      "demo_timer_manager_events.ads",
      "demo_timer_manager_datamodel.ads",
      
      "host.ads",
      "host_ri.ads",
      "host_pi.ads",
      "host_events.ads",
      "host_datamodel.ads",
      
      "sensor.ads",
      "sensor_ri.ads",
      "sensor_pi.ads",
      "sensor_events.ads",
      "sensor_datamodel.ads",
      
      "adaasn1rtl.ads");

   type Build_Type is ("Debug", "Release");
   Build : Build_Type := external ("CFG", "Debug");

   --  following to be updated with all relevant source dirs
   for Source_Dirs use (
       --  "../../dataview/C",
       "../../dataview/iterators",
       "../../dataview/Ada/asn1rtl",
       "../../dataview/Ada/src",
       "../../dataview/Ada/boards/x86",
       "../../actuator/SDL/code",
       --  "../../actuator/SDL/wrappers",
       "../../actuator/SDL/wrappers_simu",
       "../../controlsystem/SDL/code",
       --  "../../controlsystem/SDL/wrappers",
       "../../controlsystem/SDL/wrappers_simu",
       "../../demo_timer_manager/Timer_Manager/code",
       --  "../../demo_timer_manager/Timer_Manager/wrappers",
       "../../demo_timer_manager/Timer_Manager/wrappers_simu",
       "../../host/SDL/code",
       --  "../../host/SDL/wrappers",
       "../../host/SDL/wrappers_simu",
       "../../sensor/SDL/code",
       --  "../../sensor/SDL/wrappers",
       "../../sensor/SDL/wrappers_simu",
        "simulation")
        & external_as_list("EXTERNAL_SOURCE_PATH", ":")
        & external_as_list("DEMO_EXTERNAL_SOURCE_PATH", ":")
        & external_as_list("ADA_INCLUDE_PATH", ":");

   for Object_Dir use "demo_simu_obj";
   -- for Exec_Dir   use "../../binaries";

   for Languages use ("Ada");

   package Naming is
       for Body_Suffix ("C++") use ".cc";
   end Naming;

   package Compiler is
      case Build is
         when "Release" =>
            for Default_Switches ("C") use
               ("-g",
                "-O2",
                "-DTARGET=native",
                "-DPOSIX",
                "-D_POSIX_SOURCE",
                "-D_GNU_SOURCE",
                "-Wall",
                "-Wextra",
                "-fdiagnostics-show-option",
                "-Wcast-align",
                "-Wswitch")
                & external_as_list("DEMO_USER_CFLAGS", " ")
                & external_as_list("USER_CFLAGS", " ");
         when "Debug" =>
            for Default_Switches ("Ada") use
               ("-Wall",
                "-Wextra",
                "-Wcast-align")
                & external_as_list("DEMO_USER_CFLAGS", " ")
                & external_as_list("USER_CFLAGS", " ");
      end case;
   end Compiler;
end Simulator;
