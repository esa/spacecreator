--  TASTE Concurrency View - Generated by Kazoo, do not edit manually
--  Generated by the template: ~/tool-src/kazoo/templates/concurrency_view/aadl_2_threads/system.tmplt

package Actuator_Controlsignal_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Actuator_Controlsignal
features
   INPORT_Controlsignal : in event data port DataView::Number_Buffer.impl
      { Compute_Execution_Time =>  0 ms ..  0 ms;
        Queue_Size =>  1;
        Compute_Entrypoint_Source_Text => "Demo_TASTE_Interface.Actuator_Controlsignal_controlSignal"; };
end Actuator_Controlsignal;

thread implementation Actuator_Controlsignal.others
properties
   Activate_Entrypoint_Source_Text => "Demo_TASTE_Interface.Actuator_Controlsignal_Init";
   Dispatch_Protocol                 => Sporadic;
   Period                            => 1 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  1;
end Actuator_Controlsignal.others;

end Actuator_Controlsignal_Thread;
package Controlsystem_Configuration_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Controlsystem_Configuration
features
   INPORT_Configuration : in event data port DataView::PidConfig_Buffer.impl
      { Compute_Execution_Time =>  0 ms ..  0 ms;
        Queue_Size =>  1;
        Compute_Entrypoint_Source_Text => "Demo_TASTE_Interface.Controlsystem_Configuration_configuration"; };
   OUTPORT_Actuator_Controlsignal : out event data port DataView::Number_Buffer.impl;
   OUTPORT_Host_Tm : out event port;
end Controlsystem_Configuration;

thread implementation Controlsystem_Configuration.others
properties
   Activate_Entrypoint_Source_Text => "Demo_TASTE_Interface.Controlsystem_Configuration_Init";
   Dispatch_Protocol                 => Sporadic;
   Period                            => 1 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  1;
end Controlsystem_Configuration.others;

end Controlsystem_Configuration_Thread;
package Controlsystem_Reading_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Controlsystem_Reading
features
   INPORT_Reading : in event data port DataView::Number_Buffer.impl
      { Compute_Execution_Time =>  0 ms ..  0 ms;
        Queue_Size =>  1;
        Compute_Entrypoint_Source_Text => "Demo_TASTE_Interface.Controlsystem_Reading_reading"; };
   OUTPORT_Actuator_Controlsignal : out event data port DataView::Number_Buffer.impl;
   OUTPORT_Host_Tm : out event port;
end Controlsystem_Reading;

thread implementation Controlsystem_Reading.others
properties
   Activate_Entrypoint_Source_Text => "Demo_TASTE_Interface.Controlsystem_Reading_Init";
   Dispatch_Protocol                 => Sporadic;
   Period                            => 1 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  1;
end Controlsystem_Reading.others;

end Controlsystem_Reading_Thread;
package Demo_Timer_Manager_Tick_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Demo_Timer_Manager_Tick
features
   OUTPORT_Sensor_Sensor_Trigger : out event port;
end Demo_Timer_Manager_Tick;

thread implementation Demo_Timer_Manager_Tick.others
properties
   Activate_Entrypoint_Source_Text => "Demo_TASTE_Interface.Demo_Timer_Manager_Tick_Init";
   Compute_Entrypoint_Source_Text    => "Demo_TASTE_Interface.Demo_Timer_Manager_Tick_Tick";
   Dispatch_Protocol                 => Periodic;
   Period                            => 10 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  4096 Bytes;
   Priority                          =>  1;
end Demo_Timer_Manager_Tick.others;

end Demo_Timer_Manager_Tick_Thread;
package Host_Tm_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Host_Tm
features
   INPORT_Tm : in event port
      { Compute_Execution_Time =>  0 ms ..  0 ms;
        Queue_Size =>  1;
        Compute_Entrypoint_Source_Text => "Demo_TASTE_Interface.Host_Tm_tm"; };
   OUTPORT_Controlsystem_Configuration : out event data port DataView::PidConfig_Buffer.impl;
   OUTPORT_Sensor_Tc : out event port;
end Host_Tm;

thread implementation Host_Tm.others
properties
   Activate_Entrypoint_Source_Text => "Demo_TASTE_Interface.Host_Tm_Init";
   Dispatch_Protocol                 => Sporadic;
   Period                            => 1 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  1;
end Host_Tm.others;

end Host_Tm_Thread;
package Sensor_Tc_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Sensor_Tc
features
   INPORT_Tc : in event port
      { Compute_Execution_Time =>  0 ms ..  0 ms;
        Queue_Size =>  1;
        Compute_Entrypoint_Source_Text => "Demo_TASTE_Interface.Sensor_Tc_tc"; };
   OUTPORT_Controlsystem_Reading : out event data port DataView::Number_Buffer.impl;
end Sensor_Tc;

thread implementation Sensor_Tc.others
properties
   Activate_Entrypoint_Source_Text => "Demo_TASTE_Interface.Sensor_Tc_Init";
   Dispatch_Protocol                 => Sporadic;
   Period                            => 1 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  1;
end Sensor_Tc.others;

end Sensor_Tc_Thread;
package Sensor_Trigger_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Sensor_Trigger
features
   INPORT_Trigger : in event port
      { Compute_Execution_Time =>  0 ms ..  0 ms;
        Queue_Size =>  1;
        Compute_Entrypoint_Source_Text => "Demo_TASTE_Interface.Sensor_Trigger_trigger"; };
   OUTPORT_Controlsystem_Reading : out event data port DataView::Number_Buffer.impl;
end Sensor_Trigger;

thread implementation Sensor_Trigger.others
properties
   Activate_Entrypoint_Source_Text => "Demo_TASTE_Interface.Sensor_Trigger_Init";
   Dispatch_Protocol                 => Sporadic;
   Period                            => 1 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  4096 Bytes;
   Priority                          =>  1;
end Sensor_Trigger.others;

end Sensor_Trigger_Thread;

package Process_Package
public
   with arinc653;
   with Deployment;
   with DataView;
   with interfaceview::IV;
   with deploymentview::DV;
   with deploymentview::DV::node_linux;
   with Actuator_Controlsignal_Thread;
   with Controlsystem_Configuration_Thread;
   with Controlsystem_Reading_Thread;
   with Demo_Timer_Manager_Tick_Thread;
   with Host_Tm_Thread;
   with Sensor_Tc_Thread;
   with Sensor_Trigger_Thread;
   with Ocarina_Processors_X86;


--  Required by AIR to allow inter-partition communications
subprogram do_ports_polling
properties
   Source_Language => C;
   Source_Name     => "user_ports_polling";
   Source_Text     => ("air_polling.c");
end do_ports_polling;
thread Port_Poller
end    Port_Poller;

thread implementation Port_Poller.i
calls
   Mycalls: {
      P_Spg : subprogram do_ports_polling;
   };
properties
   Dispatch_Protocol => Periodic;
   Period            => 100 ms;
   Deadline          => 100 ms;
end Port_Poller.i;


processor node_linux_Board extends ocarina_processors_x86::x86
end node_linux_Board;

processor implementation node_linux_Board.final extends ocarina_processors_x86::x86.generic_linux
end node_linux_Board.final;


process Demo extends DeploymentView::DV::Node_Linux::Demo
end demo;

process implementation Demo.final
subcomponents
   
   actuator_controlSignal      : thread actuator_controlSignal_Thread::actuator_controlSignal.others;
   controlsystem_configuration : thread controlsystem_configuration_Thread::controlsystem_configuration.others;
   controlsystem_reading       : thread controlsystem_reading_Thread::controlsystem_reading.others;
   demo_timer_manager_Tick     : thread demo_timer_manager_Tick_Thread::demo_timer_manager_Tick.others;
   host_tm                     : thread host_tm_Thread::host_tm.others;
   sensor_tc                   : thread sensor_tc_Thread::sensor_tc.others;
   sensor_trigger              : thread sensor_trigger_Thread::sensor_trigger.others;
connections
   port Controlsystem_Configuration.OUTPORT_Actuator_Controlsignal -> Actuator_Controlsignal.INPORT_Controlsignal;
   port Controlsystem_Configuration.OUTPORT_Host_Tm                -> Host_Tm.INPORT_Tm;
   port Controlsystem_Reading.OUTPORT_Actuator_Controlsignal       -> Actuator_Controlsignal.INPORT_Controlsignal;
   port Controlsystem_Reading.OUTPORT_Host_Tm                      -> Host_Tm.INPORT_Tm;
   port Demo_Timer_Manager_Tick.OUTPORT_Sensor_Sensor_Trigger      -> Sensor_Trigger.INPORT_Trigger;
   port Host_Tm.OUTPORT_Controlsystem_Configuration                -> Controlsystem_Configuration.INPORT_Configuration;
   port Host_Tm.OUTPORT_Sensor_Tc                                  -> Sensor_Tc.INPORT_Tc;
   port Sensor_Tc.OUTPORT_Controlsystem_Reading                    -> Controlsystem_Reading.INPORT_Reading;
   port Sensor_Trigger.OUTPORT_Controlsystem_Reading               -> Controlsystem_Reading.INPORT_Reading;
end Demo.final;

system DeploymentView
end DeploymentView;

system implementation DeploymentView.final
subcomponents
   Demo : process Demo.final;
   Node_Linux_x86_linux : processor Node_Linux_Board.final;
properties
   Actual_Processor_Binding => (reference (Node_Linux_x86_linux)) applies to Demo;
--  patchable area (do not remove this line):
end DeploymentView.final;

end Process_Package;

-- deploymenttview.final
