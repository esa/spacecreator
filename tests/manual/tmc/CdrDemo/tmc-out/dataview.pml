#define Untitled_msc_States int
#define Untitled_msc_Context_state int
#define Untitled_msc_Context_init_done bool
#define Untitled_msc_Context_sender int
#define Untitled_Msc_Systemcommand_Selection int
#define Untitled_Msc_Actuator1_Event_Msg_In_Selection int
#define Untitled_Msc_Actuator1_Event_Msg_Out_Selection int
#define Untitled_Msc_Actuator1_Event_Selection int
#define Untitled_Msc_Actuator2_Event_Msg_In_Selection int
#define Untitled_Msc_Actuator2_Event_Msg_Out_Selection int
#define Untitled_Msc_Actuator2_Event_Selection int
#define Untitled_Msc_Egse_Event_Msg_In_Selection int
#define Untitled_Msc_Egse_Event_Msg_Out_Selection int
#define Untitled_Msc_Egse_Event_Selection int
#define Untitled_Msc_Modemanager_Event_Msg_In_Selection int
#define Untitled_Msc_Modemanager_Event_Msg_Out_Selection int
#define Untitled_Msc_Modemanager_Event_Selection int
#define Untitled_Msc_Function_Event_Selection int
#define Untitled_Msc_Observable_Event_Selection int
#define OptimizedDataItem int
#define OptimizedConfiguration_threshold1 int
#define OptimizedConfiguration_threshold2 int
#define Egse_systemtc_tc_goToIdle int
#define Egse_systemtc_tc_goToOperational_threshold1 int
#define Egse_systemtc_tc_goToOperational_threshold2 int
#define Egse_systemtc_tc_doReport int
#define Sensor_reading_x int
#define Actuator_States int
#define Actuator_Context_state int
#define Actuator_Context_init_done bool
#define Actuator_Context_sender int
#define Actuator_Context_cmd int
#define Actuator_Systemcommand_Selection int
#define Modemanager_States int
#define Modemanager_Context_state int
#define Modemanager_Context_init_done bool
#define Modemanager_Context_sender int
#define Modemanager_Context_status1 int
#define Modemanager_Context_status2 int
#define Modemanager_Context_r int
#define Modemanager_Context_threshold1 int
#define Modemanager_Context_threshold2 int
#define Modemanager_Context_stc_goToIdle int
#define Modemanager_Context_stc_goToOperational_threshold1 int
#define Modemanager_Context_stc_goToOperational_threshold2 int
#define Modemanager_Context_stc_doReport int
#define Modemanager_Context_stm_reading int
#define Modemanager_Context_stm_status1 int
#define Modemanager_Context_stm_status2 int
#define Modemanager_Systemcommand_Selection int
#define Dummy int
#define DataItem int
#define ActuatorIndex int
#define ActuatorCommand int
#define ActuatorStatus int
#define ActuatorConfiguration_threshold1 int
#define ActuatorConfiguration_threshold2 int
#define SystemCommand_goToIdle int
#define SystemCommand_goToOperational_threshold1 int
#define SystemCommand_goToOperational_threshold2 int
#define SystemCommand_doReport int
#define SystemTelemetry_reading int
#define SystemTelemetry_status1 int
#define SystemTelemetry_status2 int
#define T_Int32 int
#define T_UInt32 int
#define T_Int8 int
#define T_UInt8 int
#define T_Boolean bool
#define PID_Range int
#define PID int
#define Actuator1_Event_msg_in_actuatortc_tc int
#define Actuator1_Event_msg_out_actuatortm_tm int
#define Actuator2_Event_msg_in_actuatortc_tc int
#define Actuator2_Event_msg_out_actuatortm_tm int
#define Egse_Event_msg_in_systemtm_tm_reading int
#define Egse_Event_msg_in_systemtm_tm_status1 int
#define Egse_Event_msg_in_systemtm_tm_status2 int
#define Egse_Event_msg_out_systemtc_tc_goToIdle int
#define Egse_Event_msg_out_systemtc_tc_goToOperational_threshold1 int
#define Egse_Event_msg_out_systemtc_tc_goToOperational_threshold2 int
#define Egse_Event_msg_out_systemtc_tc_doReport int
#define Modemanager_Event_msg_in_actuatortm1_tm int
#define Modemanager_Event_msg_in_actuatortm2_tm int
#define Modemanager_Event_msg_in_reading_x int
#define Modemanager_Event_msg_in_systemtc_tc_goToIdle int
#define Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold1 int
#define Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold2 int
#define Modemanager_Event_msg_in_systemtc_tc_doReport int
#define Modemanager_Event_msg_out_actuatortc1_tc int
#define Modemanager_Event_msg_out_actuatortc2_tc int
#define Modemanager_Event_msg_out_systemtm_tm_reading int
#define Modemanager_Event_msg_out_systemtm_tm_status1 int
#define Modemanager_Event_msg_out_systemtm_tm_status2 int
#define Observer_State_Kind int
#define Function_Event_actuator1_msg_in_actuatortc_tc int
#define Function_Event_actuator1_msg_out_actuatortm_tm int
#define Function_Event_actuator2_msg_in_actuatortc_tc int
#define Function_Event_actuator2_msg_out_actuatortm_tm int
#define Function_Event_egse_msg_in_systemtm_tm_reading int
#define Function_Event_egse_msg_in_systemtm_tm_status1 int
#define Function_Event_egse_msg_in_systemtm_tm_status2 int
#define Function_Event_egse_msg_out_systemtc_tc_goToIdle int
#define Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define Function_Event_egse_msg_out_systemtc_tc_doReport int
#define Function_Event_modemanager_msg_in_actuatortm1_tm int
#define Function_Event_modemanager_msg_in_actuatortm2_tm int
#define Function_Event_modemanager_msg_in_reading_x int
#define Function_Event_modemanager_msg_in_systemtc_tc_goToIdle int
#define Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define Function_Event_modemanager_msg_in_systemtc_tc_doReport int
#define Function_Event_modemanager_msg_out_actuatortc1_tc int
#define Function_Event_modemanager_msg_out_actuatortc2_tc int
#define Function_Event_modemanager_msg_out_systemtm_tm_reading int
#define Function_Event_modemanager_msg_out_systemtm_tm_status1 int
#define Function_Event_modemanager_msg_out_systemtm_tm_status2 int
#define Named_Function_Event_event_actuator1_msg_in_actuatortc_tc int
#define Named_Function_Event_event_actuator1_msg_out_actuatortm_tm int
#define Named_Function_Event_event_actuator2_msg_in_actuatortc_tc int
#define Named_Function_Event_event_actuator2_msg_out_actuatortm_tm int
#define Named_Function_Event_event_egse_msg_in_systemtm_tm_reading int
#define Named_Function_Event_event_egse_msg_in_systemtm_tm_status1 int
#define Named_Function_Event_event_egse_msg_in_systemtm_tm_status2 int
#define Named_Function_Event_event_egse_msg_out_systemtc_tc_goToIdle int
#define Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define Named_Function_Event_event_egse_msg_out_systemtc_tc_doReport int
#define Named_Function_Event_event_modemanager_msg_in_actuatortm1_tm int
#define Named_Function_Event_event_modemanager_msg_in_actuatortm2_tm int
#define Named_Function_Event_event_modemanager_msg_in_reading_x int
#define Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define Named_Function_Event_event_modemanager_msg_in_systemtc_tc_doReport int
#define Named_Function_Event_event_modemanager_msg_out_actuatortc1_tc int
#define Named_Function_Event_event_modemanager_msg_out_actuatortc2_tc int
#define Named_Function_Event_event_modemanager_msg_out_systemtm_tm_reading int
#define Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status1 int
#define Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status2 int
#define Interface_Event_source int
#define Interface_Event_dest int
#define Interface_Event_event_actuator1_msg_in_actuatortc_tc int
#define Interface_Event_event_actuator1_msg_out_actuatortm_tm int
#define Interface_Event_event_actuator2_msg_in_actuatortc_tc int
#define Interface_Event_event_actuator2_msg_out_actuatortm_tm int
#define Interface_Event_event_egse_msg_in_systemtm_tm_reading int
#define Interface_Event_event_egse_msg_in_systemtm_tm_status1 int
#define Interface_Event_event_egse_msg_in_systemtm_tm_status2 int
#define Interface_Event_event_egse_msg_out_systemtc_tc_goToIdle int
#define Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define Interface_Event_event_egse_msg_out_systemtc_tc_doReport int
#define Interface_Event_event_modemanager_msg_in_actuatortm1_tm int
#define Interface_Event_event_modemanager_msg_in_actuatortm2_tm int
#define Interface_Event_event_modemanager_msg_in_reading_x int
#define Interface_Event_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define Interface_Event_event_modemanager_msg_in_systemtc_tc_doReport int
#define Interface_Event_event_modemanager_msg_out_actuatortc1_tc int
#define Interface_Event_event_modemanager_msg_out_actuatortc2_tc int
#define Interface_Event_event_modemanager_msg_out_systemtm_tm_reading int
#define Interface_Event_event_modemanager_msg_out_systemtm_tm_status1 int
#define Interface_Event_event_modemanager_msg_out_systemtm_tm_status2 int
#define Observable_Event_input_event_source int
#define Observable_Event_input_event_dest int
#define Observable_Event_input_event_event_actuator1_msg_in_actuatortc_tc int
#define Observable_Event_input_event_event_actuator1_msg_out_actuatortm_tm int
#define Observable_Event_input_event_event_actuator2_msg_in_actuatortc_tc int
#define Observable_Event_input_event_event_actuator2_msg_out_actuatortm_tm int
#define Observable_Event_input_event_event_egse_msg_in_systemtm_tm_reading int
#define Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status1 int
#define Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status2 int
#define Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToIdle int
#define Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define Observable_Event_input_event_event_egse_msg_out_systemtc_tc_doReport int
#define Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_tm int
#define Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_tm int
#define Observable_Event_input_event_event_modemanager_msg_in_reading_x int
#define Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_doReport int
#define Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_tc int
#define Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_tc int
#define Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_reading int
#define Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status1 int
#define Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status2 int
#define Observable_Event_output_event_source int
#define Observable_Event_output_event_dest int
#define Observable_Event_output_event_event_actuator1_msg_in_actuatortc_tc int
#define Observable_Event_output_event_event_actuator1_msg_out_actuatortm_tm int
#define Observable_Event_output_event_event_actuator2_msg_in_actuatortc_tc int
#define Observable_Event_output_event_event_actuator2_msg_out_actuatortm_tm int
#define Observable_Event_output_event_event_egse_msg_in_systemtm_tm_reading int
#define Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status1 int
#define Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status2 int
#define Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToIdle int
#define Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define Observable_Event_output_event_event_egse_msg_out_systemtc_tc_doReport int
#define Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_tm int
#define Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_tm int
#define Observable_Event_output_event_event_modemanager_msg_in_reading_x int
#define Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_doReport int
#define Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_tc int
#define Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_tc int
#define Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_reading int
#define Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status1 int
#define Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status2 int
#define Observable_Event_unhandled_input_source int
#define Observable_Event_unhandled_input_dest int
#define Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_tc int
#define Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_tm int
#define Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_tc int
#define Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_tm int
#define Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_reading int
#define Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status1 int
#define Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status2 int
#define Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle int
#define Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_doReport int
#define Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_tm int
#define Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_tm int
#define Observable_Event_unhandled_input_event_modemanager_msg_in_reading_x int
#define Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport int
#define Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_tc int
#define Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_tc int
#define Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading int
#define Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1 int
#define Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2 int
#define Events_Ty_elem_input_event_source int
#define Events_Ty_elem_input_event_dest int
#define Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_tc int
#define Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_tm int
#define Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_tc int
#define Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_tm int
#define Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_reading int
#define Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status1 int
#define Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status2 int
#define Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle int
#define Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_doReport int
#define Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_tm int
#define Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_tm int
#define Events_Ty_elem_input_event_event_modemanager_msg_in_reading_x int
#define Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport int
#define Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_tc int
#define Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_tc int
#define Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading int
#define Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1 int
#define Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2 int
#define Events_Ty_elem_output_event_source int
#define Events_Ty_elem_output_event_dest int
#define Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_tc int
#define Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_tm int
#define Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_tc int
#define Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_tm int
#define Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_reading int
#define Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status1 int
#define Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status2 int
#define Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle int
#define Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_doReport int
#define Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_tm int
#define Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_tm int
#define Events_Ty_elem_output_event_event_modemanager_msg_in_reading_x int
#define Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport int
#define Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_tc int
#define Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_tc int
#define Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading int
#define Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1 int
#define Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2 int
#define Events_Ty_elem_unhandled_input_source int
#define Events_Ty_elem_unhandled_input_dest int
#define Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc int
#define Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm int
#define Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc int
#define Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm int
#define Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading int
#define Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1 int
#define Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2 int
#define Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle int
#define Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport int
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm int
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm int
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_reading_x int
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport int
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc int
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc int
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading int
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1 int
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2 int
#define System_State_actuator1_queue_elem_input_event_source int
#define System_State_actuator1_queue_elem_input_event_dest int
#define System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc int
#define System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm int
#define System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc int
#define System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm int
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading int
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1 int
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2 int
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle int
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport int
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm int
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm int
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_reading_x int
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport int
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc int
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc int
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading int
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1 int
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2 int
#define System_State_actuator1_queue_elem_output_event_source int
#define System_State_actuator1_queue_elem_output_event_dest int
#define System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc int
#define System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm int
#define System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc int
#define System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm int
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading int
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1 int
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2 int
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle int
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport int
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm int
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm int
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_reading_x int
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport int
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc int
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc int
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading int
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1 int
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2 int
#define System_State_actuator1_queue_elem_unhandled_input_source int
#define System_State_actuator1_queue_elem_unhandled_input_dest int
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc int
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm int
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc int
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm int
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading int
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1 int
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2 int
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle int
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport int
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm int
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm int
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x int
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport int
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc int
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc int
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading int
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1 int
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2 int
#define System_State_actuator2_queue_elem_input_event_source int
#define System_State_actuator2_queue_elem_input_event_dest int
#define System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc int
#define System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm int
#define System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc int
#define System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm int
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading int
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1 int
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2 int
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle int
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport int
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm int
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm int
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_reading_x int
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport int
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc int
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc int
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading int
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1 int
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2 int
#define System_State_actuator2_queue_elem_output_event_source int
#define System_State_actuator2_queue_elem_output_event_dest int
#define System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc int
#define System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm int
#define System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc int
#define System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm int
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading int
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1 int
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2 int
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle int
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport int
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm int
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm int
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_reading_x int
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport int
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc int
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc int
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading int
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1 int
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2 int
#define System_State_actuator2_queue_elem_unhandled_input_source int
#define System_State_actuator2_queue_elem_unhandled_input_dest int
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc int
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm int
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc int
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm int
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading int
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1 int
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2 int
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle int
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport int
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm int
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm int
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x int
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport int
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc int
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc int
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading int
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1 int
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2 int
#define System_State_modemanager_queue_elem_input_event_source int
#define System_State_modemanager_queue_elem_input_event_dest int
#define System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc int
#define System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm int
#define System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc int
#define System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm int
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading int
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1 int
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2 int
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle int
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport int
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm int
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm int
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_reading_x int
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport int
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc int
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc int
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading int
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1 int
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2 int
#define System_State_modemanager_queue_elem_output_event_source int
#define System_State_modemanager_queue_elem_output_event_dest int
#define System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc int
#define System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm int
#define System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc int
#define System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm int
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading int
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1 int
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2 int
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle int
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport int
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm int
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm int
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_reading_x int
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport int
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc int
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc int
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading int
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1 int
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2 int
#define System_State_modemanager_queue_elem_unhandled_input_source int
#define System_State_modemanager_queue_elem_unhandled_input_dest int
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc int
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm int
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc int
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm int
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading int
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1 int
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2 int
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle int
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 int
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 int
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport int
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm int
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm int
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x int
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle int
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 int
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 int
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport int
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc int
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc int
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading int
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1 int
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2 int
#define System_State_actuator1_state int
#define System_State_actuator1_init_done bool
#define System_State_actuator1_sender int
#define System_State_actuator1_cmd int
#define System_State_actuator2_state int
#define System_State_actuator2_init_done bool
#define System_State_actuator2_sender int
#define System_State_actuator2_cmd int
#define System_State_modemanager_state int
#define System_State_modemanager_init_done bool
#define System_State_modemanager_sender int
#define System_State_modemanager_status1 int
#define System_State_modemanager_status2 int
#define System_State_modemanager_r int
#define System_State_modemanager_threshold1 int
#define System_State_modemanager_threshold2 int
#define System_State_modemanager_stc_goToIdle int
#define System_State_modemanager_stc_goToOperational_threshold1 int
#define System_State_modemanager_stc_goToOperational_threshold2 int
#define System_State_modemanager_stc_doReport int
#define System_State_modemanager_stm_reading int
#define System_State_modemanager_stm_status1 int
#define System_State_modemanager_stm_status2 int
#define TimerData_timer_enabled bool
#define TimerData_interval int
#define Untitled_msc_States_s0 0
#define Untitled_msc_States_s2 1
#define Untitled_msc_States_s1 2
#define Untitled_msc_States_serr 3
#define Untitled_msc_Context_state_s0 0
#define Untitled_msc_Context_state_s2 1
#define Untitled_msc_Context_state_s1 2
#define Untitled_msc_Context_state_serr 3
#define Untitled_msc_Context_sender_actuator 0
#define Untitled_msc_Context_sender_actuator1 1
#define Untitled_msc_Context_sender_actuator2 2
#define Untitled_msc_Context_sender_egse 3
#define Untitled_msc_Context_sender_modemanager 4
#define Untitled_msc_Context_sender_sensor 5
#define Untitled_msc_Context_sender_env 6
#define Untitled_Msc_Systemcommand_Selection_goToIdle_present 1
#define Untitled_Msc_Systemcommand_Selection_goToOperational_present 2
#define Untitled_Msc_Systemcommand_Selection_doReport_present 3
#define Untitled_Msc_Actuator1_Event_Msg_In_Selection_input_none_present 1
#define Untitled_Msc_Actuator1_Event_Msg_In_Selection_actuatortc_present 2
#define Untitled_Msc_Actuator1_Event_Msg_Out_Selection_actuatortm_present 1
#define Untitled_Msc_Actuator1_Event_Selection_msg_in_present 1
#define Untitled_Msc_Actuator1_Event_Selection_msg_out_present 2
#define Untitled_Msc_Actuator2_Event_Msg_In_Selection_input_none_present 1
#define Untitled_Msc_Actuator2_Event_Msg_In_Selection_actuatortc_present 2
#define Untitled_Msc_Actuator2_Event_Msg_Out_Selection_actuatortm_present 1
#define Untitled_Msc_Actuator2_Event_Selection_msg_in_present 1
#define Untitled_Msc_Actuator2_Event_Selection_msg_out_present 2
#define Untitled_Msc_Egse_Event_Msg_In_Selection_systemtm_present 1
#define Untitled_Msc_Egse_Event_Msg_Out_Selection_systemtc_present 1
#define Untitled_Msc_Egse_Event_Selection_msg_in_present 1
#define Untitled_Msc_Egse_Event_Selection_msg_out_present 2
#define Untitled_Msc_Modemanager_Event_Msg_In_Selection_input_none_present 1
#define Untitled_Msc_Modemanager_Event_Msg_In_Selection_actuatortm1_present 2
#define Untitled_Msc_Modemanager_Event_Msg_In_Selection_actuatortm2_present 3
#define Untitled_Msc_Modemanager_Event_Msg_In_Selection_reading_present 4
#define Untitled_Msc_Modemanager_Event_Msg_In_Selection_systemtc_present 5
#define Untitled_Msc_Modemanager_Event_Msg_Out_Selection_actuatortc1_present 1
#define Untitled_Msc_Modemanager_Event_Msg_Out_Selection_actuatortc2_present 2
#define Untitled_Msc_Modemanager_Event_Msg_Out_Selection_systemtm_present 3
#define Untitled_Msc_Modemanager_Event_Selection_msg_in_present 1
#define Untitled_Msc_Modemanager_Event_Selection_msg_out_present 2
#define Untitled_Msc_Function_Event_Selection_actuator1_present 1
#define Untitled_Msc_Function_Event_Selection_actuator2_present 2
#define Untitled_Msc_Function_Event_Selection_egse_present 3
#define Untitled_Msc_Function_Event_Selection_modemanager_present 4
#define Untitled_Msc_Function_Event_Selection_sensor_present 5
#define Untitled_Msc_Observable_Event_Selection_no_event_present 1
#define Untitled_Msc_Observable_Event_Selection_system_startup_present 2
#define Untitled_Msc_Observable_Event_Selection_input_event_present 3
#define Untitled_Msc_Observable_Event_Selection_output_event_present 4
#define Untitled_Msc_Observable_Event_Selection_unhandled_input_present 5
#define Egse_systemtc_tc_NONE 0
#define Egse_systemtc_tc_goToIdle_PRESENT 1
#define Egse_systemtc_tc_selection_goToIdle_PRESENT 1
#define Egse_systemtc_tc_goToOperational_PRESENT 2
#define Egse_systemtc_tc_selection_goToOperational_PRESENT 2
#define Egse_systemtc_tc_doReport_PRESENT 3
#define Egse_systemtc_tc_selection_doReport_PRESENT 3
#define Actuator_States_armed 0
#define Actuator_States_executing 1
#define Actuator_States_standby 2
#define Actuator_Context_state_armed 0
#define Actuator_Context_state_executing 1
#define Actuator_Context_state_standby 2
#define Actuator_Context_sender_actuator 0
#define Actuator_Context_sender_actuator1 1
#define Actuator_Context_sender_actuator2 2
#define Actuator_Context_sender_egse 3
#define Actuator_Context_sender_modemanager 4
#define Actuator_Context_sender_sensor 5
#define Actuator_Context_sender_env 6
#define Actuator_Context_cmd_actuatorArm 0
#define Actuator_Context_cmd_actuatorExecute 1
#define Actuator_Context_cmd_actuatorStandby 2
#define Actuator_Systemcommand_Selection_goToIdle_present 1
#define Actuator_Systemcommand_Selection_goToOperational_present 2
#define Modemanager_States_starting 0
#define Modemanager_States_operational 1
#define Modemanager_States_stopping 2
#define Modemanager_States_idle 3
#define Modemanager_Context_state_starting 0
#define Modemanager_Context_state_operational 1
#define Modemanager_Context_state_stopping 2
#define Modemanager_Context_state_idle 3
#define Modemanager_Context_sender_actuator 0
#define Modemanager_Context_sender_actuator1 1
#define Modemanager_Context_sender_actuator2 2
#define Modemanager_Context_sender_egse 3
#define Modemanager_Context_sender_modemanager 4
#define Modemanager_Context_sender_sensor 5
#define Modemanager_Context_sender_env 6
#define Modemanager_Context_status1_actuatorArmed 0
#define Modemanager_Context_status1_actuatorExecuting 1
#define Modemanager_Context_status1_actuatorStandingBy 2
#define Modemanager_Context_status2_actuatorArmed 0
#define Modemanager_Context_status2_actuatorExecuting 1
#define Modemanager_Context_status2_actuatorStandingBy 2
#define Modemanager_Context_stc_NONE 0
#define Modemanager_Context_stc_goToIdle_PRESENT 1
#define Modemanager_context_stc_selection_goToIdle_PRESENT 1
#define Modemanager_Context_stc_goToOperational_PRESENT 2
#define Modemanager_context_stc_selection_goToOperational_PRESENT 2
#define Modemanager_Context_stc_doReport_PRESENT 3
#define Modemanager_context_stc_selection_doReport_PRESENT 3
#define Modemanager_Context_stm_status1_actuatorArmed 0
#define Modemanager_Context_stm_status1_actuatorExecuting 1
#define Modemanager_Context_stm_status1_actuatorStandingBy 2
#define Modemanager_Context_stm_status2_actuatorArmed 0
#define Modemanager_Context_stm_status2_actuatorExecuting 1
#define Modemanager_Context_stm_status2_actuatorStandingBy 2
#define Modemanager_Systemcommand_Selection_goToIdle_present 1
#define Modemanager_Systemcommand_Selection_goToOperational_present 2
#define Modemanager_Systemcommand_Selection_doReport_present 3
#define ActuatorIndex_actuator1 0
#define ActuatorIndex_actuator2 1
#define ActuatorCommand_actuatorArm 0
#define ActuatorCommand_actuatorExecute 1
#define ActuatorCommand_actuatorStandby 2
#define ActuatorStatus_actuatorArmed 0
#define ActuatorStatus_actuatorExecuting 1
#define ActuatorStatus_actuatorStandingBy 2
#define SystemCommand_NONE 0
#define SystemCommand_goToIdle_PRESENT 1
#define Systemcommand_selection_goToIdle_PRESENT 1
#define SystemCommand_goToOperational_PRESENT 2
#define Systemcommand_selection_goToOperational_PRESENT 2
#define SystemCommand_doReport_PRESENT 3
#define Systemcommand_selection_doReport_PRESENT 3
#define SystemTelemetry_status1_actuatorArmed 0
#define SystemTelemetry_status1_actuatorExecuting 1
#define SystemTelemetry_status1_actuatorStandingBy 2
#define SystemTelemetry_status2_actuatorArmed 0
#define SystemTelemetry_status2_actuatorExecuting 1
#define SystemTelemetry_status2_actuatorStandingBy 2
#define PID_actuator 0
#define PID_actuator1 1
#define PID_actuator2 2
#define PID_egse 3
#define PID_modemanager 4
#define PID_sensor 5
#define PID_env 6
#define Actuator1_Event_NONE 0
#define Actuator1_Event_msg_in_NONE 0
#define Actuator1_Event_msg_in_input_none_PRESENT 1
#define Actuator1_event_msg_in_selection_input_none_PRESENT 1
#define Actuator1_Event_msg_in_actuatortc_tc_actuatorArm 0
#define Actuator1_Event_msg_in_actuatortc_tc_actuatorExecute 1
#define Actuator1_Event_msg_in_actuatortc_tc_actuatorStandby 2
#define Actuator1_Event_msg_in_actuatortc_PRESENT 2
#define Actuator1_event_msg_in_selection_actuatortc_PRESENT 2
#define Actuator1_Event_msg_in_PRESENT 1
#define Actuator1_event_selection_msg_in_PRESENT 1
#define Actuator1_Event_msg_out_NONE 0
#define Actuator1_Event_msg_out_actuatortm_tm_actuatorArmed 0
#define Actuator1_Event_msg_out_actuatortm_tm_actuatorExecuting 1
#define Actuator1_Event_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Actuator1_Event_msg_out_actuatortm_PRESENT 1
#define Actuator1_event_msg_out_selection_actuatortm_PRESENT 1
#define Actuator1_Event_msg_out_PRESENT 2
#define Actuator1_event_selection_msg_out_PRESENT 2
#define Actuator2_Event_NONE 0
#define Actuator2_Event_msg_in_NONE 0
#define Actuator2_Event_msg_in_input_none_PRESENT 1
#define Actuator2_event_msg_in_selection_input_none_PRESENT 1
#define Actuator2_Event_msg_in_actuatortc_tc_actuatorArm 0
#define Actuator2_Event_msg_in_actuatortc_tc_actuatorExecute 1
#define Actuator2_Event_msg_in_actuatortc_tc_actuatorStandby 2
#define Actuator2_Event_msg_in_actuatortc_PRESENT 2
#define Actuator2_event_msg_in_selection_actuatortc_PRESENT 2
#define Actuator2_Event_msg_in_PRESENT 1
#define Actuator2_event_selection_msg_in_PRESENT 1
#define Actuator2_Event_msg_out_NONE 0
#define Actuator2_Event_msg_out_actuatortm_tm_actuatorArmed 0
#define Actuator2_Event_msg_out_actuatortm_tm_actuatorExecuting 1
#define Actuator2_Event_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Actuator2_Event_msg_out_actuatortm_PRESENT 1
#define Actuator2_event_msg_out_selection_actuatortm_PRESENT 1
#define Actuator2_Event_msg_out_PRESENT 2
#define Actuator2_event_selection_msg_out_PRESENT 2
#define Egse_Event_NONE 0
#define Egse_Event_msg_in_NONE 0
#define Egse_Event_msg_in_systemtm_tm_status1_actuatorArmed 0
#define Egse_Event_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define Egse_Event_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define Egse_Event_msg_in_systemtm_tm_status2_actuatorArmed 0
#define Egse_Event_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define Egse_Event_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define Egse_Event_msg_in_systemtm_PRESENT 1
#define Egse_event_msg_in_selection_systemtm_PRESENT 1
#define Egse_Event_msg_in_PRESENT 1
#define Egse_event_selection_msg_in_PRESENT 1
#define Egse_Event_msg_out_NONE 0
#define Egse_Event_msg_out_systemtc_tc_NONE 0
#define Egse_Event_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define Egse_event_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define Egse_Event_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define Egse_event_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define Egse_Event_msg_out_systemtc_tc_doReport_PRESENT 3
#define Egse_event_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define Egse_Event_msg_out_systemtc_PRESENT 1
#define Egse_event_msg_out_selection_systemtc_PRESENT 1
#define Egse_Event_msg_out_PRESENT 2
#define Egse_event_selection_msg_out_PRESENT 2
#define Modemanager_Event_NONE 0
#define Modemanager_Event_msg_in_NONE 0
#define Modemanager_Event_msg_in_input_none_PRESENT 1
#define Modemanager_event_msg_in_selection_input_none_PRESENT 1
#define Modemanager_Event_msg_in_actuatortm1_tm_actuatorArmed 0
#define Modemanager_Event_msg_in_actuatortm1_tm_actuatorExecuting 1
#define Modemanager_Event_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define Modemanager_Event_msg_in_actuatortm1_PRESENT 2
#define Modemanager_event_msg_in_selection_actuatortm1_PRESENT 2
#define Modemanager_Event_msg_in_actuatortm2_tm_actuatorArmed 0
#define Modemanager_Event_msg_in_actuatortm2_tm_actuatorExecuting 1
#define Modemanager_Event_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define Modemanager_Event_msg_in_actuatortm2_PRESENT 3
#define Modemanager_event_msg_in_selection_actuatortm2_PRESENT 3
#define Modemanager_Event_msg_in_reading_PRESENT 4
#define Modemanager_event_msg_in_selection_reading_PRESENT 4
#define Modemanager_Event_msg_in_systemtc_tc_NONE 0
#define Modemanager_Event_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define Modemanager_event_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define Modemanager_Event_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define Modemanager_event_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define Modemanager_Event_msg_in_systemtc_tc_doReport_PRESENT 3
#define Modemanager_event_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define Modemanager_Event_msg_in_systemtc_PRESENT 5
#define Modemanager_event_msg_in_selection_systemtc_PRESENT 5
#define Modemanager_Event_msg_in_PRESENT 1
#define Modemanager_event_selection_msg_in_PRESENT 1
#define Modemanager_Event_msg_out_NONE 0
#define Modemanager_Event_msg_out_actuatortc1_tc_actuatorArm 0
#define Modemanager_Event_msg_out_actuatortc1_tc_actuatorExecute 1
#define Modemanager_Event_msg_out_actuatortc1_tc_actuatorStandby 2
#define Modemanager_Event_msg_out_actuatortc1_PRESENT 1
#define Modemanager_event_msg_out_selection_actuatortc1_PRESENT 1
#define Modemanager_Event_msg_out_actuatortc2_tc_actuatorArm 0
#define Modemanager_Event_msg_out_actuatortc2_tc_actuatorExecute 1
#define Modemanager_Event_msg_out_actuatortc2_tc_actuatorStandby 2
#define Modemanager_Event_msg_out_actuatortc2_PRESENT 2
#define Modemanager_event_msg_out_selection_actuatortc2_PRESENT 2
#define Modemanager_Event_msg_out_systemtm_tm_status1_actuatorArmed 0
#define Modemanager_Event_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define Modemanager_Event_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define Modemanager_Event_msg_out_systemtm_tm_status2_actuatorArmed 0
#define Modemanager_Event_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define Modemanager_Event_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define Modemanager_Event_msg_out_systemtm_PRESENT 3
#define Modemanager_event_msg_out_selection_systemtm_PRESENT 3
#define Modemanager_Event_msg_out_PRESENT 2
#define Modemanager_event_selection_msg_out_PRESENT 2
#define Observer_State_Kind_regular_state 0
#define Observer_State_Kind_error_state 1
#define Observer_State_Kind_ignore_state 2
#define Observer_State_Kind_success_state 3
#define Function_Event_NONE 0
#define Function_Event_actuator1_NONE 0
#define Function_Event_actuator1_msg_in_NONE 0
#define Function_Event_actuator1_msg_in_input_none_PRESENT 1
#define Function_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define Function_Event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define Function_Event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define Function_Event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define Function_Event_actuator1_msg_in_actuatortc_PRESENT 2
#define Function_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define Function_Event_actuator1_msg_in_PRESENT 1
#define Function_event_actuator1_selection_msg_in_PRESENT 1
#define Function_Event_actuator1_msg_out_NONE 0
#define Function_Event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define Function_Event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define Function_Event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Function_Event_actuator1_msg_out_actuatortm_PRESENT 1
#define Function_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define Function_Event_actuator1_msg_out_PRESENT 2
#define Function_event_actuator1_selection_msg_out_PRESENT 2
#define Function_Event_actuator1_PRESENT 1
#define Function_event_selection_actuator1_PRESENT 1
#define Function_Event_actuator2_NONE 0
#define Function_Event_actuator2_msg_in_NONE 0
#define Function_Event_actuator2_msg_in_input_none_PRESENT 1
#define Function_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define Function_Event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define Function_Event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define Function_Event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define Function_Event_actuator2_msg_in_actuatortc_PRESENT 2
#define Function_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define Function_Event_actuator2_msg_in_PRESENT 1
#define Function_event_actuator2_selection_msg_in_PRESENT 1
#define Function_Event_actuator2_msg_out_NONE 0
#define Function_Event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define Function_Event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define Function_Event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Function_Event_actuator2_msg_out_actuatortm_PRESENT 1
#define Function_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define Function_Event_actuator2_msg_out_PRESENT 2
#define Function_event_actuator2_selection_msg_out_PRESENT 2
#define Function_Event_actuator2_PRESENT 2
#define Function_event_selection_actuator2_PRESENT 2
#define Function_Event_egse_NONE 0
#define Function_Event_egse_msg_in_NONE 0
#define Function_Event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define Function_Event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define Function_Event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define Function_Event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define Function_Event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define Function_Event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define Function_Event_egse_msg_in_systemtm_PRESENT 1
#define Function_event_egse_msg_in_selection_systemtm_PRESENT 1
#define Function_Event_egse_msg_in_PRESENT 1
#define Function_event_egse_selection_msg_in_PRESENT 1
#define Function_Event_egse_msg_out_NONE 0
#define Function_Event_egse_msg_out_systemtc_tc_NONE 0
#define Function_Event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define Function_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define Function_Event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define Function_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define Function_Event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define Function_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define Function_Event_egse_msg_out_systemtc_PRESENT 1
#define Function_event_egse_msg_out_selection_systemtc_PRESENT 1
#define Function_Event_egse_msg_out_PRESENT 2
#define Function_event_egse_selection_msg_out_PRESENT 2
#define Function_Event_egse_PRESENT 3
#define Function_event_selection_egse_PRESENT 3
#define Function_Event_modemanager_NONE 0
#define Function_Event_modemanager_msg_in_NONE 0
#define Function_Event_modemanager_msg_in_input_none_PRESENT 1
#define Function_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define Function_Event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define Function_Event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define Function_Event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define Function_Event_modemanager_msg_in_actuatortm1_PRESENT 2
#define Function_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define Function_Event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define Function_Event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define Function_Event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define Function_Event_modemanager_msg_in_actuatortm2_PRESENT 3
#define Function_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define Function_Event_modemanager_msg_in_reading_PRESENT 4
#define Function_event_modemanager_msg_in_selection_reading_PRESENT 4
#define Function_Event_modemanager_msg_in_systemtc_tc_NONE 0
#define Function_Event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define Function_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define Function_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define Function_Event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define Function_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define Function_Event_modemanager_msg_in_systemtc_PRESENT 5
#define Function_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define Function_Event_modemanager_msg_in_PRESENT 1
#define Function_event_modemanager_selection_msg_in_PRESENT 1
#define Function_Event_modemanager_msg_out_NONE 0
#define Function_Event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define Function_Event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define Function_Event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define Function_Event_modemanager_msg_out_actuatortc1_PRESENT 1
#define Function_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define Function_Event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define Function_Event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define Function_Event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define Function_Event_modemanager_msg_out_actuatortc2_PRESENT 2
#define Function_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define Function_Event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define Function_Event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define Function_Event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define Function_Event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define Function_Event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define Function_Event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define Function_Event_modemanager_msg_out_systemtm_PRESENT 3
#define Function_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define Function_Event_modemanager_msg_out_PRESENT 2
#define Function_event_modemanager_selection_msg_out_PRESENT 2
#define Function_Event_modemanager_PRESENT 4
#define Function_event_selection_modemanager_PRESENT 4
#define Function_Event_sensor_PRESENT 5
#define Function_event_selection_sensor_PRESENT 5
#define Named_Function_Event_event_NONE 0
#define Named_Function_Event_event_actuator1_NONE 0
#define Named_Function_Event_event_actuator1_msg_in_NONE 0
#define Named_Function_Event_event_actuator1_msg_in_input_none_PRESENT 1
#define Named_function_event_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define Named_Function_Event_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define Named_Function_Event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define Named_Function_Event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define Named_Function_Event_event_actuator1_msg_in_actuatortc_PRESENT 2
#define Named_function_event_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define Named_Function_Event_event_actuator1_msg_in_PRESENT 1
#define Named_function_event_event_actuator1_selection_msg_in_PRESENT 1
#define Named_Function_Event_event_actuator1_msg_out_NONE 0
#define Named_Function_Event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define Named_Function_Event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define Named_Function_Event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Named_Function_Event_event_actuator1_msg_out_actuatortm_PRESENT 1
#define Named_function_event_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define Named_Function_Event_event_actuator1_msg_out_PRESENT 2
#define Named_function_event_event_actuator1_selection_msg_out_PRESENT 2
#define Named_Function_Event_event_actuator1_PRESENT 1
#define Named_function_event_event_selection_actuator1_PRESENT 1
#define Named_Function_Event_event_actuator2_NONE 0
#define Named_Function_Event_event_actuator2_msg_in_NONE 0
#define Named_Function_Event_event_actuator2_msg_in_input_none_PRESENT 1
#define Named_function_event_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define Named_Function_Event_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define Named_Function_Event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define Named_Function_Event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define Named_Function_Event_event_actuator2_msg_in_actuatortc_PRESENT 2
#define Named_function_event_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define Named_Function_Event_event_actuator2_msg_in_PRESENT 1
#define Named_function_event_event_actuator2_selection_msg_in_PRESENT 1
#define Named_Function_Event_event_actuator2_msg_out_NONE 0
#define Named_Function_Event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define Named_Function_Event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define Named_Function_Event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Named_Function_Event_event_actuator2_msg_out_actuatortm_PRESENT 1
#define Named_function_event_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define Named_Function_Event_event_actuator2_msg_out_PRESENT 2
#define Named_function_event_event_actuator2_selection_msg_out_PRESENT 2
#define Named_Function_Event_event_actuator2_PRESENT 2
#define Named_function_event_event_selection_actuator2_PRESENT 2
#define Named_Function_Event_event_egse_NONE 0
#define Named_Function_Event_event_egse_msg_in_NONE 0
#define Named_Function_Event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define Named_Function_Event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define Named_Function_Event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define Named_Function_Event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define Named_Function_Event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define Named_Function_Event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define Named_Function_Event_event_egse_msg_in_systemtm_PRESENT 1
#define Named_function_event_event_egse_msg_in_selection_systemtm_PRESENT 1
#define Named_Function_Event_event_egse_msg_in_PRESENT 1
#define Named_function_event_event_egse_selection_msg_in_PRESENT 1
#define Named_Function_Event_event_egse_msg_out_NONE 0
#define Named_Function_Event_event_egse_msg_out_systemtc_tc_NONE 0
#define Named_Function_Event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define Named_function_event_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define Named_function_event_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define Named_Function_Event_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define Named_function_event_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define Named_Function_Event_event_egse_msg_out_systemtc_PRESENT 1
#define Named_function_event_event_egse_msg_out_selection_systemtc_PRESENT 1
#define Named_Function_Event_event_egse_msg_out_PRESENT 2
#define Named_function_event_event_egse_selection_msg_out_PRESENT 2
#define Named_Function_Event_event_egse_PRESENT 3
#define Named_function_event_event_selection_egse_PRESENT 3
#define Named_Function_Event_event_modemanager_NONE 0
#define Named_Function_Event_event_modemanager_msg_in_NONE 0
#define Named_Function_Event_event_modemanager_msg_in_input_none_PRESENT 1
#define Named_function_event_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define Named_Function_Event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define Named_Function_Event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define Named_Function_Event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define Named_Function_Event_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define Named_function_event_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define Named_Function_Event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define Named_Function_Event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define Named_Function_Event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define Named_Function_Event_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define Named_function_event_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define Named_Function_Event_event_modemanager_msg_in_reading_PRESENT 4
#define Named_function_event_event_modemanager_msg_in_selection_reading_PRESENT 4
#define Named_Function_Event_event_modemanager_msg_in_systemtc_tc_NONE 0
#define Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define Named_function_event_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define Named_function_event_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define Named_Function_Event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define Named_function_event_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define Named_Function_Event_event_modemanager_msg_in_systemtc_PRESENT 5
#define Named_function_event_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define Named_Function_Event_event_modemanager_msg_in_PRESENT 1
#define Named_function_event_event_modemanager_selection_msg_in_PRESENT 1
#define Named_Function_Event_event_modemanager_msg_out_NONE 0
#define Named_Function_Event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define Named_Function_Event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define Named_Function_Event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define Named_Function_Event_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define Named_function_event_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define Named_Function_Event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define Named_Function_Event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define Named_Function_Event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define Named_Function_Event_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define Named_function_event_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define Named_Function_Event_event_modemanager_msg_out_systemtm_PRESENT 3
#define Named_function_event_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define Named_Function_Event_event_modemanager_msg_out_PRESENT 2
#define Named_function_event_event_modemanager_selection_msg_out_PRESENT 2
#define Named_Function_Event_event_modemanager_PRESENT 4
#define Named_function_event_event_selection_modemanager_PRESENT 4
#define Named_Function_Event_event_sensor_PRESENT 5
#define Named_function_event_event_selection_sensor_PRESENT 5
#define Interface_Event_source_actuator 0
#define Interface_Event_source_actuator1 1
#define Interface_Event_source_actuator2 2
#define Interface_Event_source_egse 3
#define Interface_Event_source_modemanager 4
#define Interface_Event_source_sensor 5
#define Interface_Event_source_env 6
#define Interface_Event_dest_actuator 0
#define Interface_Event_dest_actuator1 1
#define Interface_Event_dest_actuator2 2
#define Interface_Event_dest_egse 3
#define Interface_Event_dest_modemanager 4
#define Interface_Event_dest_sensor 5
#define Interface_Event_dest_env 6
#define Interface_Event_event_NONE 0
#define Interface_Event_event_actuator1_NONE 0
#define Interface_Event_event_actuator1_msg_in_NONE 0
#define Interface_Event_event_actuator1_msg_in_input_none_PRESENT 1
#define Interface_event_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define Interface_Event_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define Interface_Event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define Interface_Event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define Interface_Event_event_actuator1_msg_in_actuatortc_PRESENT 2
#define Interface_event_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define Interface_Event_event_actuator1_msg_in_PRESENT 1
#define Interface_event_event_actuator1_selection_msg_in_PRESENT 1
#define Interface_Event_event_actuator1_msg_out_NONE 0
#define Interface_Event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define Interface_Event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define Interface_Event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Interface_Event_event_actuator1_msg_out_actuatortm_PRESENT 1
#define Interface_event_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define Interface_Event_event_actuator1_msg_out_PRESENT 2
#define Interface_event_event_actuator1_selection_msg_out_PRESENT 2
#define Interface_Event_event_actuator1_PRESENT 1
#define Interface_event_event_selection_actuator1_PRESENT 1
#define Interface_Event_event_actuator2_NONE 0
#define Interface_Event_event_actuator2_msg_in_NONE 0
#define Interface_Event_event_actuator2_msg_in_input_none_PRESENT 1
#define Interface_event_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define Interface_Event_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define Interface_Event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define Interface_Event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define Interface_Event_event_actuator2_msg_in_actuatortc_PRESENT 2
#define Interface_event_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define Interface_Event_event_actuator2_msg_in_PRESENT 1
#define Interface_event_event_actuator2_selection_msg_in_PRESENT 1
#define Interface_Event_event_actuator2_msg_out_NONE 0
#define Interface_Event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define Interface_Event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define Interface_Event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Interface_Event_event_actuator2_msg_out_actuatortm_PRESENT 1
#define Interface_event_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define Interface_Event_event_actuator2_msg_out_PRESENT 2
#define Interface_event_event_actuator2_selection_msg_out_PRESENT 2
#define Interface_Event_event_actuator2_PRESENT 2
#define Interface_event_event_selection_actuator2_PRESENT 2
#define Interface_Event_event_egse_NONE 0
#define Interface_Event_event_egse_msg_in_NONE 0
#define Interface_Event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define Interface_Event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define Interface_Event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define Interface_Event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define Interface_Event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define Interface_Event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define Interface_Event_event_egse_msg_in_systemtm_PRESENT 1
#define Interface_event_event_egse_msg_in_selection_systemtm_PRESENT 1
#define Interface_Event_event_egse_msg_in_PRESENT 1
#define Interface_event_event_egse_selection_msg_in_PRESENT 1
#define Interface_Event_event_egse_msg_out_NONE 0
#define Interface_Event_event_egse_msg_out_systemtc_tc_NONE 0
#define Interface_Event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define Interface_event_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define Interface_event_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define Interface_Event_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define Interface_event_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define Interface_Event_event_egse_msg_out_systemtc_PRESENT 1
#define Interface_event_event_egse_msg_out_selection_systemtc_PRESENT 1
#define Interface_Event_event_egse_msg_out_PRESENT 2
#define Interface_event_event_egse_selection_msg_out_PRESENT 2
#define Interface_Event_event_egse_PRESENT 3
#define Interface_event_event_selection_egse_PRESENT 3
#define Interface_Event_event_modemanager_NONE 0
#define Interface_Event_event_modemanager_msg_in_NONE 0
#define Interface_Event_event_modemanager_msg_in_input_none_PRESENT 1
#define Interface_event_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define Interface_Event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define Interface_Event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define Interface_Event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define Interface_Event_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define Interface_event_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define Interface_Event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define Interface_Event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define Interface_Event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define Interface_Event_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define Interface_event_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define Interface_Event_event_modemanager_msg_in_reading_PRESENT 4
#define Interface_event_event_modemanager_msg_in_selection_reading_PRESENT 4
#define Interface_Event_event_modemanager_msg_in_systemtc_tc_NONE 0
#define Interface_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define Interface_event_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define Interface_event_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define Interface_Event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define Interface_event_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define Interface_Event_event_modemanager_msg_in_systemtc_PRESENT 5
#define Interface_event_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define Interface_Event_event_modemanager_msg_in_PRESENT 1
#define Interface_event_event_modemanager_selection_msg_in_PRESENT 1
#define Interface_Event_event_modemanager_msg_out_NONE 0
#define Interface_Event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define Interface_Event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define Interface_Event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define Interface_Event_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define Interface_event_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define Interface_Event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define Interface_Event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define Interface_Event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define Interface_Event_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define Interface_event_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define Interface_Event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define Interface_Event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define Interface_Event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define Interface_Event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define Interface_Event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define Interface_Event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define Interface_Event_event_modemanager_msg_out_systemtm_PRESENT 3
#define Interface_event_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define Interface_Event_event_modemanager_msg_out_PRESENT 2
#define Interface_event_event_modemanager_selection_msg_out_PRESENT 2
#define Interface_Event_event_modemanager_PRESENT 4
#define Interface_event_event_selection_modemanager_PRESENT 4
#define Interface_Event_event_sensor_PRESENT 5
#define Interface_event_event_selection_sensor_PRESENT 5
#define Observable_Event_NONE 0
#define Observable_Event_no_event_PRESENT 1
#define Observable_event_selection_no_event_PRESENT 1
#define Observable_Event_system_startup_PRESENT 2
#define Observable_event_selection_system_startup_PRESENT 2
#define Observable_Event_input_event_source_actuator 0
#define Observable_Event_input_event_source_actuator1 1
#define Observable_Event_input_event_source_actuator2 2
#define Observable_Event_input_event_source_egse 3
#define Observable_Event_input_event_source_modemanager 4
#define Observable_Event_input_event_source_sensor 5
#define Observable_Event_input_event_source_env 6
#define Observable_Event_input_event_dest_actuator 0
#define Observable_Event_input_event_dest_actuator1 1
#define Observable_Event_input_event_dest_actuator2 2
#define Observable_Event_input_event_dest_egse 3
#define Observable_Event_input_event_dest_modemanager 4
#define Observable_Event_input_event_dest_sensor 5
#define Observable_Event_input_event_dest_env 6
#define Observable_Event_input_event_event_NONE 0
#define Observable_Event_input_event_event_actuator1_NONE 0
#define Observable_Event_input_event_event_actuator1_msg_in_NONE 0
#define Observable_Event_input_event_event_actuator1_msg_in_input_none_PRESENT 1
#define Observable_event_input_event_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define Observable_Event_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define Observable_Event_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define Observable_Event_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define Observable_Event_input_event_event_actuator1_msg_in_actuatortc_PRESENT 2
#define Observable_event_input_event_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define Observable_Event_input_event_event_actuator1_msg_in_PRESENT 1
#define Observable_event_input_event_event_actuator1_selection_msg_in_PRESENT 1
#define Observable_Event_input_event_event_actuator1_msg_out_NONE 0
#define Observable_Event_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define Observable_Event_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define Observable_Event_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Observable_Event_input_event_event_actuator1_msg_out_actuatortm_PRESENT 1
#define Observable_event_input_event_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define Observable_Event_input_event_event_actuator1_msg_out_PRESENT 2
#define Observable_event_input_event_event_actuator1_selection_msg_out_PRESENT 2
#define Observable_Event_input_event_event_actuator1_PRESENT 1
#define Observable_event_input_event_event_selection_actuator1_PRESENT 1
#define Observable_Event_input_event_event_actuator2_NONE 0
#define Observable_Event_input_event_event_actuator2_msg_in_NONE 0
#define Observable_Event_input_event_event_actuator2_msg_in_input_none_PRESENT 1
#define Observable_event_input_event_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define Observable_Event_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define Observable_Event_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define Observable_Event_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define Observable_Event_input_event_event_actuator2_msg_in_actuatortc_PRESENT 2
#define Observable_event_input_event_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define Observable_Event_input_event_event_actuator2_msg_in_PRESENT 1
#define Observable_event_input_event_event_actuator2_selection_msg_in_PRESENT 1
#define Observable_Event_input_event_event_actuator2_msg_out_NONE 0
#define Observable_Event_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define Observable_Event_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define Observable_Event_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Observable_Event_input_event_event_actuator2_msg_out_actuatortm_PRESENT 1
#define Observable_event_input_event_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define Observable_Event_input_event_event_actuator2_msg_out_PRESENT 2
#define Observable_event_input_event_event_actuator2_selection_msg_out_PRESENT 2
#define Observable_Event_input_event_event_actuator2_PRESENT 2
#define Observable_event_input_event_event_selection_actuator2_PRESENT 2
#define Observable_Event_input_event_event_egse_NONE 0
#define Observable_Event_input_event_event_egse_msg_in_NONE 0
#define Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define Observable_Event_input_event_event_egse_msg_in_systemtm_PRESENT 1
#define Observable_event_input_event_event_egse_msg_in_selection_systemtm_PRESENT 1
#define Observable_Event_input_event_event_egse_msg_in_PRESENT 1
#define Observable_event_input_event_event_egse_selection_msg_in_PRESENT 1
#define Observable_Event_input_event_event_egse_msg_out_NONE 0
#define Observable_Event_input_event_event_egse_msg_out_systemtc_tc_NONE 0
#define Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define Observable_event_input_event_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define Observable_event_input_event_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define Observable_Event_input_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define Observable_event_input_event_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define Observable_Event_input_event_event_egse_msg_out_systemtc_PRESENT 1
#define Observable_event_input_event_event_egse_msg_out_selection_systemtc_PRESENT 1
#define Observable_Event_input_event_event_egse_msg_out_PRESENT 2
#define Observable_event_input_event_event_egse_selection_msg_out_PRESENT 2
#define Observable_Event_input_event_event_egse_PRESENT 3
#define Observable_event_input_event_event_selection_egse_PRESENT 3
#define Observable_Event_input_event_event_modemanager_NONE 0
#define Observable_Event_input_event_event_modemanager_msg_in_NONE 0
#define Observable_Event_input_event_event_modemanager_msg_in_input_none_PRESENT 1
#define Observable_event_input_event_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define Observable_event_input_event_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define Observable_event_input_event_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define Observable_Event_input_event_event_modemanager_msg_in_reading_PRESENT 4
#define Observable_event_input_event_event_modemanager_msg_in_selection_reading_PRESENT 4
#define Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_NONE 0
#define Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define Observable_event_input_event_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define Observable_event_input_event_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define Observable_event_input_event_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define Observable_Event_input_event_event_modemanager_msg_in_systemtc_PRESENT 5
#define Observable_event_input_event_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define Observable_Event_input_event_event_modemanager_msg_in_PRESENT 1
#define Observable_event_input_event_event_modemanager_selection_msg_in_PRESENT 1
#define Observable_Event_input_event_event_modemanager_msg_out_NONE 0
#define Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define Observable_event_input_event_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define Observable_event_input_event_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define Observable_Event_input_event_event_modemanager_msg_out_systemtm_PRESENT 3
#define Observable_event_input_event_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define Observable_Event_input_event_event_modemanager_msg_out_PRESENT 2
#define Observable_event_input_event_event_modemanager_selection_msg_out_PRESENT 2
#define Observable_Event_input_event_event_modemanager_PRESENT 4
#define Observable_event_input_event_event_selection_modemanager_PRESENT 4
#define Observable_Event_input_event_event_sensor_PRESENT 5
#define Observable_event_input_event_event_selection_sensor_PRESENT 5
#define Observable_Event_input_event_PRESENT 3
#define Observable_event_selection_input_event_PRESENT 3
#define Observable_Event_output_event_source_actuator 0
#define Observable_Event_output_event_source_actuator1 1
#define Observable_Event_output_event_source_actuator2 2
#define Observable_Event_output_event_source_egse 3
#define Observable_Event_output_event_source_modemanager 4
#define Observable_Event_output_event_source_sensor 5
#define Observable_Event_output_event_source_env 6
#define Observable_Event_output_event_dest_actuator 0
#define Observable_Event_output_event_dest_actuator1 1
#define Observable_Event_output_event_dest_actuator2 2
#define Observable_Event_output_event_dest_egse 3
#define Observable_Event_output_event_dest_modemanager 4
#define Observable_Event_output_event_dest_sensor 5
#define Observable_Event_output_event_dest_env 6
#define Observable_Event_output_event_event_NONE 0
#define Observable_Event_output_event_event_actuator1_NONE 0
#define Observable_Event_output_event_event_actuator1_msg_in_NONE 0
#define Observable_Event_output_event_event_actuator1_msg_in_input_none_PRESENT 1
#define Observable_event_output_event_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define Observable_Event_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define Observable_Event_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define Observable_Event_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define Observable_Event_output_event_event_actuator1_msg_in_actuatortc_PRESENT 2
#define Observable_event_output_event_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define Observable_Event_output_event_event_actuator1_msg_in_PRESENT 1
#define Observable_event_output_event_event_actuator1_selection_msg_in_PRESENT 1
#define Observable_Event_output_event_event_actuator1_msg_out_NONE 0
#define Observable_Event_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define Observable_Event_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define Observable_Event_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Observable_Event_output_event_event_actuator1_msg_out_actuatortm_PRESENT 1
#define Observable_event_output_event_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define Observable_Event_output_event_event_actuator1_msg_out_PRESENT 2
#define Observable_event_output_event_event_actuator1_selection_msg_out_PRESENT 2
#define Observable_Event_output_event_event_actuator1_PRESENT 1
#define Observable_event_output_event_event_selection_actuator1_PRESENT 1
#define Observable_Event_output_event_event_actuator2_NONE 0
#define Observable_Event_output_event_event_actuator2_msg_in_NONE 0
#define Observable_Event_output_event_event_actuator2_msg_in_input_none_PRESENT 1
#define Observable_event_output_event_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define Observable_Event_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define Observable_Event_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define Observable_Event_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define Observable_Event_output_event_event_actuator2_msg_in_actuatortc_PRESENT 2
#define Observable_event_output_event_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define Observable_Event_output_event_event_actuator2_msg_in_PRESENT 1
#define Observable_event_output_event_event_actuator2_selection_msg_in_PRESENT 1
#define Observable_Event_output_event_event_actuator2_msg_out_NONE 0
#define Observable_Event_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define Observable_Event_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define Observable_Event_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Observable_Event_output_event_event_actuator2_msg_out_actuatortm_PRESENT 1
#define Observable_event_output_event_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define Observable_Event_output_event_event_actuator2_msg_out_PRESENT 2
#define Observable_event_output_event_event_actuator2_selection_msg_out_PRESENT 2
#define Observable_Event_output_event_event_actuator2_PRESENT 2
#define Observable_event_output_event_event_selection_actuator2_PRESENT 2
#define Observable_Event_output_event_event_egse_NONE 0
#define Observable_Event_output_event_event_egse_msg_in_NONE 0
#define Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define Observable_Event_output_event_event_egse_msg_in_systemtm_PRESENT 1
#define Observable_event_output_event_event_egse_msg_in_selection_systemtm_PRESENT 1
#define Observable_Event_output_event_event_egse_msg_in_PRESENT 1
#define Observable_event_output_event_event_egse_selection_msg_in_PRESENT 1
#define Observable_Event_output_event_event_egse_msg_out_NONE 0
#define Observable_Event_output_event_event_egse_msg_out_systemtc_tc_NONE 0
#define Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define Observable_event_output_event_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define Observable_event_output_event_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define Observable_Event_output_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define Observable_event_output_event_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define Observable_Event_output_event_event_egse_msg_out_systemtc_PRESENT 1
#define Observable_event_output_event_event_egse_msg_out_selection_systemtc_PRESENT 1
#define Observable_Event_output_event_event_egse_msg_out_PRESENT 2
#define Observable_event_output_event_event_egse_selection_msg_out_PRESENT 2
#define Observable_Event_output_event_event_egse_PRESENT 3
#define Observable_event_output_event_event_selection_egse_PRESENT 3
#define Observable_Event_output_event_event_modemanager_NONE 0
#define Observable_Event_output_event_event_modemanager_msg_in_NONE 0
#define Observable_Event_output_event_event_modemanager_msg_in_input_none_PRESENT 1
#define Observable_event_output_event_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define Observable_event_output_event_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define Observable_event_output_event_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define Observable_Event_output_event_event_modemanager_msg_in_reading_PRESENT 4
#define Observable_event_output_event_event_modemanager_msg_in_selection_reading_PRESENT 4
#define Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_NONE 0
#define Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define Observable_event_output_event_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define Observable_event_output_event_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define Observable_event_output_event_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define Observable_Event_output_event_event_modemanager_msg_in_systemtc_PRESENT 5
#define Observable_event_output_event_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define Observable_Event_output_event_event_modemanager_msg_in_PRESENT 1
#define Observable_event_output_event_event_modemanager_selection_msg_in_PRESENT 1
#define Observable_Event_output_event_event_modemanager_msg_out_NONE 0
#define Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define Observable_event_output_event_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define Observable_event_output_event_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define Observable_Event_output_event_event_modemanager_msg_out_systemtm_PRESENT 3
#define Observable_event_output_event_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define Observable_Event_output_event_event_modemanager_msg_out_PRESENT 2
#define Observable_event_output_event_event_modemanager_selection_msg_out_PRESENT 2
#define Observable_Event_output_event_event_modemanager_PRESENT 4
#define Observable_event_output_event_event_selection_modemanager_PRESENT 4
#define Observable_Event_output_event_event_sensor_PRESENT 5
#define Observable_event_output_event_event_selection_sensor_PRESENT 5
#define Observable_Event_output_event_PRESENT 4
#define Observable_event_selection_output_event_PRESENT 4
#define Observable_Event_unhandled_input_source_actuator 0
#define Observable_Event_unhandled_input_source_actuator1 1
#define Observable_Event_unhandled_input_source_actuator2 2
#define Observable_Event_unhandled_input_source_egse 3
#define Observable_Event_unhandled_input_source_modemanager 4
#define Observable_Event_unhandled_input_source_sensor 5
#define Observable_Event_unhandled_input_source_env 6
#define Observable_Event_unhandled_input_dest_actuator 0
#define Observable_Event_unhandled_input_dest_actuator1 1
#define Observable_Event_unhandled_input_dest_actuator2 2
#define Observable_Event_unhandled_input_dest_egse 3
#define Observable_Event_unhandled_input_dest_modemanager 4
#define Observable_Event_unhandled_input_dest_sensor 5
#define Observable_Event_unhandled_input_dest_env 6
#define Observable_Event_unhandled_input_event_NONE 0
#define Observable_Event_unhandled_input_event_actuator1_NONE 0
#define Observable_Event_unhandled_input_event_actuator1_msg_in_NONE 0
#define Observable_Event_unhandled_input_event_actuator1_msg_in_input_none_PRESENT 1
#define Observable_event_unhandled_input_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_PRESENT 2
#define Observable_event_unhandled_input_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define Observable_Event_unhandled_input_event_actuator1_msg_in_PRESENT 1
#define Observable_event_unhandled_input_event_actuator1_selection_msg_in_PRESENT 1
#define Observable_Event_unhandled_input_event_actuator1_msg_out_NONE 0
#define Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_PRESENT 1
#define Observable_event_unhandled_input_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define Observable_Event_unhandled_input_event_actuator1_msg_out_PRESENT 2
#define Observable_event_unhandled_input_event_actuator1_selection_msg_out_PRESENT 2
#define Observable_Event_unhandled_input_event_actuator1_PRESENT 1
#define Observable_event_unhandled_input_event_selection_actuator1_PRESENT 1
#define Observable_Event_unhandled_input_event_actuator2_NONE 0
#define Observable_Event_unhandled_input_event_actuator2_msg_in_NONE 0
#define Observable_Event_unhandled_input_event_actuator2_msg_in_input_none_PRESENT 1
#define Observable_event_unhandled_input_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_PRESENT 2
#define Observable_event_unhandled_input_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define Observable_Event_unhandled_input_event_actuator2_msg_in_PRESENT 1
#define Observable_event_unhandled_input_event_actuator2_selection_msg_in_PRESENT 1
#define Observable_Event_unhandled_input_event_actuator2_msg_out_NONE 0
#define Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_PRESENT 1
#define Observable_event_unhandled_input_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define Observable_Event_unhandled_input_event_actuator2_msg_out_PRESENT 2
#define Observable_event_unhandled_input_event_actuator2_selection_msg_out_PRESENT 2
#define Observable_Event_unhandled_input_event_actuator2_PRESENT 2
#define Observable_event_unhandled_input_event_selection_actuator2_PRESENT 2
#define Observable_Event_unhandled_input_event_egse_NONE 0
#define Observable_Event_unhandled_input_event_egse_msg_in_NONE 0
#define Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define Observable_Event_unhandled_input_event_egse_msg_in_systemtm_PRESENT 1
#define Observable_event_unhandled_input_event_egse_msg_in_selection_systemtm_PRESENT 1
#define Observable_Event_unhandled_input_event_egse_msg_in_PRESENT 1
#define Observable_event_unhandled_input_event_egse_selection_msg_in_PRESENT 1
#define Observable_Event_unhandled_input_event_egse_msg_out_NONE 0
#define Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_NONE 0
#define Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define Observable_event_unhandled_input_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define Observable_event_unhandled_input_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define Observable_event_unhandled_input_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define Observable_Event_unhandled_input_event_egse_msg_out_systemtc_PRESENT 1
#define Observable_event_unhandled_input_event_egse_msg_out_selection_systemtc_PRESENT 1
#define Observable_Event_unhandled_input_event_egse_msg_out_PRESENT 2
#define Observable_event_unhandled_input_event_egse_selection_msg_out_PRESENT 2
#define Observable_Event_unhandled_input_event_egse_PRESENT 3
#define Observable_event_unhandled_input_event_selection_egse_PRESENT 3
#define Observable_Event_unhandled_input_event_modemanager_NONE 0
#define Observable_Event_unhandled_input_event_modemanager_msg_in_NONE 0
#define Observable_Event_unhandled_input_event_modemanager_msg_in_input_none_PRESENT 1
#define Observable_event_unhandled_input_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define Observable_event_unhandled_input_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define Observable_event_unhandled_input_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define Observable_Event_unhandled_input_event_modemanager_msg_in_reading_PRESENT 4
#define Observable_event_unhandled_input_event_modemanager_msg_in_selection_reading_PRESENT 4
#define Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_NONE 0
#define Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define Observable_event_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define Observable_event_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define Observable_event_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_PRESENT 5
#define Observable_event_unhandled_input_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define Observable_Event_unhandled_input_event_modemanager_msg_in_PRESENT 1
#define Observable_event_unhandled_input_event_modemanager_selection_msg_in_PRESENT 1
#define Observable_Event_unhandled_input_event_modemanager_msg_out_NONE 0
#define Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define Observable_event_unhandled_input_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define Observable_event_unhandled_input_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_PRESENT 3
#define Observable_event_unhandled_input_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define Observable_Event_unhandled_input_event_modemanager_msg_out_PRESENT 2
#define Observable_event_unhandled_input_event_modemanager_selection_msg_out_PRESENT 2
#define Observable_Event_unhandled_input_event_modemanager_PRESENT 4
#define Observable_event_unhandled_input_event_selection_modemanager_PRESENT 4
#define Observable_Event_unhandled_input_event_sensor_PRESENT 5
#define Observable_event_unhandled_input_event_selection_sensor_PRESENT 5
#define Observable_Event_unhandled_input_PRESENT 5
#define Observable_event_selection_unhandled_input_PRESENT 5
#define Events_Ty_elem_NONE 0
#define Events_Ty_elem_no_event_PRESENT 1
#define Events_ty_elem_selection_no_event_PRESENT 1
#define Events_Ty_elem_system_startup_PRESENT 2
#define Events_ty_elem_selection_system_startup_PRESENT 2
#define Events_Ty_elem_input_event_source_actuator 0
#define Events_Ty_elem_input_event_source_actuator1 1
#define Events_Ty_elem_input_event_source_actuator2 2
#define Events_Ty_elem_input_event_source_egse 3
#define Events_Ty_elem_input_event_source_modemanager 4
#define Events_Ty_elem_input_event_source_sensor 5
#define Events_Ty_elem_input_event_source_env 6
#define Events_Ty_elem_input_event_dest_actuator 0
#define Events_Ty_elem_input_event_dest_actuator1 1
#define Events_Ty_elem_input_event_dest_actuator2 2
#define Events_Ty_elem_input_event_dest_egse 3
#define Events_Ty_elem_input_event_dest_modemanager 4
#define Events_Ty_elem_input_event_dest_sensor 5
#define Events_Ty_elem_input_event_dest_env 6
#define Events_Ty_elem_input_event_event_NONE 0
#define Events_Ty_elem_input_event_event_actuator1_NONE 0
#define Events_Ty_elem_input_event_event_actuator1_msg_in_NONE 0
#define Events_Ty_elem_input_event_event_actuator1_msg_in_input_none_PRESENT 1
#define Events_ty_elem_input_event_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_PRESENT 2
#define Events_ty_elem_input_event_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define Events_Ty_elem_input_event_event_actuator1_msg_in_PRESENT 1
#define Events_ty_elem_input_event_event_actuator1_selection_msg_in_PRESENT 1
#define Events_Ty_elem_input_event_event_actuator1_msg_out_NONE 0
#define Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_PRESENT 1
#define Events_ty_elem_input_event_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define Events_Ty_elem_input_event_event_actuator1_msg_out_PRESENT 2
#define Events_ty_elem_input_event_event_actuator1_selection_msg_out_PRESENT 2
#define Events_Ty_elem_input_event_event_actuator1_PRESENT 1
#define Events_ty_elem_input_event_event_selection_actuator1_PRESENT 1
#define Events_Ty_elem_input_event_event_actuator2_NONE 0
#define Events_Ty_elem_input_event_event_actuator2_msg_in_NONE 0
#define Events_Ty_elem_input_event_event_actuator2_msg_in_input_none_PRESENT 1
#define Events_ty_elem_input_event_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_PRESENT 2
#define Events_ty_elem_input_event_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define Events_Ty_elem_input_event_event_actuator2_msg_in_PRESENT 1
#define Events_ty_elem_input_event_event_actuator2_selection_msg_in_PRESENT 1
#define Events_Ty_elem_input_event_event_actuator2_msg_out_NONE 0
#define Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_PRESENT 1
#define Events_ty_elem_input_event_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define Events_Ty_elem_input_event_event_actuator2_msg_out_PRESENT 2
#define Events_ty_elem_input_event_event_actuator2_selection_msg_out_PRESENT 2
#define Events_Ty_elem_input_event_event_actuator2_PRESENT 2
#define Events_ty_elem_input_event_event_selection_actuator2_PRESENT 2
#define Events_Ty_elem_input_event_event_egse_NONE 0
#define Events_Ty_elem_input_event_event_egse_msg_in_NONE 0
#define Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define Events_Ty_elem_input_event_event_egse_msg_in_systemtm_PRESENT 1
#define Events_ty_elem_input_event_event_egse_msg_in_selection_systemtm_PRESENT 1
#define Events_Ty_elem_input_event_event_egse_msg_in_PRESENT 1
#define Events_ty_elem_input_event_event_egse_selection_msg_in_PRESENT 1
#define Events_Ty_elem_input_event_event_egse_msg_out_NONE 0
#define Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_NONE 0
#define Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define Events_ty_elem_input_event_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define Events_ty_elem_input_event_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define Events_ty_elem_input_event_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define Events_Ty_elem_input_event_event_egse_msg_out_systemtc_PRESENT 1
#define Events_ty_elem_input_event_event_egse_msg_out_selection_systemtc_PRESENT 1
#define Events_Ty_elem_input_event_event_egse_msg_out_PRESENT 2
#define Events_ty_elem_input_event_event_egse_selection_msg_out_PRESENT 2
#define Events_Ty_elem_input_event_event_egse_PRESENT 3
#define Events_ty_elem_input_event_event_selection_egse_PRESENT 3
#define Events_Ty_elem_input_event_event_modemanager_NONE 0
#define Events_Ty_elem_input_event_event_modemanager_msg_in_NONE 0
#define Events_Ty_elem_input_event_event_modemanager_msg_in_input_none_PRESENT 1
#define Events_ty_elem_input_event_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define Events_ty_elem_input_event_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define Events_ty_elem_input_event_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define Events_Ty_elem_input_event_event_modemanager_msg_in_reading_PRESENT 4
#define Events_ty_elem_input_event_event_modemanager_msg_in_selection_reading_PRESENT 4
#define Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_NONE 0
#define Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define Events_ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define Events_ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define Events_ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_PRESENT 5
#define Events_ty_elem_input_event_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define Events_Ty_elem_input_event_event_modemanager_msg_in_PRESENT 1
#define Events_ty_elem_input_event_event_modemanager_selection_msg_in_PRESENT 1
#define Events_Ty_elem_input_event_event_modemanager_msg_out_NONE 0
#define Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define Events_ty_elem_input_event_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define Events_ty_elem_input_event_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_PRESENT 3
#define Events_ty_elem_input_event_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define Events_Ty_elem_input_event_event_modemanager_msg_out_PRESENT 2
#define Events_ty_elem_input_event_event_modemanager_selection_msg_out_PRESENT 2
#define Events_Ty_elem_input_event_event_modemanager_PRESENT 4
#define Events_ty_elem_input_event_event_selection_modemanager_PRESENT 4
#define Events_Ty_elem_input_event_event_sensor_PRESENT 5
#define Events_ty_elem_input_event_event_selection_sensor_PRESENT 5
#define Events_Ty_elem_input_event_PRESENT 3
#define Events_ty_elem_selection_input_event_PRESENT 3
#define Events_Ty_elem_output_event_source_actuator 0
#define Events_Ty_elem_output_event_source_actuator1 1
#define Events_Ty_elem_output_event_source_actuator2 2
#define Events_Ty_elem_output_event_source_egse 3
#define Events_Ty_elem_output_event_source_modemanager 4
#define Events_Ty_elem_output_event_source_sensor 5
#define Events_Ty_elem_output_event_source_env 6
#define Events_Ty_elem_output_event_dest_actuator 0
#define Events_Ty_elem_output_event_dest_actuator1 1
#define Events_Ty_elem_output_event_dest_actuator2 2
#define Events_Ty_elem_output_event_dest_egse 3
#define Events_Ty_elem_output_event_dest_modemanager 4
#define Events_Ty_elem_output_event_dest_sensor 5
#define Events_Ty_elem_output_event_dest_env 6
#define Events_Ty_elem_output_event_event_NONE 0
#define Events_Ty_elem_output_event_event_actuator1_NONE 0
#define Events_Ty_elem_output_event_event_actuator1_msg_in_NONE 0
#define Events_Ty_elem_output_event_event_actuator1_msg_in_input_none_PRESENT 1
#define Events_ty_elem_output_event_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_PRESENT 2
#define Events_ty_elem_output_event_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define Events_Ty_elem_output_event_event_actuator1_msg_in_PRESENT 1
#define Events_ty_elem_output_event_event_actuator1_selection_msg_in_PRESENT 1
#define Events_Ty_elem_output_event_event_actuator1_msg_out_NONE 0
#define Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_PRESENT 1
#define Events_ty_elem_output_event_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define Events_Ty_elem_output_event_event_actuator1_msg_out_PRESENT 2
#define Events_ty_elem_output_event_event_actuator1_selection_msg_out_PRESENT 2
#define Events_Ty_elem_output_event_event_actuator1_PRESENT 1
#define Events_ty_elem_output_event_event_selection_actuator1_PRESENT 1
#define Events_Ty_elem_output_event_event_actuator2_NONE 0
#define Events_Ty_elem_output_event_event_actuator2_msg_in_NONE 0
#define Events_Ty_elem_output_event_event_actuator2_msg_in_input_none_PRESENT 1
#define Events_ty_elem_output_event_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_PRESENT 2
#define Events_ty_elem_output_event_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define Events_Ty_elem_output_event_event_actuator2_msg_in_PRESENT 1
#define Events_ty_elem_output_event_event_actuator2_selection_msg_in_PRESENT 1
#define Events_Ty_elem_output_event_event_actuator2_msg_out_NONE 0
#define Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_PRESENT 1
#define Events_ty_elem_output_event_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define Events_Ty_elem_output_event_event_actuator2_msg_out_PRESENT 2
#define Events_ty_elem_output_event_event_actuator2_selection_msg_out_PRESENT 2
#define Events_Ty_elem_output_event_event_actuator2_PRESENT 2
#define Events_ty_elem_output_event_event_selection_actuator2_PRESENT 2
#define Events_Ty_elem_output_event_event_egse_NONE 0
#define Events_Ty_elem_output_event_event_egse_msg_in_NONE 0
#define Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define Events_Ty_elem_output_event_event_egse_msg_in_systemtm_PRESENT 1
#define Events_ty_elem_output_event_event_egse_msg_in_selection_systemtm_PRESENT 1
#define Events_Ty_elem_output_event_event_egse_msg_in_PRESENT 1
#define Events_ty_elem_output_event_event_egse_selection_msg_in_PRESENT 1
#define Events_Ty_elem_output_event_event_egse_msg_out_NONE 0
#define Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_NONE 0
#define Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define Events_ty_elem_output_event_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define Events_ty_elem_output_event_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define Events_ty_elem_output_event_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define Events_Ty_elem_output_event_event_egse_msg_out_systemtc_PRESENT 1
#define Events_ty_elem_output_event_event_egse_msg_out_selection_systemtc_PRESENT 1
#define Events_Ty_elem_output_event_event_egse_msg_out_PRESENT 2
#define Events_ty_elem_output_event_event_egse_selection_msg_out_PRESENT 2
#define Events_Ty_elem_output_event_event_egse_PRESENT 3
#define Events_ty_elem_output_event_event_selection_egse_PRESENT 3
#define Events_Ty_elem_output_event_event_modemanager_NONE 0
#define Events_Ty_elem_output_event_event_modemanager_msg_in_NONE 0
#define Events_Ty_elem_output_event_event_modemanager_msg_in_input_none_PRESENT 1
#define Events_ty_elem_output_event_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define Events_ty_elem_output_event_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define Events_ty_elem_output_event_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define Events_Ty_elem_output_event_event_modemanager_msg_in_reading_PRESENT 4
#define Events_ty_elem_output_event_event_modemanager_msg_in_selection_reading_PRESENT 4
#define Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_NONE 0
#define Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define Events_ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define Events_ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define Events_ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_PRESENT 5
#define Events_ty_elem_output_event_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define Events_Ty_elem_output_event_event_modemanager_msg_in_PRESENT 1
#define Events_ty_elem_output_event_event_modemanager_selection_msg_in_PRESENT 1
#define Events_Ty_elem_output_event_event_modemanager_msg_out_NONE 0
#define Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define Events_ty_elem_output_event_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define Events_ty_elem_output_event_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_PRESENT 3
#define Events_ty_elem_output_event_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define Events_Ty_elem_output_event_event_modemanager_msg_out_PRESENT 2
#define Events_ty_elem_output_event_event_modemanager_selection_msg_out_PRESENT 2
#define Events_Ty_elem_output_event_event_modemanager_PRESENT 4
#define Events_ty_elem_output_event_event_selection_modemanager_PRESENT 4
#define Events_Ty_elem_output_event_event_sensor_PRESENT 5
#define Events_ty_elem_output_event_event_selection_sensor_PRESENT 5
#define Events_Ty_elem_output_event_PRESENT 4
#define Events_ty_elem_selection_output_event_PRESENT 4
#define Events_Ty_elem_unhandled_input_source_actuator 0
#define Events_Ty_elem_unhandled_input_source_actuator1 1
#define Events_Ty_elem_unhandled_input_source_actuator2 2
#define Events_Ty_elem_unhandled_input_source_egse 3
#define Events_Ty_elem_unhandled_input_source_modemanager 4
#define Events_Ty_elem_unhandled_input_source_sensor 5
#define Events_Ty_elem_unhandled_input_source_env 6
#define Events_Ty_elem_unhandled_input_dest_actuator 0
#define Events_Ty_elem_unhandled_input_dest_actuator1 1
#define Events_Ty_elem_unhandled_input_dest_actuator2 2
#define Events_Ty_elem_unhandled_input_dest_egse 3
#define Events_Ty_elem_unhandled_input_dest_modemanager 4
#define Events_Ty_elem_unhandled_input_dest_sensor 5
#define Events_Ty_elem_unhandled_input_dest_env 6
#define Events_Ty_elem_unhandled_input_event_NONE 0
#define Events_Ty_elem_unhandled_input_event_actuator1_NONE 0
#define Events_Ty_elem_unhandled_input_event_actuator1_msg_in_NONE 0
#define Events_Ty_elem_unhandled_input_event_actuator1_msg_in_input_none_PRESENT 1
#define Events_ty_elem_unhandled_input_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_PRESENT 2
#define Events_ty_elem_unhandled_input_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define Events_Ty_elem_unhandled_input_event_actuator1_msg_in_PRESENT 1
#define Events_ty_elem_unhandled_input_event_actuator1_selection_msg_in_PRESENT 1
#define Events_Ty_elem_unhandled_input_event_actuator1_msg_out_NONE 0
#define Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_PRESENT 1
#define Events_ty_elem_unhandled_input_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define Events_Ty_elem_unhandled_input_event_actuator1_msg_out_PRESENT 2
#define Events_ty_elem_unhandled_input_event_actuator1_selection_msg_out_PRESENT 2
#define Events_Ty_elem_unhandled_input_event_actuator1_PRESENT 1
#define Events_ty_elem_unhandled_input_event_selection_actuator1_PRESENT 1
#define Events_Ty_elem_unhandled_input_event_actuator2_NONE 0
#define Events_Ty_elem_unhandled_input_event_actuator2_msg_in_NONE 0
#define Events_Ty_elem_unhandled_input_event_actuator2_msg_in_input_none_PRESENT 1
#define Events_ty_elem_unhandled_input_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_PRESENT 2
#define Events_ty_elem_unhandled_input_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define Events_Ty_elem_unhandled_input_event_actuator2_msg_in_PRESENT 1
#define Events_ty_elem_unhandled_input_event_actuator2_selection_msg_in_PRESENT 1
#define Events_Ty_elem_unhandled_input_event_actuator2_msg_out_NONE 0
#define Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_PRESENT 1
#define Events_ty_elem_unhandled_input_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define Events_Ty_elem_unhandled_input_event_actuator2_msg_out_PRESENT 2
#define Events_ty_elem_unhandled_input_event_actuator2_selection_msg_out_PRESENT 2
#define Events_Ty_elem_unhandled_input_event_actuator2_PRESENT 2
#define Events_ty_elem_unhandled_input_event_selection_actuator2_PRESENT 2
#define Events_Ty_elem_unhandled_input_event_egse_NONE 0
#define Events_Ty_elem_unhandled_input_event_egse_msg_in_NONE 0
#define Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_PRESENT 1
#define Events_ty_elem_unhandled_input_event_egse_msg_in_selection_systemtm_PRESENT 1
#define Events_Ty_elem_unhandled_input_event_egse_msg_in_PRESENT 1
#define Events_ty_elem_unhandled_input_event_egse_selection_msg_in_PRESENT 1
#define Events_Ty_elem_unhandled_input_event_egse_msg_out_NONE 0
#define Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_NONE 0
#define Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define Events_ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define Events_ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define Events_ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_PRESENT 1
#define Events_ty_elem_unhandled_input_event_egse_msg_out_selection_systemtc_PRESENT 1
#define Events_Ty_elem_unhandled_input_event_egse_msg_out_PRESENT 2
#define Events_ty_elem_unhandled_input_event_egse_selection_msg_out_PRESENT 2
#define Events_Ty_elem_unhandled_input_event_egse_PRESENT 3
#define Events_ty_elem_unhandled_input_event_selection_egse_PRESENT 3
#define Events_Ty_elem_unhandled_input_event_modemanager_NONE 0
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_NONE 0
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_input_none_PRESENT 1
#define Events_ty_elem_unhandled_input_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define Events_ty_elem_unhandled_input_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define Events_ty_elem_unhandled_input_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_reading_PRESENT 4
#define Events_ty_elem_unhandled_input_event_modemanager_msg_in_selection_reading_PRESENT 4
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_NONE 0
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define Events_ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define Events_ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define Events_ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_PRESENT 5
#define Events_ty_elem_unhandled_input_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_in_PRESENT 1
#define Events_ty_elem_unhandled_input_event_modemanager_selection_msg_in_PRESENT 1
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_NONE 0
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define Events_ty_elem_unhandled_input_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define Events_ty_elem_unhandled_input_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_PRESENT 3
#define Events_ty_elem_unhandled_input_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define Events_Ty_elem_unhandled_input_event_modemanager_msg_out_PRESENT 2
#define Events_ty_elem_unhandled_input_event_modemanager_selection_msg_out_PRESENT 2
#define Events_Ty_elem_unhandled_input_event_modemanager_PRESENT 4
#define Events_ty_elem_unhandled_input_event_selection_modemanager_PRESENT 4
#define Events_Ty_elem_unhandled_input_event_sensor_PRESENT 5
#define Events_ty_elem_unhandled_input_event_selection_sensor_PRESENT 5
#define Events_Ty_elem_unhandled_input_PRESENT 5
#define Events_ty_elem_selection_unhandled_input_PRESENT 5
#define System_State_actuator1_queue_elem_NONE 0
#define System_State_actuator1_queue_elem_no_event_PRESENT 1
#define System_state_actuator1_queue_elem_selection_no_event_PRESENT 1
#define System_State_actuator1_queue_elem_system_startup_PRESENT 2
#define System_state_actuator1_queue_elem_selection_system_startup_PRESENT 2
#define System_State_actuator1_queue_elem_input_event_source_actuator 0
#define System_State_actuator1_queue_elem_input_event_source_actuator1 1
#define System_State_actuator1_queue_elem_input_event_source_actuator2 2
#define System_State_actuator1_queue_elem_input_event_source_egse 3
#define System_State_actuator1_queue_elem_input_event_source_modemanager 4
#define System_State_actuator1_queue_elem_input_event_source_sensor 5
#define System_State_actuator1_queue_elem_input_event_source_env 6
#define System_State_actuator1_queue_elem_input_event_dest_actuator 0
#define System_State_actuator1_queue_elem_input_event_dest_actuator1 1
#define System_State_actuator1_queue_elem_input_event_dest_actuator2 2
#define System_State_actuator1_queue_elem_input_event_dest_egse 3
#define System_State_actuator1_queue_elem_input_event_dest_modemanager 4
#define System_State_actuator1_queue_elem_input_event_dest_sensor 5
#define System_State_actuator1_queue_elem_input_event_dest_env 6
#define System_State_actuator1_queue_elem_input_event_event_NONE 0
#define System_State_actuator1_queue_elem_input_event_event_actuator1_NONE 0
#define System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_NONE 0
#define System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_input_none_PRESENT 1
#define System_state_actuator1_queue_elem_input_event_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_PRESENT 2
#define System_state_actuator1_queue_elem_input_event_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_PRESENT 1
#define System_state_actuator1_queue_elem_input_event_event_actuator1_selection_msg_in_PRESENT 1
#define System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_NONE 0
#define System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_PRESENT 1
#define System_state_actuator1_queue_elem_input_event_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_PRESENT 2
#define System_state_actuator1_queue_elem_input_event_event_actuator1_selection_msg_out_PRESENT 2
#define System_State_actuator1_queue_elem_input_event_event_actuator1_PRESENT 1
#define System_state_actuator1_queue_elem_input_event_event_selection_actuator1_PRESENT 1
#define System_State_actuator1_queue_elem_input_event_event_actuator2_NONE 0
#define System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_NONE 0
#define System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_input_none_PRESENT 1
#define System_state_actuator1_queue_elem_input_event_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_PRESENT 2
#define System_state_actuator1_queue_elem_input_event_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_PRESENT 1
#define System_state_actuator1_queue_elem_input_event_event_actuator2_selection_msg_in_PRESENT 1
#define System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_NONE 0
#define System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_PRESENT 1
#define System_state_actuator1_queue_elem_input_event_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_PRESENT 2
#define System_state_actuator1_queue_elem_input_event_event_actuator2_selection_msg_out_PRESENT 2
#define System_State_actuator1_queue_elem_input_event_event_actuator2_PRESENT 2
#define System_state_actuator1_queue_elem_input_event_event_selection_actuator2_PRESENT 2
#define System_State_actuator1_queue_elem_input_event_event_egse_NONE 0
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_in_NONE 0
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_PRESENT 1
#define System_state_actuator1_queue_elem_input_event_event_egse_msg_in_selection_systemtm_PRESENT 1
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_in_PRESENT 1
#define System_state_actuator1_queue_elem_input_event_event_egse_selection_msg_in_PRESENT 1
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_out_NONE 0
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_NONE 0
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define System_state_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define System_state_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define System_state_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_PRESENT 1
#define System_state_actuator1_queue_elem_input_event_event_egse_msg_out_selection_systemtc_PRESENT 1
#define System_State_actuator1_queue_elem_input_event_event_egse_msg_out_PRESENT 2
#define System_state_actuator1_queue_elem_input_event_event_egse_selection_msg_out_PRESENT 2
#define System_State_actuator1_queue_elem_input_event_event_egse_PRESENT 3
#define System_state_actuator1_queue_elem_input_event_event_selection_egse_PRESENT 3
#define System_State_actuator1_queue_elem_input_event_event_modemanager_NONE 0
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_NONE 0
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_input_none_PRESENT 1
#define System_state_actuator1_queue_elem_input_event_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define System_state_actuator1_queue_elem_input_event_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define System_state_actuator1_queue_elem_input_event_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_reading_PRESENT 4
#define System_state_actuator1_queue_elem_input_event_event_modemanager_msg_in_selection_reading_PRESENT 4
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_NONE 0
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define System_state_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define System_state_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define System_state_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_PRESENT 5
#define System_state_actuator1_queue_elem_input_event_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_PRESENT 1
#define System_state_actuator1_queue_elem_input_event_event_modemanager_selection_msg_in_PRESENT 1
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_NONE 0
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define System_state_actuator1_queue_elem_input_event_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define System_state_actuator1_queue_elem_input_event_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_PRESENT 3
#define System_state_actuator1_queue_elem_input_event_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_PRESENT 2
#define System_state_actuator1_queue_elem_input_event_event_modemanager_selection_msg_out_PRESENT 2
#define System_State_actuator1_queue_elem_input_event_event_modemanager_PRESENT 4
#define System_state_actuator1_queue_elem_input_event_event_selection_modemanager_PRESENT 4
#define System_State_actuator1_queue_elem_input_event_event_sensor_PRESENT 5
#define System_state_actuator1_queue_elem_input_event_event_selection_sensor_PRESENT 5
#define System_State_actuator1_queue_elem_input_event_PRESENT 3
#define System_state_actuator1_queue_elem_selection_input_event_PRESENT 3
#define System_State_actuator1_queue_elem_output_event_source_actuator 0
#define System_State_actuator1_queue_elem_output_event_source_actuator1 1
#define System_State_actuator1_queue_elem_output_event_source_actuator2 2
#define System_State_actuator1_queue_elem_output_event_source_egse 3
#define System_State_actuator1_queue_elem_output_event_source_modemanager 4
#define System_State_actuator1_queue_elem_output_event_source_sensor 5
#define System_State_actuator1_queue_elem_output_event_source_env 6
#define System_State_actuator1_queue_elem_output_event_dest_actuator 0
#define System_State_actuator1_queue_elem_output_event_dest_actuator1 1
#define System_State_actuator1_queue_elem_output_event_dest_actuator2 2
#define System_State_actuator1_queue_elem_output_event_dest_egse 3
#define System_State_actuator1_queue_elem_output_event_dest_modemanager 4
#define System_State_actuator1_queue_elem_output_event_dest_sensor 5
#define System_State_actuator1_queue_elem_output_event_dest_env 6
#define System_State_actuator1_queue_elem_output_event_event_NONE 0
#define System_State_actuator1_queue_elem_output_event_event_actuator1_NONE 0
#define System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_NONE 0
#define System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_input_none_PRESENT 1
#define System_state_actuator1_queue_elem_output_event_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_PRESENT 2
#define System_state_actuator1_queue_elem_output_event_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_PRESENT 1
#define System_state_actuator1_queue_elem_output_event_event_actuator1_selection_msg_in_PRESENT 1
#define System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_NONE 0
#define System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_PRESENT 1
#define System_state_actuator1_queue_elem_output_event_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_PRESENT 2
#define System_state_actuator1_queue_elem_output_event_event_actuator1_selection_msg_out_PRESENT 2
#define System_State_actuator1_queue_elem_output_event_event_actuator1_PRESENT 1
#define System_state_actuator1_queue_elem_output_event_event_selection_actuator1_PRESENT 1
#define System_State_actuator1_queue_elem_output_event_event_actuator2_NONE 0
#define System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_NONE 0
#define System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_input_none_PRESENT 1
#define System_state_actuator1_queue_elem_output_event_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_PRESENT 2
#define System_state_actuator1_queue_elem_output_event_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_PRESENT 1
#define System_state_actuator1_queue_elem_output_event_event_actuator2_selection_msg_in_PRESENT 1
#define System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_NONE 0
#define System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_PRESENT 1
#define System_state_actuator1_queue_elem_output_event_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_PRESENT 2
#define System_state_actuator1_queue_elem_output_event_event_actuator2_selection_msg_out_PRESENT 2
#define System_State_actuator1_queue_elem_output_event_event_actuator2_PRESENT 2
#define System_state_actuator1_queue_elem_output_event_event_selection_actuator2_PRESENT 2
#define System_State_actuator1_queue_elem_output_event_event_egse_NONE 0
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_in_NONE 0
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_PRESENT 1
#define System_state_actuator1_queue_elem_output_event_event_egse_msg_in_selection_systemtm_PRESENT 1
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_in_PRESENT 1
#define System_state_actuator1_queue_elem_output_event_event_egse_selection_msg_in_PRESENT 1
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_out_NONE 0
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_NONE 0
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define System_state_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define System_state_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define System_state_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_PRESENT 1
#define System_state_actuator1_queue_elem_output_event_event_egse_msg_out_selection_systemtc_PRESENT 1
#define System_State_actuator1_queue_elem_output_event_event_egse_msg_out_PRESENT 2
#define System_state_actuator1_queue_elem_output_event_event_egse_selection_msg_out_PRESENT 2
#define System_State_actuator1_queue_elem_output_event_event_egse_PRESENT 3
#define System_state_actuator1_queue_elem_output_event_event_selection_egse_PRESENT 3
#define System_State_actuator1_queue_elem_output_event_event_modemanager_NONE 0
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_NONE 0
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_input_none_PRESENT 1
#define System_state_actuator1_queue_elem_output_event_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define System_state_actuator1_queue_elem_output_event_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define System_state_actuator1_queue_elem_output_event_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_reading_PRESENT 4
#define System_state_actuator1_queue_elem_output_event_event_modemanager_msg_in_selection_reading_PRESENT 4
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_NONE 0
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define System_state_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define System_state_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define System_state_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_PRESENT 5
#define System_state_actuator1_queue_elem_output_event_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_PRESENT 1
#define System_state_actuator1_queue_elem_output_event_event_modemanager_selection_msg_in_PRESENT 1
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_NONE 0
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define System_state_actuator1_queue_elem_output_event_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define System_state_actuator1_queue_elem_output_event_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_PRESENT 3
#define System_state_actuator1_queue_elem_output_event_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_PRESENT 2
#define System_state_actuator1_queue_elem_output_event_event_modemanager_selection_msg_out_PRESENT 2
#define System_State_actuator1_queue_elem_output_event_event_modemanager_PRESENT 4
#define System_state_actuator1_queue_elem_output_event_event_selection_modemanager_PRESENT 4
#define System_State_actuator1_queue_elem_output_event_event_sensor_PRESENT 5
#define System_state_actuator1_queue_elem_output_event_event_selection_sensor_PRESENT 5
#define System_State_actuator1_queue_elem_output_event_PRESENT 4
#define System_state_actuator1_queue_elem_selection_output_event_PRESENT 4
#define System_State_actuator1_queue_elem_unhandled_input_source_actuator 0
#define System_State_actuator1_queue_elem_unhandled_input_source_actuator1 1
#define System_State_actuator1_queue_elem_unhandled_input_source_actuator2 2
#define System_State_actuator1_queue_elem_unhandled_input_source_egse 3
#define System_State_actuator1_queue_elem_unhandled_input_source_modemanager 4
#define System_State_actuator1_queue_elem_unhandled_input_source_sensor 5
#define System_State_actuator1_queue_elem_unhandled_input_source_env 6
#define System_State_actuator1_queue_elem_unhandled_input_dest_actuator 0
#define System_State_actuator1_queue_elem_unhandled_input_dest_actuator1 1
#define System_State_actuator1_queue_elem_unhandled_input_dest_actuator2 2
#define System_State_actuator1_queue_elem_unhandled_input_dest_egse 3
#define System_State_actuator1_queue_elem_unhandled_input_dest_modemanager 4
#define System_State_actuator1_queue_elem_unhandled_input_dest_sensor 5
#define System_State_actuator1_queue_elem_unhandled_input_dest_env 6
#define System_State_actuator1_queue_elem_unhandled_input_event_NONE 0
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_NONE 0
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_NONE 0
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_input_none_PRESENT 1
#define System_state_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_PRESENT 2
#define System_state_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_PRESENT 1
#define System_state_actuator1_queue_elem_unhandled_input_event_actuator1_selection_msg_in_PRESENT 1
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_NONE 0
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_PRESENT 1
#define System_state_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_PRESENT 2
#define System_state_actuator1_queue_elem_unhandled_input_event_actuator1_selection_msg_out_PRESENT 2
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator1_PRESENT 1
#define System_state_actuator1_queue_elem_unhandled_input_event_selection_actuator1_PRESENT 1
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_NONE 0
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_NONE 0
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_input_none_PRESENT 1
#define System_state_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_PRESENT 2
#define System_state_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_PRESENT 1
#define System_state_actuator1_queue_elem_unhandled_input_event_actuator2_selection_msg_in_PRESENT 1
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_NONE 0
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_PRESENT 1
#define System_state_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_PRESENT 2
#define System_state_actuator1_queue_elem_unhandled_input_event_actuator2_selection_msg_out_PRESENT 2
#define System_State_actuator1_queue_elem_unhandled_input_event_actuator2_PRESENT 2
#define System_state_actuator1_queue_elem_unhandled_input_event_selection_actuator2_PRESENT 2
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_NONE 0
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_NONE 0
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_PRESENT 1
#define System_state_actuator1_queue_elem_unhandled_input_event_egse_msg_in_selection_systemtm_PRESENT 1
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_PRESENT 1
#define System_state_actuator1_queue_elem_unhandled_input_event_egse_selection_msg_in_PRESENT 1
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_NONE 0
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_NONE 0
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define System_state_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define System_state_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define System_state_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_PRESENT 1
#define System_state_actuator1_queue_elem_unhandled_input_event_egse_msg_out_selection_systemtc_PRESENT 1
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_PRESENT 2
#define System_state_actuator1_queue_elem_unhandled_input_event_egse_selection_msg_out_PRESENT 2
#define System_State_actuator1_queue_elem_unhandled_input_event_egse_PRESENT 3
#define System_state_actuator1_queue_elem_unhandled_input_event_selection_egse_PRESENT 3
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_NONE 0
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_NONE 0
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_input_none_PRESENT 1
#define System_state_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define System_state_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define System_state_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_reading_PRESENT 4
#define System_state_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_selection_reading_PRESENT 4
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_NONE 0
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define System_state_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define System_state_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define System_state_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_PRESENT 5
#define System_state_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_PRESENT 1
#define System_state_actuator1_queue_elem_unhandled_input_event_modemanager_selection_msg_in_PRESENT 1
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_NONE 0
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define System_state_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define System_state_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_PRESENT 3
#define System_state_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_PRESENT 2
#define System_state_actuator1_queue_elem_unhandled_input_event_modemanager_selection_msg_out_PRESENT 2
#define System_State_actuator1_queue_elem_unhandled_input_event_modemanager_PRESENT 4
#define System_state_actuator1_queue_elem_unhandled_input_event_selection_modemanager_PRESENT 4
#define System_State_actuator1_queue_elem_unhandled_input_event_sensor_PRESENT 5
#define System_state_actuator1_queue_elem_unhandled_input_event_selection_sensor_PRESENT 5
#define System_State_actuator1_queue_elem_unhandled_input_PRESENT 5
#define System_state_actuator1_queue_elem_selection_unhandled_input_PRESENT 5
#define System_State_actuator2_queue_elem_NONE 0
#define System_State_actuator2_queue_elem_no_event_PRESENT 1
#define System_state_actuator2_queue_elem_selection_no_event_PRESENT 1
#define System_State_actuator2_queue_elem_system_startup_PRESENT 2
#define System_state_actuator2_queue_elem_selection_system_startup_PRESENT 2
#define System_State_actuator2_queue_elem_input_event_source_actuator 0
#define System_State_actuator2_queue_elem_input_event_source_actuator1 1
#define System_State_actuator2_queue_elem_input_event_source_actuator2 2
#define System_State_actuator2_queue_elem_input_event_source_egse 3
#define System_State_actuator2_queue_elem_input_event_source_modemanager 4
#define System_State_actuator2_queue_elem_input_event_source_sensor 5
#define System_State_actuator2_queue_elem_input_event_source_env 6
#define System_State_actuator2_queue_elem_input_event_dest_actuator 0
#define System_State_actuator2_queue_elem_input_event_dest_actuator1 1
#define System_State_actuator2_queue_elem_input_event_dest_actuator2 2
#define System_State_actuator2_queue_elem_input_event_dest_egse 3
#define System_State_actuator2_queue_elem_input_event_dest_modemanager 4
#define System_State_actuator2_queue_elem_input_event_dest_sensor 5
#define System_State_actuator2_queue_elem_input_event_dest_env 6
#define System_State_actuator2_queue_elem_input_event_event_NONE 0
#define System_State_actuator2_queue_elem_input_event_event_actuator1_NONE 0
#define System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_NONE 0
#define System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_input_none_PRESENT 1
#define System_state_actuator2_queue_elem_input_event_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_PRESENT 2
#define System_state_actuator2_queue_elem_input_event_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_PRESENT 1
#define System_state_actuator2_queue_elem_input_event_event_actuator1_selection_msg_in_PRESENT 1
#define System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_NONE 0
#define System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_PRESENT 1
#define System_state_actuator2_queue_elem_input_event_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_PRESENT 2
#define System_state_actuator2_queue_elem_input_event_event_actuator1_selection_msg_out_PRESENT 2
#define System_State_actuator2_queue_elem_input_event_event_actuator1_PRESENT 1
#define System_state_actuator2_queue_elem_input_event_event_selection_actuator1_PRESENT 1
#define System_State_actuator2_queue_elem_input_event_event_actuator2_NONE 0
#define System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_NONE 0
#define System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_input_none_PRESENT 1
#define System_state_actuator2_queue_elem_input_event_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_PRESENT 2
#define System_state_actuator2_queue_elem_input_event_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_PRESENT 1
#define System_state_actuator2_queue_elem_input_event_event_actuator2_selection_msg_in_PRESENT 1
#define System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_NONE 0
#define System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_PRESENT 1
#define System_state_actuator2_queue_elem_input_event_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_PRESENT 2
#define System_state_actuator2_queue_elem_input_event_event_actuator2_selection_msg_out_PRESENT 2
#define System_State_actuator2_queue_elem_input_event_event_actuator2_PRESENT 2
#define System_state_actuator2_queue_elem_input_event_event_selection_actuator2_PRESENT 2
#define System_State_actuator2_queue_elem_input_event_event_egse_NONE 0
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_in_NONE 0
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_PRESENT 1
#define System_state_actuator2_queue_elem_input_event_event_egse_msg_in_selection_systemtm_PRESENT 1
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_in_PRESENT 1
#define System_state_actuator2_queue_elem_input_event_event_egse_selection_msg_in_PRESENT 1
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_out_NONE 0
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_NONE 0
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define System_state_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define System_state_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define System_state_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_PRESENT 1
#define System_state_actuator2_queue_elem_input_event_event_egse_msg_out_selection_systemtc_PRESENT 1
#define System_State_actuator2_queue_elem_input_event_event_egse_msg_out_PRESENT 2
#define System_state_actuator2_queue_elem_input_event_event_egse_selection_msg_out_PRESENT 2
#define System_State_actuator2_queue_elem_input_event_event_egse_PRESENT 3
#define System_state_actuator2_queue_elem_input_event_event_selection_egse_PRESENT 3
#define System_State_actuator2_queue_elem_input_event_event_modemanager_NONE 0
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_NONE 0
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_input_none_PRESENT 1
#define System_state_actuator2_queue_elem_input_event_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define System_state_actuator2_queue_elem_input_event_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define System_state_actuator2_queue_elem_input_event_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_reading_PRESENT 4
#define System_state_actuator2_queue_elem_input_event_event_modemanager_msg_in_selection_reading_PRESENT 4
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_NONE 0
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define System_state_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define System_state_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define System_state_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_PRESENT 5
#define System_state_actuator2_queue_elem_input_event_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_PRESENT 1
#define System_state_actuator2_queue_elem_input_event_event_modemanager_selection_msg_in_PRESENT 1
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_NONE 0
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define System_state_actuator2_queue_elem_input_event_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define System_state_actuator2_queue_elem_input_event_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_PRESENT 3
#define System_state_actuator2_queue_elem_input_event_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_PRESENT 2
#define System_state_actuator2_queue_elem_input_event_event_modemanager_selection_msg_out_PRESENT 2
#define System_State_actuator2_queue_elem_input_event_event_modemanager_PRESENT 4
#define System_state_actuator2_queue_elem_input_event_event_selection_modemanager_PRESENT 4
#define System_State_actuator2_queue_elem_input_event_event_sensor_PRESENT 5
#define System_state_actuator2_queue_elem_input_event_event_selection_sensor_PRESENT 5
#define System_State_actuator2_queue_elem_input_event_PRESENT 3
#define System_state_actuator2_queue_elem_selection_input_event_PRESENT 3
#define System_State_actuator2_queue_elem_output_event_source_actuator 0
#define System_State_actuator2_queue_elem_output_event_source_actuator1 1
#define System_State_actuator2_queue_elem_output_event_source_actuator2 2
#define System_State_actuator2_queue_elem_output_event_source_egse 3
#define System_State_actuator2_queue_elem_output_event_source_modemanager 4
#define System_State_actuator2_queue_elem_output_event_source_sensor 5
#define System_State_actuator2_queue_elem_output_event_source_env 6
#define System_State_actuator2_queue_elem_output_event_dest_actuator 0
#define System_State_actuator2_queue_elem_output_event_dest_actuator1 1
#define System_State_actuator2_queue_elem_output_event_dest_actuator2 2
#define System_State_actuator2_queue_elem_output_event_dest_egse 3
#define System_State_actuator2_queue_elem_output_event_dest_modemanager 4
#define System_State_actuator2_queue_elem_output_event_dest_sensor 5
#define System_State_actuator2_queue_elem_output_event_dest_env 6
#define System_State_actuator2_queue_elem_output_event_event_NONE 0
#define System_State_actuator2_queue_elem_output_event_event_actuator1_NONE 0
#define System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_NONE 0
#define System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_input_none_PRESENT 1
#define System_state_actuator2_queue_elem_output_event_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_PRESENT 2
#define System_state_actuator2_queue_elem_output_event_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_PRESENT 1
#define System_state_actuator2_queue_elem_output_event_event_actuator1_selection_msg_in_PRESENT 1
#define System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_NONE 0
#define System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_PRESENT 1
#define System_state_actuator2_queue_elem_output_event_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_PRESENT 2
#define System_state_actuator2_queue_elem_output_event_event_actuator1_selection_msg_out_PRESENT 2
#define System_State_actuator2_queue_elem_output_event_event_actuator1_PRESENT 1
#define System_state_actuator2_queue_elem_output_event_event_selection_actuator1_PRESENT 1
#define System_State_actuator2_queue_elem_output_event_event_actuator2_NONE 0
#define System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_NONE 0
#define System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_input_none_PRESENT 1
#define System_state_actuator2_queue_elem_output_event_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_PRESENT 2
#define System_state_actuator2_queue_elem_output_event_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_PRESENT 1
#define System_state_actuator2_queue_elem_output_event_event_actuator2_selection_msg_in_PRESENT 1
#define System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_NONE 0
#define System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_PRESENT 1
#define System_state_actuator2_queue_elem_output_event_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_PRESENT 2
#define System_state_actuator2_queue_elem_output_event_event_actuator2_selection_msg_out_PRESENT 2
#define System_State_actuator2_queue_elem_output_event_event_actuator2_PRESENT 2
#define System_state_actuator2_queue_elem_output_event_event_selection_actuator2_PRESENT 2
#define System_State_actuator2_queue_elem_output_event_event_egse_NONE 0
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_in_NONE 0
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_PRESENT 1
#define System_state_actuator2_queue_elem_output_event_event_egse_msg_in_selection_systemtm_PRESENT 1
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_in_PRESENT 1
#define System_state_actuator2_queue_elem_output_event_event_egse_selection_msg_in_PRESENT 1
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_out_NONE 0
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_NONE 0
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define System_state_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define System_state_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define System_state_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_PRESENT 1
#define System_state_actuator2_queue_elem_output_event_event_egse_msg_out_selection_systemtc_PRESENT 1
#define System_State_actuator2_queue_elem_output_event_event_egse_msg_out_PRESENT 2
#define System_state_actuator2_queue_elem_output_event_event_egse_selection_msg_out_PRESENT 2
#define System_State_actuator2_queue_elem_output_event_event_egse_PRESENT 3
#define System_state_actuator2_queue_elem_output_event_event_selection_egse_PRESENT 3
#define System_State_actuator2_queue_elem_output_event_event_modemanager_NONE 0
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_NONE 0
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_input_none_PRESENT 1
#define System_state_actuator2_queue_elem_output_event_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define System_state_actuator2_queue_elem_output_event_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define System_state_actuator2_queue_elem_output_event_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_reading_PRESENT 4
#define System_state_actuator2_queue_elem_output_event_event_modemanager_msg_in_selection_reading_PRESENT 4
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_NONE 0
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define System_state_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define System_state_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define System_state_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_PRESENT 5
#define System_state_actuator2_queue_elem_output_event_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_PRESENT 1
#define System_state_actuator2_queue_elem_output_event_event_modemanager_selection_msg_in_PRESENT 1
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_NONE 0
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define System_state_actuator2_queue_elem_output_event_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define System_state_actuator2_queue_elem_output_event_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_PRESENT 3
#define System_state_actuator2_queue_elem_output_event_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_PRESENT 2
#define System_state_actuator2_queue_elem_output_event_event_modemanager_selection_msg_out_PRESENT 2
#define System_State_actuator2_queue_elem_output_event_event_modemanager_PRESENT 4
#define System_state_actuator2_queue_elem_output_event_event_selection_modemanager_PRESENT 4
#define System_State_actuator2_queue_elem_output_event_event_sensor_PRESENT 5
#define System_state_actuator2_queue_elem_output_event_event_selection_sensor_PRESENT 5
#define System_State_actuator2_queue_elem_output_event_PRESENT 4
#define System_state_actuator2_queue_elem_selection_output_event_PRESENT 4
#define System_State_actuator2_queue_elem_unhandled_input_source_actuator 0
#define System_State_actuator2_queue_elem_unhandled_input_source_actuator1 1
#define System_State_actuator2_queue_elem_unhandled_input_source_actuator2 2
#define System_State_actuator2_queue_elem_unhandled_input_source_egse 3
#define System_State_actuator2_queue_elem_unhandled_input_source_modemanager 4
#define System_State_actuator2_queue_elem_unhandled_input_source_sensor 5
#define System_State_actuator2_queue_elem_unhandled_input_source_env 6
#define System_State_actuator2_queue_elem_unhandled_input_dest_actuator 0
#define System_State_actuator2_queue_elem_unhandled_input_dest_actuator1 1
#define System_State_actuator2_queue_elem_unhandled_input_dest_actuator2 2
#define System_State_actuator2_queue_elem_unhandled_input_dest_egse 3
#define System_State_actuator2_queue_elem_unhandled_input_dest_modemanager 4
#define System_State_actuator2_queue_elem_unhandled_input_dest_sensor 5
#define System_State_actuator2_queue_elem_unhandled_input_dest_env 6
#define System_State_actuator2_queue_elem_unhandled_input_event_NONE 0
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_NONE 0
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_NONE 0
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_input_none_PRESENT 1
#define System_state_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_PRESENT 2
#define System_state_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_PRESENT 1
#define System_state_actuator2_queue_elem_unhandled_input_event_actuator1_selection_msg_in_PRESENT 1
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_NONE 0
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_PRESENT 1
#define System_state_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_PRESENT 2
#define System_state_actuator2_queue_elem_unhandled_input_event_actuator1_selection_msg_out_PRESENT 2
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator1_PRESENT 1
#define System_state_actuator2_queue_elem_unhandled_input_event_selection_actuator1_PRESENT 1
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_NONE 0
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_NONE 0
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_input_none_PRESENT 1
#define System_state_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_PRESENT 2
#define System_state_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_PRESENT 1
#define System_state_actuator2_queue_elem_unhandled_input_event_actuator2_selection_msg_in_PRESENT 1
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_NONE 0
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_PRESENT 1
#define System_state_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_PRESENT 2
#define System_state_actuator2_queue_elem_unhandled_input_event_actuator2_selection_msg_out_PRESENT 2
#define System_State_actuator2_queue_elem_unhandled_input_event_actuator2_PRESENT 2
#define System_state_actuator2_queue_elem_unhandled_input_event_selection_actuator2_PRESENT 2
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_NONE 0
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_NONE 0
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_PRESENT 1
#define System_state_actuator2_queue_elem_unhandled_input_event_egse_msg_in_selection_systemtm_PRESENT 1
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_PRESENT 1
#define System_state_actuator2_queue_elem_unhandled_input_event_egse_selection_msg_in_PRESENT 1
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_NONE 0
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_NONE 0
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define System_state_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define System_state_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define System_state_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_PRESENT 1
#define System_state_actuator2_queue_elem_unhandled_input_event_egse_msg_out_selection_systemtc_PRESENT 1
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_PRESENT 2
#define System_state_actuator2_queue_elem_unhandled_input_event_egse_selection_msg_out_PRESENT 2
#define System_State_actuator2_queue_elem_unhandled_input_event_egse_PRESENT 3
#define System_state_actuator2_queue_elem_unhandled_input_event_selection_egse_PRESENT 3
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_NONE 0
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_NONE 0
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_input_none_PRESENT 1
#define System_state_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define System_state_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define System_state_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_reading_PRESENT 4
#define System_state_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_selection_reading_PRESENT 4
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_NONE 0
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define System_state_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define System_state_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define System_state_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_PRESENT 5
#define System_state_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_PRESENT 1
#define System_state_actuator2_queue_elem_unhandled_input_event_modemanager_selection_msg_in_PRESENT 1
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_NONE 0
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define System_state_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define System_state_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_PRESENT 3
#define System_state_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_PRESENT 2
#define System_state_actuator2_queue_elem_unhandled_input_event_modemanager_selection_msg_out_PRESENT 2
#define System_State_actuator2_queue_elem_unhandled_input_event_modemanager_PRESENT 4
#define System_state_actuator2_queue_elem_unhandled_input_event_selection_modemanager_PRESENT 4
#define System_State_actuator2_queue_elem_unhandled_input_event_sensor_PRESENT 5
#define System_state_actuator2_queue_elem_unhandled_input_event_selection_sensor_PRESENT 5
#define System_State_actuator2_queue_elem_unhandled_input_PRESENT 5
#define System_state_actuator2_queue_elem_selection_unhandled_input_PRESENT 5
#define System_State_modemanager_queue_elem_NONE 0
#define System_State_modemanager_queue_elem_no_event_PRESENT 1
#define System_state_modemanager_queue_elem_selection_no_event_PRESENT 1
#define System_State_modemanager_queue_elem_system_startup_PRESENT 2
#define System_state_modemanager_queue_elem_selection_system_startup_PRESENT 2
#define System_State_modemanager_queue_elem_input_event_source_actuator 0
#define System_State_modemanager_queue_elem_input_event_source_actuator1 1
#define System_State_modemanager_queue_elem_input_event_source_actuator2 2
#define System_State_modemanager_queue_elem_input_event_source_egse 3
#define System_State_modemanager_queue_elem_input_event_source_modemanager 4
#define System_State_modemanager_queue_elem_input_event_source_sensor 5
#define System_State_modemanager_queue_elem_input_event_source_env 6
#define System_State_modemanager_queue_elem_input_event_dest_actuator 0
#define System_State_modemanager_queue_elem_input_event_dest_actuator1 1
#define System_State_modemanager_queue_elem_input_event_dest_actuator2 2
#define System_State_modemanager_queue_elem_input_event_dest_egse 3
#define System_State_modemanager_queue_elem_input_event_dest_modemanager 4
#define System_State_modemanager_queue_elem_input_event_dest_sensor 5
#define System_State_modemanager_queue_elem_input_event_dest_env 6
#define System_State_modemanager_queue_elem_input_event_event_NONE 0
#define System_State_modemanager_queue_elem_input_event_event_actuator1_NONE 0
#define System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_NONE 0
#define System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_input_none_PRESENT 1
#define System_state_modemanager_queue_elem_input_event_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_PRESENT 2
#define System_state_modemanager_queue_elem_input_event_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_PRESENT 1
#define System_state_modemanager_queue_elem_input_event_event_actuator1_selection_msg_in_PRESENT 1
#define System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_NONE 0
#define System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_PRESENT 1
#define System_state_modemanager_queue_elem_input_event_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_PRESENT 2
#define System_state_modemanager_queue_elem_input_event_event_actuator1_selection_msg_out_PRESENT 2
#define System_State_modemanager_queue_elem_input_event_event_actuator1_PRESENT 1
#define System_state_modemanager_queue_elem_input_event_event_selection_actuator1_PRESENT 1
#define System_State_modemanager_queue_elem_input_event_event_actuator2_NONE 0
#define System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_NONE 0
#define System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_input_none_PRESENT 1
#define System_state_modemanager_queue_elem_input_event_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_PRESENT 2
#define System_state_modemanager_queue_elem_input_event_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_PRESENT 1
#define System_state_modemanager_queue_elem_input_event_event_actuator2_selection_msg_in_PRESENT 1
#define System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_NONE 0
#define System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_PRESENT 1
#define System_state_modemanager_queue_elem_input_event_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_PRESENT 2
#define System_state_modemanager_queue_elem_input_event_event_actuator2_selection_msg_out_PRESENT 2
#define System_State_modemanager_queue_elem_input_event_event_actuator2_PRESENT 2
#define System_state_modemanager_queue_elem_input_event_event_selection_actuator2_PRESENT 2
#define System_State_modemanager_queue_elem_input_event_event_egse_NONE 0
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_in_NONE 0
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_PRESENT 1
#define System_state_modemanager_queue_elem_input_event_event_egse_msg_in_selection_systemtm_PRESENT 1
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_in_PRESENT 1
#define System_state_modemanager_queue_elem_input_event_event_egse_selection_msg_in_PRESENT 1
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_out_NONE 0
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_NONE 0
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define System_state_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define System_state_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define System_state_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_PRESENT 1
#define System_state_modemanager_queue_elem_input_event_event_egse_msg_out_selection_systemtc_PRESENT 1
#define System_State_modemanager_queue_elem_input_event_event_egse_msg_out_PRESENT 2
#define System_state_modemanager_queue_elem_input_event_event_egse_selection_msg_out_PRESENT 2
#define System_State_modemanager_queue_elem_input_event_event_egse_PRESENT 3
#define System_state_modemanager_queue_elem_input_event_event_selection_egse_PRESENT 3
#define System_State_modemanager_queue_elem_input_event_event_modemanager_NONE 0
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_NONE 0
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_input_none_PRESENT 1
#define System_state_modemanager_queue_elem_input_event_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define System_state_modemanager_queue_elem_input_event_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define System_state_modemanager_queue_elem_input_event_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_reading_PRESENT 4
#define System_state_modemanager_queue_elem_input_event_event_modemanager_msg_in_selection_reading_PRESENT 4
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_NONE 0
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define System_state_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define System_state_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define System_state_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_PRESENT 5
#define System_state_modemanager_queue_elem_input_event_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_PRESENT 1
#define System_state_modemanager_queue_elem_input_event_event_modemanager_selection_msg_in_PRESENT 1
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_NONE 0
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define System_state_modemanager_queue_elem_input_event_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define System_state_modemanager_queue_elem_input_event_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_PRESENT 3
#define System_state_modemanager_queue_elem_input_event_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_PRESENT 2
#define System_state_modemanager_queue_elem_input_event_event_modemanager_selection_msg_out_PRESENT 2
#define System_State_modemanager_queue_elem_input_event_event_modemanager_PRESENT 4
#define System_state_modemanager_queue_elem_input_event_event_selection_modemanager_PRESENT 4
#define System_State_modemanager_queue_elem_input_event_event_sensor_PRESENT 5
#define System_state_modemanager_queue_elem_input_event_event_selection_sensor_PRESENT 5
#define System_State_modemanager_queue_elem_input_event_PRESENT 3
#define System_state_modemanager_queue_elem_selection_input_event_PRESENT 3
#define System_State_modemanager_queue_elem_output_event_source_actuator 0
#define System_State_modemanager_queue_elem_output_event_source_actuator1 1
#define System_State_modemanager_queue_elem_output_event_source_actuator2 2
#define System_State_modemanager_queue_elem_output_event_source_egse 3
#define System_State_modemanager_queue_elem_output_event_source_modemanager 4
#define System_State_modemanager_queue_elem_output_event_source_sensor 5
#define System_State_modemanager_queue_elem_output_event_source_env 6
#define System_State_modemanager_queue_elem_output_event_dest_actuator 0
#define System_State_modemanager_queue_elem_output_event_dest_actuator1 1
#define System_State_modemanager_queue_elem_output_event_dest_actuator2 2
#define System_State_modemanager_queue_elem_output_event_dest_egse 3
#define System_State_modemanager_queue_elem_output_event_dest_modemanager 4
#define System_State_modemanager_queue_elem_output_event_dest_sensor 5
#define System_State_modemanager_queue_elem_output_event_dest_env 6
#define System_State_modemanager_queue_elem_output_event_event_NONE 0
#define System_State_modemanager_queue_elem_output_event_event_actuator1_NONE 0
#define System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_NONE 0
#define System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_input_none_PRESENT 1
#define System_state_modemanager_queue_elem_output_event_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_PRESENT 2
#define System_state_modemanager_queue_elem_output_event_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_PRESENT 1
#define System_state_modemanager_queue_elem_output_event_event_actuator1_selection_msg_in_PRESENT 1
#define System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_NONE 0
#define System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_PRESENT 1
#define System_state_modemanager_queue_elem_output_event_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_PRESENT 2
#define System_state_modemanager_queue_elem_output_event_event_actuator1_selection_msg_out_PRESENT 2
#define System_State_modemanager_queue_elem_output_event_event_actuator1_PRESENT 1
#define System_state_modemanager_queue_elem_output_event_event_selection_actuator1_PRESENT 1
#define System_State_modemanager_queue_elem_output_event_event_actuator2_NONE 0
#define System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_NONE 0
#define System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_input_none_PRESENT 1
#define System_state_modemanager_queue_elem_output_event_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_PRESENT 2
#define System_state_modemanager_queue_elem_output_event_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_PRESENT 1
#define System_state_modemanager_queue_elem_output_event_event_actuator2_selection_msg_in_PRESENT 1
#define System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_NONE 0
#define System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_PRESENT 1
#define System_state_modemanager_queue_elem_output_event_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_PRESENT 2
#define System_state_modemanager_queue_elem_output_event_event_actuator2_selection_msg_out_PRESENT 2
#define System_State_modemanager_queue_elem_output_event_event_actuator2_PRESENT 2
#define System_state_modemanager_queue_elem_output_event_event_selection_actuator2_PRESENT 2
#define System_State_modemanager_queue_elem_output_event_event_egse_NONE 0
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_in_NONE 0
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_PRESENT 1
#define System_state_modemanager_queue_elem_output_event_event_egse_msg_in_selection_systemtm_PRESENT 1
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_in_PRESENT 1
#define System_state_modemanager_queue_elem_output_event_event_egse_selection_msg_in_PRESENT 1
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_out_NONE 0
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_NONE 0
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define System_state_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define System_state_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define System_state_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_PRESENT 1
#define System_state_modemanager_queue_elem_output_event_event_egse_msg_out_selection_systemtc_PRESENT 1
#define System_State_modemanager_queue_elem_output_event_event_egse_msg_out_PRESENT 2
#define System_state_modemanager_queue_elem_output_event_event_egse_selection_msg_out_PRESENT 2
#define System_State_modemanager_queue_elem_output_event_event_egse_PRESENT 3
#define System_state_modemanager_queue_elem_output_event_event_selection_egse_PRESENT 3
#define System_State_modemanager_queue_elem_output_event_event_modemanager_NONE 0
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_NONE 0
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_input_none_PRESENT 1
#define System_state_modemanager_queue_elem_output_event_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define System_state_modemanager_queue_elem_output_event_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define System_state_modemanager_queue_elem_output_event_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_reading_PRESENT 4
#define System_state_modemanager_queue_elem_output_event_event_modemanager_msg_in_selection_reading_PRESENT 4
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_NONE 0
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define System_state_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define System_state_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define System_state_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_PRESENT 5
#define System_state_modemanager_queue_elem_output_event_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_PRESENT 1
#define System_state_modemanager_queue_elem_output_event_event_modemanager_selection_msg_in_PRESENT 1
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_NONE 0
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define System_state_modemanager_queue_elem_output_event_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define System_state_modemanager_queue_elem_output_event_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_PRESENT 3
#define System_state_modemanager_queue_elem_output_event_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_PRESENT 2
#define System_state_modemanager_queue_elem_output_event_event_modemanager_selection_msg_out_PRESENT 2
#define System_State_modemanager_queue_elem_output_event_event_modemanager_PRESENT 4
#define System_state_modemanager_queue_elem_output_event_event_selection_modemanager_PRESENT 4
#define System_State_modemanager_queue_elem_output_event_event_sensor_PRESENT 5
#define System_state_modemanager_queue_elem_output_event_event_selection_sensor_PRESENT 5
#define System_State_modemanager_queue_elem_output_event_PRESENT 4
#define System_state_modemanager_queue_elem_selection_output_event_PRESENT 4
#define System_State_modemanager_queue_elem_unhandled_input_source_actuator 0
#define System_State_modemanager_queue_elem_unhandled_input_source_actuator1 1
#define System_State_modemanager_queue_elem_unhandled_input_source_actuator2 2
#define System_State_modemanager_queue_elem_unhandled_input_source_egse 3
#define System_State_modemanager_queue_elem_unhandled_input_source_modemanager 4
#define System_State_modemanager_queue_elem_unhandled_input_source_sensor 5
#define System_State_modemanager_queue_elem_unhandled_input_source_env 6
#define System_State_modemanager_queue_elem_unhandled_input_dest_actuator 0
#define System_State_modemanager_queue_elem_unhandled_input_dest_actuator1 1
#define System_State_modemanager_queue_elem_unhandled_input_dest_actuator2 2
#define System_State_modemanager_queue_elem_unhandled_input_dest_egse 3
#define System_State_modemanager_queue_elem_unhandled_input_dest_modemanager 4
#define System_State_modemanager_queue_elem_unhandled_input_dest_sensor 5
#define System_State_modemanager_queue_elem_unhandled_input_dest_env 6
#define System_State_modemanager_queue_elem_unhandled_input_event_NONE 0
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_NONE 0
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_NONE 0
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_input_none_PRESENT 1
#define System_state_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_selection_input_none_PRESENT 1
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_PRESENT 2
#define System_state_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_selection_actuatortc_PRESENT 2
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_PRESENT 1
#define System_state_modemanager_queue_elem_unhandled_input_event_actuator1_selection_msg_in_PRESENT 1
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_NONE 0
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_PRESENT 1
#define System_state_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_selection_actuatortm_PRESENT 1
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_PRESENT 2
#define System_state_modemanager_queue_elem_unhandled_input_event_actuator1_selection_msg_out_PRESENT 2
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator1_PRESENT 1
#define System_state_modemanager_queue_elem_unhandled_input_event_selection_actuator1_PRESENT 1
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_NONE 0
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_NONE 0
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_input_none_PRESENT 1
#define System_state_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_selection_input_none_PRESENT 1
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorArm 0
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorExecute 1
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorStandby 2
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_PRESENT 2
#define System_state_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_selection_actuatortc_PRESENT 2
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_PRESENT 1
#define System_state_modemanager_queue_elem_unhandled_input_event_actuator2_selection_msg_in_PRESENT 1
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_NONE 0
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorArmed 0
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting 1
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_PRESENT 1
#define System_state_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_selection_actuatortm_PRESENT 1
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_PRESENT 2
#define System_state_modemanager_queue_elem_unhandled_input_event_actuator2_selection_msg_out_PRESENT 2
#define System_State_modemanager_queue_elem_unhandled_input_event_actuator2_PRESENT 2
#define System_state_modemanager_queue_elem_unhandled_input_event_selection_actuator2_PRESENT 2
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_NONE 0
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_NONE 0
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorArmed 0
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting 1
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorArmed 0
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting 1
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_PRESENT 1
#define System_state_modemanager_queue_elem_unhandled_input_event_egse_msg_in_selection_systemtm_PRESENT 1
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_PRESENT 1
#define System_state_modemanager_queue_elem_unhandled_input_event_egse_selection_msg_in_PRESENT 1
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_NONE 0
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_NONE 0
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT 1
#define System_state_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT 2
#define System_state_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_PRESENT 3
#define System_state_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_PRESENT 1
#define System_state_modemanager_queue_elem_unhandled_input_event_egse_msg_out_selection_systemtc_PRESENT 1
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_PRESENT 2
#define System_state_modemanager_queue_elem_unhandled_input_event_egse_selection_msg_out_PRESENT 2
#define System_State_modemanager_queue_elem_unhandled_input_event_egse_PRESENT 3
#define System_state_modemanager_queue_elem_unhandled_input_event_selection_egse_PRESENT 3
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_NONE 0
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_NONE 0
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_input_none_PRESENT 1
#define System_state_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_selection_input_none_PRESENT 1
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed 0
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting 1
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_PRESENT 2
#define System_state_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_selection_actuatortm1_PRESENT 2
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed 0
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting 1
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_PRESENT 3
#define System_state_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_selection_actuatortm2_PRESENT 3
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_reading_PRESENT 4
#define System_state_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_selection_reading_PRESENT 4
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_NONE 0
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT 1
#define System_state_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_goToIdle_PRESENT 1
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT 2
#define System_state_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_goToOperational_PRESENT 2
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT 3
#define System_state_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_doReport_PRESENT 3
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_PRESENT 5
#define System_state_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_selection_systemtc_PRESENT 5
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_PRESENT 1
#define System_state_modemanager_queue_elem_unhandled_input_event_modemanager_selection_msg_in_PRESENT 1
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_NONE 0
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorArm 0
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute 1
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby 2
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_PRESENT 1
#define System_state_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_selection_actuatortc1_PRESENT 1
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorArm 0
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute 1
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby 2
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_PRESENT 2
#define System_state_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_selection_actuatortc2_PRESENT 2
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed 0
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting 1
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed 0
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting 1
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy 2
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_PRESENT 3
#define System_state_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_selection_systemtm_PRESENT 3
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_PRESENT 2
#define System_state_modemanager_queue_elem_unhandled_input_event_modemanager_selection_msg_out_PRESENT 2
#define System_State_modemanager_queue_elem_unhandled_input_event_modemanager_PRESENT 4
#define System_state_modemanager_queue_elem_unhandled_input_event_selection_modemanager_PRESENT 4
#define System_State_modemanager_queue_elem_unhandled_input_event_sensor_PRESENT 5
#define System_state_modemanager_queue_elem_unhandled_input_event_selection_sensor_PRESENT 5
#define System_State_modemanager_queue_elem_unhandled_input_PRESENT 5
#define System_state_modemanager_queue_elem_selection_unhandled_input_PRESENT 5
#define System_State_actuator1_state_armed 0
#define System_State_actuator1_state_executing 1
#define System_State_actuator1_state_standby 2
#define System_State_actuator1_sender_actuator 0
#define System_State_actuator1_sender_actuator1 1
#define System_State_actuator1_sender_actuator2 2
#define System_State_actuator1_sender_egse 3
#define System_State_actuator1_sender_modemanager 4
#define System_State_actuator1_sender_sensor 5
#define System_State_actuator1_sender_env 6
#define System_State_actuator1_cmd_actuatorArm 0
#define System_State_actuator1_cmd_actuatorExecute 1
#define System_State_actuator1_cmd_actuatorStandby 2
#define System_State_actuator2_state_armed 0
#define System_State_actuator2_state_executing 1
#define System_State_actuator2_state_standby 2
#define System_State_actuator2_sender_actuator 0
#define System_State_actuator2_sender_actuator1 1
#define System_State_actuator2_sender_actuator2 2
#define System_State_actuator2_sender_egse 3
#define System_State_actuator2_sender_modemanager 4
#define System_State_actuator2_sender_sensor 5
#define System_State_actuator2_sender_env 6
#define System_State_actuator2_cmd_actuatorArm 0
#define System_State_actuator2_cmd_actuatorExecute 1
#define System_State_actuator2_cmd_actuatorStandby 2
#define System_State_modemanager_state_starting 0
#define System_State_modemanager_state_operational 1
#define System_State_modemanager_state_stopping 2
#define System_State_modemanager_state_idle 3
#define System_State_modemanager_sender_actuator 0
#define System_State_modemanager_sender_actuator1 1
#define System_State_modemanager_sender_actuator2 2
#define System_State_modemanager_sender_egse 3
#define System_State_modemanager_sender_modemanager 4
#define System_State_modemanager_sender_sensor 5
#define System_State_modemanager_sender_env 6
#define System_State_modemanager_status1_actuatorArmed 0
#define System_State_modemanager_status1_actuatorExecuting 1
#define System_State_modemanager_status1_actuatorStandingBy 2
#define System_State_modemanager_status2_actuatorArmed 0
#define System_State_modemanager_status2_actuatorExecuting 1
#define System_State_modemanager_status2_actuatorStandingBy 2
#define System_State_modemanager_stc_NONE 0
#define System_State_modemanager_stc_goToIdle_PRESENT 1
#define System_state_modemanager_stc_selection_goToIdle_PRESENT 1
#define System_State_modemanager_stc_goToOperational_PRESENT 2
#define System_state_modemanager_stc_selection_goToOperational_PRESENT 2
#define System_State_modemanager_stc_doReport_PRESENT 3
#define System_state_modemanager_stc_selection_doReport_PRESENT 3
#define System_State_modemanager_stm_status1_actuatorArmed 0
#define System_State_modemanager_stm_status1_actuatorExecuting 1
#define System_State_modemanager_stm_status1_actuatorStandingBy 2
#define System_State_modemanager_stm_status2_actuatorArmed 0
#define System_State_modemanager_stm_status2_actuatorExecuting 1
#define System_State_modemanager_stm_status2_actuatorStandingBy 2
typedef Actuator1_Event_msg_in_actuatortc {
    Actuator1_Event_msg_in_actuatortc_tc tc;
}

typedef Actuator1_Event_msg_in_input_none {
    bit dummy;
}

typedef Actuator1_Event_msg_out_actuatortm {
    Actuator1_Event_msg_out_actuatortm_tm tm;
}

typedef Actuator1_Event_msg_out_data {
    Actuator1_Event_msg_out_actuatortm actuatortm;
}

typedef Actuator2_Event_msg_in_actuatortc {
    Actuator2_Event_msg_in_actuatortc_tc tc;
}

typedef Actuator2_Event_msg_in_input_none {
    bit dummy;
}

typedef Actuator2_Event_msg_out_actuatortm {
    Actuator2_Event_msg_out_actuatortm_tm tm;
}

typedef Actuator2_Event_msg_out_data {
    Actuator2_Event_msg_out_actuatortm actuatortm;
}

typedef ActuatorConfiguration {
    ActuatorConfiguration_threshold1 threshold1;
    ActuatorConfiguration_threshold2 threshold2;
}

typedef Actuator_Context {
    Actuator_Context_state state;
    Actuator_Context_init_done init_done;
    Actuator_Context_sender sender;
    Actuator_Context_cmd cmd;
}

typedef AggregateTimerData_actuator1 {
    bit dummy;
}

typedef AggregateTimerData_actuator2 {
    bit dummy;
}

typedef AggregateTimerData_dummy_entry {
    bit dummy;
}

typedef AggregateTimerData_modemanager {
    bit dummy;
}

typedef Egse_Event_msg_in_systemtm_tm {
    Egse_Event_msg_in_systemtm_tm_reading reading;
    Egse_Event_msg_in_systemtm_tm_status1 status1;
    Egse_Event_msg_in_systemtm_tm_status2 status2;
}

typedef Egse_Event_msg_out_systemtc_tc_goToOperational {
    Egse_Event_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    Egse_Event_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Egse_systemtc_tc_goToOperational {
    Egse_systemtc_tc_goToOperational_threshold1 threshold1;
    Egse_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc {
    Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef Events_Ty_elem_input_event_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm {
    Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef Events_Ty_elem_input_event_event_actuator1_msg_out_data {
    Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc {
    Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef Events_Ty_elem_input_event_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm {
    Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef Events_Ty_elem_input_event_event_actuator2_msg_out_data {
    Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm {
    Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_reading reading;
    Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status1 status1;
    Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational {
    Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1 {
    Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2 {
    Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef Events_Ty_elem_input_event_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef Events_Ty_elem_input_event_event_modemanager_msg_in_reading {
    Events_Ty_elem_input_event_event_modemanager_msg_in_reading_x x;
}

typedef Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational {
    Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1 {
    Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2 {
    Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm {
    Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading reading;
    Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1 status1;
    Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef Events_Ty_elem_input_event_event_sensor {
    bit dummy;
}

typedef Events_Ty_elem_no_event {
    bit dummy;
}

typedef Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc {
    Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef Events_Ty_elem_output_event_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm {
    Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef Events_Ty_elem_output_event_event_actuator1_msg_out_data {
    Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc {
    Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef Events_Ty_elem_output_event_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm {
    Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef Events_Ty_elem_output_event_event_actuator2_msg_out_data {
    Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm {
    Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_reading reading;
    Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status1 status1;
    Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational {
    Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1 {
    Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2 {
    Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef Events_Ty_elem_output_event_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef Events_Ty_elem_output_event_event_modemanager_msg_in_reading {
    Events_Ty_elem_output_event_event_modemanager_msg_in_reading_x x;
}

typedef Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational {
    Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1 {
    Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2 {
    Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm {
    Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading reading;
    Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1 status1;
    Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef Events_Ty_elem_output_event_event_sensor {
    bit dummy;
}

typedef Events_Ty_elem_system_startup {
    bit dummy;
}

typedef Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc {
    Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef Events_Ty_elem_unhandled_input_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm {
    Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef Events_Ty_elem_unhandled_input_event_actuator1_msg_out_data {
    Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc {
    Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef Events_Ty_elem_unhandled_input_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm {
    Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef Events_Ty_elem_unhandled_input_event_actuator2_msg_out_data {
    Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm {
    Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading reading;
    Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1 status1;
    Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational {
    Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1 {
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2 {
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_msg_in_reading {
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_reading_x x;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational {
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1 {
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2 {
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm {
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading reading;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1 status1;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef Events_Ty_elem_unhandled_input_event_sensor {
    bit dummy;
}

typedef Function_Event_actuator1_msg_in_actuatortc {
    Function_Event_actuator1_msg_in_actuatortc_tc tc;
}

typedef Function_Event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef Function_Event_actuator1_msg_out_actuatortm {
    Function_Event_actuator1_msg_out_actuatortm_tm tm;
}

typedef Function_Event_actuator1_msg_out_data {
    Function_Event_actuator1_msg_out_actuatortm actuatortm;
}

typedef Function_Event_actuator2_msg_in_actuatortc {
    Function_Event_actuator2_msg_in_actuatortc_tc tc;
}

typedef Function_Event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef Function_Event_actuator2_msg_out_actuatortm {
    Function_Event_actuator2_msg_out_actuatortm_tm tm;
}

typedef Function_Event_actuator2_msg_out_data {
    Function_Event_actuator2_msg_out_actuatortm actuatortm;
}

typedef Function_Event_egse_msg_in_systemtm_tm {
    Function_Event_egse_msg_in_systemtm_tm_reading reading;
    Function_Event_egse_msg_in_systemtm_tm_status1 status1;
    Function_Event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef Function_Event_egse_msg_out_systemtc_tc_goToOperational {
    Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Function_Event_modemanager_msg_in_actuatortm1 {
    Function_Event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef Function_Event_modemanager_msg_in_actuatortm2 {
    Function_Event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef Function_Event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef Function_Event_modemanager_msg_in_reading {
    Function_Event_modemanager_msg_in_reading_x x;
}

typedef Function_Event_modemanager_msg_in_systemtc_tc_goToOperational {
    Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Function_Event_modemanager_msg_out_actuatortc1 {
    Function_Event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef Function_Event_modemanager_msg_out_actuatortc2 {
    Function_Event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef Function_Event_modemanager_msg_out_systemtm_tm {
    Function_Event_modemanager_msg_out_systemtm_tm_reading reading;
    Function_Event_modemanager_msg_out_systemtm_tm_status1 status1;
    Function_Event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef Function_Event_sensor {
    bit dummy;
}

typedef Interface_Event_event_actuator1_msg_in_actuatortc {
    Interface_Event_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef Interface_Event_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef Interface_Event_event_actuator1_msg_out_actuatortm {
    Interface_Event_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef Interface_Event_event_actuator1_msg_out_data {
    Interface_Event_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef Interface_Event_event_actuator2_msg_in_actuatortc {
    Interface_Event_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef Interface_Event_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef Interface_Event_event_actuator2_msg_out_actuatortm {
    Interface_Event_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef Interface_Event_event_actuator2_msg_out_data {
    Interface_Event_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef Interface_Event_event_egse_msg_in_systemtm_tm {
    Interface_Event_event_egse_msg_in_systemtm_tm_reading reading;
    Interface_Event_event_egse_msg_in_systemtm_tm_status1 status1;
    Interface_Event_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational {
    Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Interface_Event_event_modemanager_msg_in_actuatortm1 {
    Interface_Event_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef Interface_Event_event_modemanager_msg_in_actuatortm2 {
    Interface_Event_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef Interface_Event_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef Interface_Event_event_modemanager_msg_in_reading {
    Interface_Event_event_modemanager_msg_in_reading_x x;
}

typedef Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational {
    Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Interface_Event_event_modemanager_msg_out_actuatortc1 {
    Interface_Event_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef Interface_Event_event_modemanager_msg_out_actuatortc2 {
    Interface_Event_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef Interface_Event_event_modemanager_msg_out_systemtm_tm {
    Interface_Event_event_modemanager_msg_out_systemtm_tm_reading reading;
    Interface_Event_event_modemanager_msg_out_systemtm_tm_status1 status1;
    Interface_Event_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef Interface_Event_event_sensor {
    bit dummy;
}

typedef Modemanager_Context_stc_goToOperational {
    Modemanager_Context_stc_goToOperational_threshold1 threshold1;
    Modemanager_Context_stc_goToOperational_threshold2 threshold2;
}

typedef Modemanager_Context_stm {
    Modemanager_Context_stm_reading reading;
    Modemanager_Context_stm_status1 status1;
    Modemanager_Context_stm_status2 status2;
}

typedef Modemanager_Event_msg_in_actuatortm1 {
    Modemanager_Event_msg_in_actuatortm1_tm tm;
}

typedef Modemanager_Event_msg_in_actuatortm2 {
    Modemanager_Event_msg_in_actuatortm2_tm tm;
}

typedef Modemanager_Event_msg_in_input_none {
    bit dummy;
}

typedef Modemanager_Event_msg_in_reading {
    Modemanager_Event_msg_in_reading_x x;
}

typedef Modemanager_Event_msg_in_systemtc_tc_goToOperational {
    Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Modemanager_Event_msg_out_actuatortc1 {
    Modemanager_Event_msg_out_actuatortc1_tc tc;
}

typedef Modemanager_Event_msg_out_actuatortc2 {
    Modemanager_Event_msg_out_actuatortc2_tc tc;
}

typedef Modemanager_Event_msg_out_systemtm_tm {
    Modemanager_Event_msg_out_systemtm_tm_reading reading;
    Modemanager_Event_msg_out_systemtm_tm_status1 status1;
    Modemanager_Event_msg_out_systemtm_tm_status2 status2;
}

typedef Named_Function_Event_event_actuator1_msg_in_actuatortc {
    Named_Function_Event_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef Named_Function_Event_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef Named_Function_Event_event_actuator1_msg_out_actuatortm {
    Named_Function_Event_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef Named_Function_Event_event_actuator1_msg_out_data {
    Named_Function_Event_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef Named_Function_Event_event_actuator2_msg_in_actuatortc {
    Named_Function_Event_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef Named_Function_Event_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef Named_Function_Event_event_actuator2_msg_out_actuatortm {
    Named_Function_Event_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef Named_Function_Event_event_actuator2_msg_out_data {
    Named_Function_Event_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef Named_Function_Event_event_egse_msg_in_systemtm_tm {
    Named_Function_Event_event_egse_msg_in_systemtm_tm_reading reading;
    Named_Function_Event_event_egse_msg_in_systemtm_tm_status1 status1;
    Named_Function_Event_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational {
    Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Named_Function_Event_event_modemanager_msg_in_actuatortm1 {
    Named_Function_Event_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef Named_Function_Event_event_modemanager_msg_in_actuatortm2 {
    Named_Function_Event_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef Named_Function_Event_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef Named_Function_Event_event_modemanager_msg_in_reading {
    Named_Function_Event_event_modemanager_msg_in_reading_x x;
}

typedef Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational {
    Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Named_Function_Event_event_modemanager_msg_out_actuatortc1 {
    Named_Function_Event_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef Named_Function_Event_event_modemanager_msg_out_actuatortc2 {
    Named_Function_Event_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef Named_Function_Event_event_modemanager_msg_out_systemtm_tm {
    Named_Function_Event_event_modemanager_msg_out_systemtm_tm_reading reading;
    Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status1 status1;
    Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef Named_Function_Event_event_sensor {
    bit dummy;
}

typedef Named_Function_Event_id {
    byte data[80];
    int length;
}

typedef Observable_Event_input_event_event_actuator1_msg_in_actuatortc {
    Observable_Event_input_event_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef Observable_Event_input_event_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef Observable_Event_input_event_event_actuator1_msg_out_actuatortm {
    Observable_Event_input_event_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef Observable_Event_input_event_event_actuator1_msg_out_data {
    Observable_Event_input_event_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef Observable_Event_input_event_event_actuator2_msg_in_actuatortc {
    Observable_Event_input_event_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef Observable_Event_input_event_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef Observable_Event_input_event_event_actuator2_msg_out_actuatortm {
    Observable_Event_input_event_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef Observable_Event_input_event_event_actuator2_msg_out_data {
    Observable_Event_input_event_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef Observable_Event_input_event_event_egse_msg_in_systemtm_tm {
    Observable_Event_input_event_event_egse_msg_in_systemtm_tm_reading reading;
    Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status1 status1;
    Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational {
    Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Observable_Event_input_event_event_modemanager_msg_in_actuatortm1 {
    Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef Observable_Event_input_event_event_modemanager_msg_in_actuatortm2 {
    Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef Observable_Event_input_event_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef Observable_Event_input_event_event_modemanager_msg_in_reading {
    Observable_Event_input_event_event_modemanager_msg_in_reading_x x;
}

typedef Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational {
    Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Observable_Event_input_event_event_modemanager_msg_out_actuatortc1 {
    Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef Observable_Event_input_event_event_modemanager_msg_out_actuatortc2 {
    Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm {
    Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_reading reading;
    Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status1 status1;
    Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef Observable_Event_input_event_event_sensor {
    bit dummy;
}

typedef Observable_Event_no_event {
    bit dummy;
}

typedef Observable_Event_output_event_event_actuator1_msg_in_actuatortc {
    Observable_Event_output_event_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef Observable_Event_output_event_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef Observable_Event_output_event_event_actuator1_msg_out_actuatortm {
    Observable_Event_output_event_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef Observable_Event_output_event_event_actuator1_msg_out_data {
    Observable_Event_output_event_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef Observable_Event_output_event_event_actuator2_msg_in_actuatortc {
    Observable_Event_output_event_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef Observable_Event_output_event_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef Observable_Event_output_event_event_actuator2_msg_out_actuatortm {
    Observable_Event_output_event_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef Observable_Event_output_event_event_actuator2_msg_out_data {
    Observable_Event_output_event_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef Observable_Event_output_event_event_egse_msg_in_systemtm_tm {
    Observable_Event_output_event_event_egse_msg_in_systemtm_tm_reading reading;
    Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status1 status1;
    Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational {
    Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Observable_Event_output_event_event_modemanager_msg_in_actuatortm1 {
    Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef Observable_Event_output_event_event_modemanager_msg_in_actuatortm2 {
    Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef Observable_Event_output_event_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef Observable_Event_output_event_event_modemanager_msg_in_reading {
    Observable_Event_output_event_event_modemanager_msg_in_reading_x x;
}

typedef Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational {
    Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Observable_Event_output_event_event_modemanager_msg_out_actuatortc1 {
    Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef Observable_Event_output_event_event_modemanager_msg_out_actuatortc2 {
    Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm {
    Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_reading reading;
    Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status1 status1;
    Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef Observable_Event_output_event_event_sensor {
    bit dummy;
}

typedef Observable_Event_system_startup {
    bit dummy;
}

typedef Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc {
    Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef Observable_Event_unhandled_input_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm {
    Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef Observable_Event_unhandled_input_event_actuator1_msg_out_data {
    Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc {
    Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef Observable_Event_unhandled_input_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm {
    Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef Observable_Event_unhandled_input_event_actuator2_msg_out_data {
    Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm {
    Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_reading reading;
    Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status1 status1;
    Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational {
    Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1 {
    Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2 {
    Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef Observable_Event_unhandled_input_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef Observable_Event_unhandled_input_event_modemanager_msg_in_reading {
    Observable_Event_unhandled_input_event_modemanager_msg_in_reading_x x;
}

typedef Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational {
    Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1 {
    Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2 {
    Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm {
    Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading reading;
    Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1 status1;
    Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef Observable_Event_unhandled_input_event_sensor {
    bit dummy;
}

typedef OptimizedConfiguration {
    OptimizedConfiguration_threshold1 threshold1;
    OptimizedConfiguration_threshold2 threshold2;
}

typedef Sensor_Event {
    bit dummy;
}

typedef SystemCommand_goToOperational {
    SystemCommand_goToOperational_threshold1 threshold1;
    SystemCommand_goToOperational_threshold2 threshold2;
}

typedef SystemTelemetry {
    SystemTelemetry_reading reading;
    SystemTelemetry_status1 status1;
    SystemTelemetry_status2 status2;
}

typedef System_State_actuator1 {
    System_State_actuator1_state state;
    System_State_actuator1_init_done init_done;
    System_State_actuator1_sender sender;
    System_State_actuator1_cmd cmd;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc {
    System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm {
    System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_data {
    System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc {
    System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm {
    System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_data {
    System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm {
    System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading reading;
    System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1 status1;
    System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational {
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1 {
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2 {
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_reading {
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_reading_x x;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational {
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1 {
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2 {
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm {
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading reading;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1 status1;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef System_State_actuator1_queue_elem_input_event_event_sensor {
    bit dummy;
}

typedef System_State_actuator1_queue_elem_no_event {
    bit dummy;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc {
    System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm {
    System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_data {
    System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc {
    System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm {
    System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_data {
    System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm {
    System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading reading;
    System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1 status1;
    System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational {
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1 {
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2 {
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_reading {
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_reading_x x;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational {
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1 {
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2 {
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm {
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading reading;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1 status1;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef System_State_actuator1_queue_elem_output_event_event_sensor {
    bit dummy;
}

typedef System_State_actuator1_queue_elem_system_startup {
    bit dummy;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_data {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_data {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm {
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading reading;
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1 status1;
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational {
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1 {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2 {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_reading {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x x;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1 {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2 {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading reading;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1 status1;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_sensor {
    bit dummy;
}

typedef System_State_actuator2 {
    System_State_actuator2_state state;
    System_State_actuator2_init_done init_done;
    System_State_actuator2_sender sender;
    System_State_actuator2_cmd cmd;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc {
    System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm {
    System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_data {
    System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc {
    System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm {
    System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_data {
    System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm {
    System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading reading;
    System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1 status1;
    System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational {
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1 {
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2 {
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_reading {
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_reading_x x;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational {
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1 {
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2 {
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm {
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading reading;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1 status1;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef System_State_actuator2_queue_elem_input_event_event_sensor {
    bit dummy;
}

typedef System_State_actuator2_queue_elem_no_event {
    bit dummy;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc {
    System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm {
    System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_data {
    System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc {
    System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm {
    System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_data {
    System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm {
    System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading reading;
    System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1 status1;
    System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational {
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1 {
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2 {
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_reading {
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_reading_x x;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational {
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1 {
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2 {
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm {
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading reading;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1 status1;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef System_State_actuator2_queue_elem_output_event_event_sensor {
    bit dummy;
}

typedef System_State_actuator2_queue_elem_system_startup {
    bit dummy;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_data {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_data {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm {
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading reading;
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1 status1;
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational {
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1 {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2 {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_reading {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x x;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1 {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2 {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading reading;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1 status1;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_sensor {
    bit dummy;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc {
    System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm {
    System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_data {
    System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc {
    System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm {
    System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_data {
    System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm {
    System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading reading;
    System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1 status1;
    System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational {
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1 {
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2 {
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_reading {
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_reading_x x;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational {
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1 {
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2 {
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm {
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading reading;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1 status1;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef System_State_modemanager_queue_elem_input_event_event_sensor {
    bit dummy;
}

typedef System_State_modemanager_queue_elem_no_event {
    bit dummy;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc {
    System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm {
    System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_data {
    System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc {
    System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm {
    System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_data {
    System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm {
    System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading reading;
    System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1 status1;
    System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational {
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1 {
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2 {
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_reading {
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_reading_x x;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational {
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1 {
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2 {
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm {
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading reading;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1 status1;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef System_State_modemanager_queue_elem_output_event_event_sensor {
    bit dummy;
}

typedef System_State_modemanager_queue_elem_system_startup {
    bit dummy;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc tc;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_input_none {
    bit dummy;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm tm;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_data {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm actuatortm;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc tc;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_input_none {
    bit dummy;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm tm;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_data {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm actuatortm;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm {
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading reading;
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1 status1;
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2 status2;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational {
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1 {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm tm;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2 {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm tm;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_input_none {
    bit dummy;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_reading {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x x;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1 threshold1;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2 threshold2;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1 {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc tc;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2 {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc tc;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading reading;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1 status1;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2 status2;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_sensor {
    bit dummy;
}

typedef System_State_modemanager_stc_goToOperational {
    System_State_modemanager_stc_goToOperational_threshold1 threshold1;
    System_State_modemanager_stc_goToOperational_threshold2 threshold2;
}

typedef System_State_modemanager_stm {
    System_State_modemanager_stm_reading reading;
    System_State_modemanager_stm_status1 status1;
    System_State_modemanager_stm_status2 status2;
}

typedef System_State_timers_actuator1 {
    bit dummy;
}

typedef System_State_timers_actuator2 {
    bit dummy;
}

typedef System_State_timers_dummy_entry {
    bit dummy;
}

typedef System_State_timers_modemanager {
    bit dummy;
}

typedef T_Null_Record {
    bit dummy;
}

typedef TimerData {
    TimerData_timer_enabled timer_enabled;
    TimerData_interval interval;
}

typedef Untitled_msc_Context {
    Untitled_msc_Context_state state;
    Untitled_msc_Context_init_done init_done;
    Untitled_msc_Context_sender sender;
}

typedef Actuator1_Event_msg_in_data {
    Actuator1_Event_msg_in_input_none input_none;
    Actuator1_Event_msg_in_actuatortc actuatortc;
}

typedef Actuator1_Event_msg_out {
    Actuator1_Event_msg_out_data data;
    int selection;
}

typedef Actuator2_Event_msg_in_data {
    Actuator2_Event_msg_in_input_none input_none;
    Actuator2_Event_msg_in_actuatortc actuatortc;
}

typedef Actuator2_Event_msg_out {
    Actuator2_Event_msg_out_data data;
    int selection;
}

typedef AggregateTimerData {
    AggregateTimerData_actuator1 actuator1;
    AggregateTimerData_actuator2 actuator2;
    AggregateTimerData_modemanager modemanager;
    AggregateTimerData_dummy_entry dummy_entry;
}

typedef Egse_Event_msg_in_systemtm {
    Egse_Event_msg_in_systemtm_tm tm;
}

typedef Egse_Event_msg_out_systemtc_tc_data {
    Egse_Event_msg_out_systemtc_tc_goToIdle goToIdle;
    Egse_Event_msg_out_systemtc_tc_goToOperational goToOperational;
    Egse_Event_msg_out_systemtc_tc_doReport doReport;
}

typedef Egse_systemtc_tc_data {
    Egse_systemtc_tc_goToIdle goToIdle;
    Egse_systemtc_tc_goToOperational goToOperational;
    Egse_systemtc_tc_doReport doReport;
}

typedef Events_Ty_elem_input_event_event_actuator1_msg_in_data {
    Events_Ty_elem_input_event_event_actuator1_msg_in_input_none input_none;
    Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef Events_Ty_elem_input_event_event_actuator1_msg_out {
    Events_Ty_elem_input_event_event_actuator1_msg_out_data data;
    int selection;
}

typedef Events_Ty_elem_input_event_event_actuator2_msg_in_data {
    Events_Ty_elem_input_event_event_actuator2_msg_in_input_none input_none;
    Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef Events_Ty_elem_input_event_event_actuator2_msg_out {
    Events_Ty_elem_input_event_event_actuator2_msg_out_data data;
    int selection;
}

typedef Events_Ty_elem_input_event_event_egse_msg_in_systemtm {
    Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm tm;
}

typedef Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_data {
    Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_data {
    Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm {
    Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm tm;
}

typedef Events_Ty_elem_output_event_event_actuator1_msg_in_data {
    Events_Ty_elem_output_event_event_actuator1_msg_in_input_none input_none;
    Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef Events_Ty_elem_output_event_event_actuator1_msg_out {
    Events_Ty_elem_output_event_event_actuator1_msg_out_data data;
    int selection;
}

typedef Events_Ty_elem_output_event_event_actuator2_msg_in_data {
    Events_Ty_elem_output_event_event_actuator2_msg_in_input_none input_none;
    Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef Events_Ty_elem_output_event_event_actuator2_msg_out {
    Events_Ty_elem_output_event_event_actuator2_msg_out_data data;
    int selection;
}

typedef Events_Ty_elem_output_event_event_egse_msg_in_systemtm {
    Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm tm;
}

typedef Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_data {
    Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_data {
    Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm {
    Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm tm;
}

typedef Events_Ty_elem_unhandled_input_event_actuator1_msg_in_data {
    Events_Ty_elem_unhandled_input_event_actuator1_msg_in_input_none input_none;
    Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef Events_Ty_elem_unhandled_input_event_actuator1_msg_out {
    Events_Ty_elem_unhandled_input_event_actuator1_msg_out_data data;
    int selection;
}

typedef Events_Ty_elem_unhandled_input_event_actuator2_msg_in_data {
    Events_Ty_elem_unhandled_input_event_actuator2_msg_in_input_none input_none;
    Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef Events_Ty_elem_unhandled_input_event_actuator2_msg_out {
    Events_Ty_elem_unhandled_input_event_actuator2_msg_out_data data;
    int selection;
}

typedef Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm {
    Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm tm;
}

typedef Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_data {
    Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_data {
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm {
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm tm;
}

typedef Function_Event_actuator1_msg_in_data {
    Function_Event_actuator1_msg_in_input_none input_none;
    Function_Event_actuator1_msg_in_actuatortc actuatortc;
}

typedef Function_Event_actuator1_msg_out {
    Function_Event_actuator1_msg_out_data data;
    int selection;
}

typedef Function_Event_actuator2_msg_in_data {
    Function_Event_actuator2_msg_in_input_none input_none;
    Function_Event_actuator2_msg_in_actuatortc actuatortc;
}

typedef Function_Event_actuator2_msg_out {
    Function_Event_actuator2_msg_out_data data;
    int selection;
}

typedef Function_Event_egse_msg_in_systemtm {
    Function_Event_egse_msg_in_systemtm_tm tm;
}

typedef Function_Event_egse_msg_out_systemtc_tc_data {
    Function_Event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    Function_Event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    Function_Event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef Function_Event_modemanager_msg_in_systemtc_tc_data {
    Function_Event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    Function_Event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    Function_Event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef Function_Event_modemanager_msg_out_systemtm {
    Function_Event_modemanager_msg_out_systemtm_tm tm;
}

typedef Interface_Event_event_actuator1_msg_in_data {
    Interface_Event_event_actuator1_msg_in_input_none input_none;
    Interface_Event_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef Interface_Event_event_actuator1_msg_out {
    Interface_Event_event_actuator1_msg_out_data data;
    int selection;
}

typedef Interface_Event_event_actuator2_msg_in_data {
    Interface_Event_event_actuator2_msg_in_input_none input_none;
    Interface_Event_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef Interface_Event_event_actuator2_msg_out {
    Interface_Event_event_actuator2_msg_out_data data;
    int selection;
}

typedef Interface_Event_event_egse_msg_in_systemtm {
    Interface_Event_event_egse_msg_in_systemtm_tm tm;
}

typedef Interface_Event_event_egse_msg_out_systemtc_tc_data {
    Interface_Event_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    Interface_Event_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef Interface_Event_event_modemanager_msg_in_systemtc_tc_data {
    Interface_Event_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    Interface_Event_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef Interface_Event_event_modemanager_msg_out_systemtm {
    Interface_Event_event_modemanager_msg_out_systemtm_tm tm;
}

typedef Modemanager_Context_stc_data {
    Modemanager_Context_stc_goToIdle goToIdle;
    Modemanager_Context_stc_goToOperational goToOperational;
    Modemanager_Context_stc_doReport doReport;
}

typedef Modemanager_Event_msg_in_systemtc_tc_data {
    Modemanager_Event_msg_in_systemtc_tc_goToIdle goToIdle;
    Modemanager_Event_msg_in_systemtc_tc_goToOperational goToOperational;
    Modemanager_Event_msg_in_systemtc_tc_doReport doReport;
}

typedef Modemanager_Event_msg_out_systemtm {
    Modemanager_Event_msg_out_systemtm_tm tm;
}

typedef Named_Function_Event_event_actuator1_msg_in_data {
    Named_Function_Event_event_actuator1_msg_in_input_none input_none;
    Named_Function_Event_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef Named_Function_Event_event_actuator1_msg_out {
    Named_Function_Event_event_actuator1_msg_out_data data;
    int selection;
}

typedef Named_Function_Event_event_actuator2_msg_in_data {
    Named_Function_Event_event_actuator2_msg_in_input_none input_none;
    Named_Function_Event_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef Named_Function_Event_event_actuator2_msg_out {
    Named_Function_Event_event_actuator2_msg_out_data data;
    int selection;
}

typedef Named_Function_Event_event_egse_msg_in_systemtm {
    Named_Function_Event_event_egse_msg_in_systemtm_tm tm;
}

typedef Named_Function_Event_event_egse_msg_out_systemtc_tc_data {
    Named_Function_Event_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    Named_Function_Event_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef Named_Function_Event_event_modemanager_msg_in_systemtc_tc_data {
    Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    Named_Function_Event_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef Named_Function_Event_event_modemanager_msg_out_systemtm {
    Named_Function_Event_event_modemanager_msg_out_systemtm_tm tm;
}

typedef Observable_Event_input_event_event_actuator1_msg_in_data {
    Observable_Event_input_event_event_actuator1_msg_in_input_none input_none;
    Observable_Event_input_event_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef Observable_Event_input_event_event_actuator1_msg_out {
    Observable_Event_input_event_event_actuator1_msg_out_data data;
    int selection;
}

typedef Observable_Event_input_event_event_actuator2_msg_in_data {
    Observable_Event_input_event_event_actuator2_msg_in_input_none input_none;
    Observable_Event_input_event_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef Observable_Event_input_event_event_actuator2_msg_out {
    Observable_Event_input_event_event_actuator2_msg_out_data data;
    int selection;
}

typedef Observable_Event_input_event_event_egse_msg_in_systemtm {
    Observable_Event_input_event_event_egse_msg_in_systemtm_tm tm;
}

typedef Observable_Event_input_event_event_egse_msg_out_systemtc_tc_data {
    Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    Observable_Event_input_event_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_data {
    Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef Observable_Event_input_event_event_modemanager_msg_out_systemtm {
    Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm tm;
}

typedef Observable_Event_output_event_event_actuator1_msg_in_data {
    Observable_Event_output_event_event_actuator1_msg_in_input_none input_none;
    Observable_Event_output_event_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef Observable_Event_output_event_event_actuator1_msg_out {
    Observable_Event_output_event_event_actuator1_msg_out_data data;
    int selection;
}

typedef Observable_Event_output_event_event_actuator2_msg_in_data {
    Observable_Event_output_event_event_actuator2_msg_in_input_none input_none;
    Observable_Event_output_event_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef Observable_Event_output_event_event_actuator2_msg_out {
    Observable_Event_output_event_event_actuator2_msg_out_data data;
    int selection;
}

typedef Observable_Event_output_event_event_egse_msg_in_systemtm {
    Observable_Event_output_event_event_egse_msg_in_systemtm_tm tm;
}

typedef Observable_Event_output_event_event_egse_msg_out_systemtc_tc_data {
    Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    Observable_Event_output_event_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_data {
    Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef Observable_Event_output_event_event_modemanager_msg_out_systemtm {
    Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm tm;
}

typedef Observable_Event_unhandled_input_event_actuator1_msg_in_data {
    Observable_Event_unhandled_input_event_actuator1_msg_in_input_none input_none;
    Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef Observable_Event_unhandled_input_event_actuator1_msg_out {
    Observable_Event_unhandled_input_event_actuator1_msg_out_data data;
    int selection;
}

typedef Observable_Event_unhandled_input_event_actuator2_msg_in_data {
    Observable_Event_unhandled_input_event_actuator2_msg_in_input_none input_none;
    Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef Observable_Event_unhandled_input_event_actuator2_msg_out {
    Observable_Event_unhandled_input_event_actuator2_msg_out_data data;
    int selection;
}

typedef Observable_Event_unhandled_input_event_egse_msg_in_systemtm {
    Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm tm;
}

typedef Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_data {
    Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_data {
    Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm {
    Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm tm;
}

typedef SystemCommand_data {
    SystemCommand_goToIdle goToIdle;
    SystemCommand_goToOperational goToOperational;
    SystemCommand_doReport doReport;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_data {
    System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_input_none input_none;
    System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out {
    System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_data {
    System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_input_none input_none;
    System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out {
    System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm {
    System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm tm;
}

typedef System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_data {
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_data {
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm {
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm tm;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_data {
    System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_input_none input_none;
    System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out {
    System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_data {
    System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_input_none input_none;
    System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out {
    System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm {
    System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm tm;
}

typedef System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_data {
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_data {
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm {
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm tm;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_data {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_input_none input_none;
    System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_data {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_input_none input_none;
    System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm {
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm tm;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_data {
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_data {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm tm;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_data {
    System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_input_none input_none;
    System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out {
    System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_data {
    System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_input_none input_none;
    System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out {
    System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm {
    System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm tm;
}

typedef System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_data {
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_data {
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm {
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm tm;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_data {
    System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_input_none input_none;
    System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out {
    System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_data {
    System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_input_none input_none;
    System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out {
    System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm {
    System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm tm;
}

typedef System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_data {
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_data {
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm {
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm tm;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_data {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_input_none input_none;
    System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_data {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_input_none input_none;
    System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm {
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm tm;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_data {
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_data {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm tm;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_data {
    System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_input_none input_none;
    System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out {
    System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_data {
    System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_input_none input_none;
    System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out {
    System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm {
    System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm tm;
}

typedef System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_data {
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_data {
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm {
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm tm;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_data {
    System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_input_none input_none;
    System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out {
    System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_data {
    System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_input_none input_none;
    System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out {
    System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm {
    System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm tm;
}

typedef System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_data {
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_data {
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm {
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm tm;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_data {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_input_none input_none;
    System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc actuatortc;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_data {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_input_none input_none;
    System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc actuatortc;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm {
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm tm;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_data {
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle goToIdle;
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational goToOperational;
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport doReport;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_data {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle goToIdle;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational goToOperational;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport doReport;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm tm;
}

typedef System_State_modemanager_stc_data {
    System_State_modemanager_stc_goToIdle goToIdle;
    System_State_modemanager_stc_goToOperational goToOperational;
    System_State_modemanager_stc_doReport doReport;
}

typedef System_State_timers {
    System_State_timers_actuator1 actuator1;
    System_State_timers_actuator2 actuator2;
    System_State_timers_modemanager modemanager;
    System_State_timers_dummy_entry dummy_entry;
}

typedef Actuator1_Event_msg_in {
    Actuator1_Event_msg_in_data data;
    int selection;
}

typedef Actuator2_Event_msg_in {
    Actuator2_Event_msg_in_data data;
    int selection;
}

typedef Egse_Event_msg_in_data {
    Egse_Event_msg_in_systemtm systemtm;
}

typedef Egse_Event_msg_out_systemtc_tc {
    Egse_Event_msg_out_systemtc_tc_data data;
    int selection;
}

typedef Egse_systemtc_tc {
    Egse_systemtc_tc_data data;
    int selection;
}

typedef Events_Ty_elem_input_event_event_actuator1_msg_in {
    Events_Ty_elem_input_event_event_actuator1_msg_in_data data;
    int selection;
}

typedef Events_Ty_elem_input_event_event_actuator2_msg_in {
    Events_Ty_elem_input_event_event_actuator2_msg_in_data data;
    int selection;
}

typedef Events_Ty_elem_input_event_event_egse_msg_in_data {
    Events_Ty_elem_input_event_event_egse_msg_in_systemtm systemtm;
}

typedef Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc {
    Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc {
    Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef Events_Ty_elem_input_event_event_modemanager_msg_out_data {
    Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1 actuatortc1;
    Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2 actuatortc2;
    Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm systemtm;
}

typedef Events_Ty_elem_output_event_event_actuator1_msg_in {
    Events_Ty_elem_output_event_event_actuator1_msg_in_data data;
    int selection;
}

typedef Events_Ty_elem_output_event_event_actuator2_msg_in {
    Events_Ty_elem_output_event_event_actuator2_msg_in_data data;
    int selection;
}

typedef Events_Ty_elem_output_event_event_egse_msg_in_data {
    Events_Ty_elem_output_event_event_egse_msg_in_systemtm systemtm;
}

typedef Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc {
    Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc {
    Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef Events_Ty_elem_output_event_event_modemanager_msg_out_data {
    Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1 actuatortc1;
    Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2 actuatortc2;
    Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm systemtm;
}

typedef Events_Ty_elem_unhandled_input_event_actuator1_msg_in {
    Events_Ty_elem_unhandled_input_event_actuator1_msg_in_data data;
    int selection;
}

typedef Events_Ty_elem_unhandled_input_event_actuator2_msg_in {
    Events_Ty_elem_unhandled_input_event_actuator2_msg_in_data data;
    int selection;
}

typedef Events_Ty_elem_unhandled_input_event_egse_msg_in_data {
    Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm systemtm;
}

typedef Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc {
    Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc {
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_msg_out_data {
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1 actuatortc1;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2 actuatortc2;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm systemtm;
}

typedef Function_Event_actuator1_msg_in {
    Function_Event_actuator1_msg_in_data data;
    int selection;
}

typedef Function_Event_actuator2_msg_in {
    Function_Event_actuator2_msg_in_data data;
    int selection;
}

typedef Function_Event_egse_msg_in_data {
    Function_Event_egse_msg_in_systemtm systemtm;
}

typedef Function_Event_egse_msg_out_systemtc_tc {
    Function_Event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef Function_Event_modemanager_msg_in_systemtc_tc {
    Function_Event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef Function_Event_modemanager_msg_out_data {
    Function_Event_modemanager_msg_out_actuatortc1 actuatortc1;
    Function_Event_modemanager_msg_out_actuatortc2 actuatortc2;
    Function_Event_modemanager_msg_out_systemtm systemtm;
}

typedef Interface_Event_event_actuator1_msg_in {
    Interface_Event_event_actuator1_msg_in_data data;
    int selection;
}

typedef Interface_Event_event_actuator2_msg_in {
    Interface_Event_event_actuator2_msg_in_data data;
    int selection;
}

typedef Interface_Event_event_egse_msg_in_data {
    Interface_Event_event_egse_msg_in_systemtm systemtm;
}

typedef Interface_Event_event_egse_msg_out_systemtc_tc {
    Interface_Event_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef Interface_Event_event_modemanager_msg_in_systemtc_tc {
    Interface_Event_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef Interface_Event_event_modemanager_msg_out_data {
    Interface_Event_event_modemanager_msg_out_actuatortc1 actuatortc1;
    Interface_Event_event_modemanager_msg_out_actuatortc2 actuatortc2;
    Interface_Event_event_modemanager_msg_out_systemtm systemtm;
}

typedef Modemanager_Context_stc {
    Modemanager_Context_stc_data data;
    int selection;
}

typedef Modemanager_Event_msg_in_systemtc_tc {
    Modemanager_Event_msg_in_systemtc_tc_data data;
    int selection;
}

typedef Modemanager_Event_msg_out_data {
    Modemanager_Event_msg_out_actuatortc1 actuatortc1;
    Modemanager_Event_msg_out_actuatortc2 actuatortc2;
    Modemanager_Event_msg_out_systemtm systemtm;
}

typedef Named_Function_Event_event_actuator1_msg_in {
    Named_Function_Event_event_actuator1_msg_in_data data;
    int selection;
}

typedef Named_Function_Event_event_actuator2_msg_in {
    Named_Function_Event_event_actuator2_msg_in_data data;
    int selection;
}

typedef Named_Function_Event_event_egse_msg_in_data {
    Named_Function_Event_event_egse_msg_in_systemtm systemtm;
}

typedef Named_Function_Event_event_egse_msg_out_systemtc_tc {
    Named_Function_Event_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef Named_Function_Event_event_modemanager_msg_in_systemtc_tc {
    Named_Function_Event_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef Named_Function_Event_event_modemanager_msg_out_data {
    Named_Function_Event_event_modemanager_msg_out_actuatortc1 actuatortc1;
    Named_Function_Event_event_modemanager_msg_out_actuatortc2 actuatortc2;
    Named_Function_Event_event_modemanager_msg_out_systemtm systemtm;
}

typedef Observable_Event_input_event_event_actuator1_msg_in {
    Observable_Event_input_event_event_actuator1_msg_in_data data;
    int selection;
}

typedef Observable_Event_input_event_event_actuator2_msg_in {
    Observable_Event_input_event_event_actuator2_msg_in_data data;
    int selection;
}

typedef Observable_Event_input_event_event_egse_msg_in_data {
    Observable_Event_input_event_event_egse_msg_in_systemtm systemtm;
}

typedef Observable_Event_input_event_event_egse_msg_out_systemtc_tc {
    Observable_Event_input_event_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc {
    Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef Observable_Event_input_event_event_modemanager_msg_out_data {
    Observable_Event_input_event_event_modemanager_msg_out_actuatortc1 actuatortc1;
    Observable_Event_input_event_event_modemanager_msg_out_actuatortc2 actuatortc2;
    Observable_Event_input_event_event_modemanager_msg_out_systemtm systemtm;
}

typedef Observable_Event_output_event_event_actuator1_msg_in {
    Observable_Event_output_event_event_actuator1_msg_in_data data;
    int selection;
}

typedef Observable_Event_output_event_event_actuator2_msg_in {
    Observable_Event_output_event_event_actuator2_msg_in_data data;
    int selection;
}

typedef Observable_Event_output_event_event_egse_msg_in_data {
    Observable_Event_output_event_event_egse_msg_in_systemtm systemtm;
}

typedef Observable_Event_output_event_event_egse_msg_out_systemtc_tc {
    Observable_Event_output_event_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc {
    Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef Observable_Event_output_event_event_modemanager_msg_out_data {
    Observable_Event_output_event_event_modemanager_msg_out_actuatortc1 actuatortc1;
    Observable_Event_output_event_event_modemanager_msg_out_actuatortc2 actuatortc2;
    Observable_Event_output_event_event_modemanager_msg_out_systemtm systemtm;
}

typedef Observable_Event_unhandled_input_event_actuator1_msg_in {
    Observable_Event_unhandled_input_event_actuator1_msg_in_data data;
    int selection;
}

typedef Observable_Event_unhandled_input_event_actuator2_msg_in {
    Observable_Event_unhandled_input_event_actuator2_msg_in_data data;
    int selection;
}

typedef Observable_Event_unhandled_input_event_egse_msg_in_data {
    Observable_Event_unhandled_input_event_egse_msg_in_systemtm systemtm;
}

typedef Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc {
    Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc {
    Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef Observable_Event_unhandled_input_event_modemanager_msg_out_data {
    Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1 actuatortc1;
    Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2 actuatortc2;
    Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm systemtm;
}

typedef SystemCommand {
    SystemCommand_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in {
    System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in {
    System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_input_event_event_egse_msg_in_data {
    System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm systemtm;
}

typedef System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc {
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc {
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_data {
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1 actuatortc1;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2 actuatortc2;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm systemtm;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in {
    System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in {
    System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_output_event_event_egse_msg_in_data {
    System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm systemtm;
}

typedef System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc {
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc {
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_data {
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1 actuatortc1;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2 actuatortc2;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm systemtm;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_data {
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm systemtm;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc {
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_data {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1 actuatortc1;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2 actuatortc2;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm systemtm;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in {
    System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in {
    System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_input_event_event_egse_msg_in_data {
    System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm systemtm;
}

typedef System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc {
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc {
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_data {
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1 actuatortc1;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2 actuatortc2;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm systemtm;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in {
    System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in {
    System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_output_event_event_egse_msg_in_data {
    System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm systemtm;
}

typedef System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc {
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc {
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_data {
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1 actuatortc1;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2 actuatortc2;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm systemtm;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_data {
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm systemtm;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc {
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_data {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1 actuatortc1;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2 actuatortc2;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm systemtm;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in {
    System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in {
    System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_input_event_event_egse_msg_in_data {
    System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm systemtm;
}

typedef System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc {
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc {
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_data {
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1 actuatortc1;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2 actuatortc2;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm systemtm;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in {
    System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in {
    System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_output_event_event_egse_msg_in_data {
    System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm systemtm;
}

typedef System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc {
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc {
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_data {
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1 actuatortc1;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2 actuatortc2;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm systemtm;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_data {
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm systemtm;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc {
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_data {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1 actuatortc1;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2 actuatortc2;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm systemtm;
}

typedef System_State_modemanager_stc {
    System_State_modemanager_stc_data data;
    int selection;
}

typedef Actuator1_Event_data {
    Actuator1_Event_msg_in msg_in;
    Actuator1_Event_msg_out msg_out;
}

typedef Actuator2_Event_data {
    Actuator2_Event_msg_in msg_in;
    Actuator2_Event_msg_out msg_out;
}

typedef Egse_Event_msg_in {
    Egse_Event_msg_in_data data;
    int selection;
}

typedef Egse_Event_msg_out_systemtc {
    Egse_Event_msg_out_systemtc_tc tc;
}

typedef Events_Ty_elem_input_event_event_actuator1_data {
    Events_Ty_elem_input_event_event_actuator1_msg_in msg_in;
    Events_Ty_elem_input_event_event_actuator1_msg_out msg_out;
}

typedef Events_Ty_elem_input_event_event_actuator2_data {
    Events_Ty_elem_input_event_event_actuator2_msg_in msg_in;
    Events_Ty_elem_input_event_event_actuator2_msg_out msg_out;
}

typedef Events_Ty_elem_input_event_event_egse_msg_in {
    Events_Ty_elem_input_event_event_egse_msg_in_data data;
    int selection;
}

typedef Events_Ty_elem_input_event_event_egse_msg_out_systemtc {
    Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc tc;
}

typedef Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc {
    Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc tc;
}

typedef Events_Ty_elem_input_event_event_modemanager_msg_out {
    Events_Ty_elem_input_event_event_modemanager_msg_out_data data;
    int selection;
}

typedef Events_Ty_elem_output_event_event_actuator1_data {
    Events_Ty_elem_output_event_event_actuator1_msg_in msg_in;
    Events_Ty_elem_output_event_event_actuator1_msg_out msg_out;
}

typedef Events_Ty_elem_output_event_event_actuator2_data {
    Events_Ty_elem_output_event_event_actuator2_msg_in msg_in;
    Events_Ty_elem_output_event_event_actuator2_msg_out msg_out;
}

typedef Events_Ty_elem_output_event_event_egse_msg_in {
    Events_Ty_elem_output_event_event_egse_msg_in_data data;
    int selection;
}

typedef Events_Ty_elem_output_event_event_egse_msg_out_systemtc {
    Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc tc;
}

typedef Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc {
    Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc tc;
}

typedef Events_Ty_elem_output_event_event_modemanager_msg_out {
    Events_Ty_elem_output_event_event_modemanager_msg_out_data data;
    int selection;
}

typedef Events_Ty_elem_unhandled_input_event_actuator1_data {
    Events_Ty_elem_unhandled_input_event_actuator1_msg_in msg_in;
    Events_Ty_elem_unhandled_input_event_actuator1_msg_out msg_out;
}

typedef Events_Ty_elem_unhandled_input_event_actuator2_data {
    Events_Ty_elem_unhandled_input_event_actuator2_msg_in msg_in;
    Events_Ty_elem_unhandled_input_event_actuator2_msg_out msg_out;
}

typedef Events_Ty_elem_unhandled_input_event_egse_msg_in {
    Events_Ty_elem_unhandled_input_event_egse_msg_in_data data;
    int selection;
}

typedef Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc {
    Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc tc;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc {
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc tc;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_msg_out {
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_data data;
    int selection;
}

typedef Function_Event_actuator1_data {
    Function_Event_actuator1_msg_in msg_in;
    Function_Event_actuator1_msg_out msg_out;
}

typedef Function_Event_actuator2_data {
    Function_Event_actuator2_msg_in msg_in;
    Function_Event_actuator2_msg_out msg_out;
}

typedef Function_Event_egse_msg_in {
    Function_Event_egse_msg_in_data data;
    int selection;
}

typedef Function_Event_egse_msg_out_systemtc {
    Function_Event_egse_msg_out_systemtc_tc tc;
}

typedef Function_Event_modemanager_msg_in_systemtc {
    Function_Event_modemanager_msg_in_systemtc_tc tc;
}

typedef Function_Event_modemanager_msg_out {
    Function_Event_modemanager_msg_out_data data;
    int selection;
}

typedef Interface_Event_event_actuator1_data {
    Interface_Event_event_actuator1_msg_in msg_in;
    Interface_Event_event_actuator1_msg_out msg_out;
}

typedef Interface_Event_event_actuator2_data {
    Interface_Event_event_actuator2_msg_in msg_in;
    Interface_Event_event_actuator2_msg_out msg_out;
}

typedef Interface_Event_event_egse_msg_in {
    Interface_Event_event_egse_msg_in_data data;
    int selection;
}

typedef Interface_Event_event_egse_msg_out_systemtc {
    Interface_Event_event_egse_msg_out_systemtc_tc tc;
}

typedef Interface_Event_event_modemanager_msg_in_systemtc {
    Interface_Event_event_modemanager_msg_in_systemtc_tc tc;
}

typedef Interface_Event_event_modemanager_msg_out {
    Interface_Event_event_modemanager_msg_out_data data;
    int selection;
}

typedef Modemanager_Context {
    Modemanager_Context_state state;
    Modemanager_Context_init_done init_done;
    Modemanager_Context_sender sender;
    Modemanager_Context_status1 status1;
    Modemanager_Context_status2 status2;
    Modemanager_Context_r r;
    Modemanager_Context_threshold1 threshold1;
    Modemanager_Context_threshold2 threshold2;
    Modemanager_Context_stc stc;
    Modemanager_Context_stm stm;
}

typedef Modemanager_Event_msg_in_systemtc {
    Modemanager_Event_msg_in_systemtc_tc tc;
}

typedef Modemanager_Event_msg_out {
    Modemanager_Event_msg_out_data data;
    int selection;
}

typedef Named_Function_Event_event_actuator1_data {
    Named_Function_Event_event_actuator1_msg_in msg_in;
    Named_Function_Event_event_actuator1_msg_out msg_out;
}

typedef Named_Function_Event_event_actuator2_data {
    Named_Function_Event_event_actuator2_msg_in msg_in;
    Named_Function_Event_event_actuator2_msg_out msg_out;
}

typedef Named_Function_Event_event_egse_msg_in {
    Named_Function_Event_event_egse_msg_in_data data;
    int selection;
}

typedef Named_Function_Event_event_egse_msg_out_systemtc {
    Named_Function_Event_event_egse_msg_out_systemtc_tc tc;
}

typedef Named_Function_Event_event_modemanager_msg_in_systemtc {
    Named_Function_Event_event_modemanager_msg_in_systemtc_tc tc;
}

typedef Named_Function_Event_event_modemanager_msg_out {
    Named_Function_Event_event_modemanager_msg_out_data data;
    int selection;
}

typedef Observable_Event_input_event_event_actuator1_data {
    Observable_Event_input_event_event_actuator1_msg_in msg_in;
    Observable_Event_input_event_event_actuator1_msg_out msg_out;
}

typedef Observable_Event_input_event_event_actuator2_data {
    Observable_Event_input_event_event_actuator2_msg_in msg_in;
    Observable_Event_input_event_event_actuator2_msg_out msg_out;
}

typedef Observable_Event_input_event_event_egse_msg_in {
    Observable_Event_input_event_event_egse_msg_in_data data;
    int selection;
}

typedef Observable_Event_input_event_event_egse_msg_out_systemtc {
    Observable_Event_input_event_event_egse_msg_out_systemtc_tc tc;
}

typedef Observable_Event_input_event_event_modemanager_msg_in_systemtc {
    Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc tc;
}

typedef Observable_Event_input_event_event_modemanager_msg_out {
    Observable_Event_input_event_event_modemanager_msg_out_data data;
    int selection;
}

typedef Observable_Event_output_event_event_actuator1_data {
    Observable_Event_output_event_event_actuator1_msg_in msg_in;
    Observable_Event_output_event_event_actuator1_msg_out msg_out;
}

typedef Observable_Event_output_event_event_actuator2_data {
    Observable_Event_output_event_event_actuator2_msg_in msg_in;
    Observable_Event_output_event_event_actuator2_msg_out msg_out;
}

typedef Observable_Event_output_event_event_egse_msg_in {
    Observable_Event_output_event_event_egse_msg_in_data data;
    int selection;
}

typedef Observable_Event_output_event_event_egse_msg_out_systemtc {
    Observable_Event_output_event_event_egse_msg_out_systemtc_tc tc;
}

typedef Observable_Event_output_event_event_modemanager_msg_in_systemtc {
    Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc tc;
}

typedef Observable_Event_output_event_event_modemanager_msg_out {
    Observable_Event_output_event_event_modemanager_msg_out_data data;
    int selection;
}

typedef Observable_Event_unhandled_input_event_actuator1_data {
    Observable_Event_unhandled_input_event_actuator1_msg_in msg_in;
    Observable_Event_unhandled_input_event_actuator1_msg_out msg_out;
}

typedef Observable_Event_unhandled_input_event_actuator2_data {
    Observable_Event_unhandled_input_event_actuator2_msg_in msg_in;
    Observable_Event_unhandled_input_event_actuator2_msg_out msg_out;
}

typedef Observable_Event_unhandled_input_event_egse_msg_in {
    Observable_Event_unhandled_input_event_egse_msg_in_data data;
    int selection;
}

typedef Observable_Event_unhandled_input_event_egse_msg_out_systemtc {
    Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc tc;
}

typedef Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc {
    Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc tc;
}

typedef Observable_Event_unhandled_input_event_modemanager_msg_out {
    Observable_Event_unhandled_input_event_modemanager_msg_out_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator1_data {
    System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in msg_in;
    System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out msg_out;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator2_data {
    System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in msg_in;
    System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out msg_out;
}

typedef System_State_actuator1_queue_elem_input_event_event_egse_msg_in {
    System_State_actuator1_queue_elem_input_event_event_egse_msg_in_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc {
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc tc;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc {
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc tc;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out {
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator1_data {
    System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in msg_in;
    System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out msg_out;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator2_data {
    System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in msg_in;
    System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out msg_out;
}

typedef System_State_actuator1_queue_elem_output_event_event_egse_msg_in {
    System_State_actuator1_queue_elem_output_event_event_egse_msg_in_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc {
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc tc;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc {
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc tc;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out {
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator1_data {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in msg_in;
    System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out msg_out;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator2_data {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in msg_in;
    System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out msg_out;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in {
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc {
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc tc;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc tc;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator1_data {
    System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in msg_in;
    System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out msg_out;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator2_data {
    System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in msg_in;
    System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out msg_out;
}

typedef System_State_actuator2_queue_elem_input_event_event_egse_msg_in {
    System_State_actuator2_queue_elem_input_event_event_egse_msg_in_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc {
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc tc;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc {
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc tc;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out {
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator1_data {
    System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in msg_in;
    System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out msg_out;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator2_data {
    System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in msg_in;
    System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out msg_out;
}

typedef System_State_actuator2_queue_elem_output_event_event_egse_msg_in {
    System_State_actuator2_queue_elem_output_event_event_egse_msg_in_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc {
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc tc;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc {
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc tc;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out {
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator1_data {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in msg_in;
    System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out msg_out;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator2_data {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in msg_in;
    System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out msg_out;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in {
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc {
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc tc;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc tc;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_data data;
    int selection;
}

typedef System_State_modemanager {
    System_State_modemanager_state state;
    System_State_modemanager_init_done init_done;
    System_State_modemanager_sender sender;
    System_State_modemanager_status1 status1;
    System_State_modemanager_status2 status2;
    System_State_modemanager_r r;
    System_State_modemanager_threshold1 threshold1;
    System_State_modemanager_threshold2 threshold2;
    System_State_modemanager_stc stc;
    System_State_modemanager_stm stm;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator1_data {
    System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in msg_in;
    System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out msg_out;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator2_data {
    System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in msg_in;
    System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out msg_out;
}

typedef System_State_modemanager_queue_elem_input_event_event_egse_msg_in {
    System_State_modemanager_queue_elem_input_event_event_egse_msg_in_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc {
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc tc;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc {
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc tc;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out {
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator1_data {
    System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in msg_in;
    System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out msg_out;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator2_data {
    System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in msg_in;
    System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out msg_out;
}

typedef System_State_modemanager_queue_elem_output_event_event_egse_msg_in {
    System_State_modemanager_queue_elem_output_event_event_egse_msg_in_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc {
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc tc;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc {
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc tc;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out {
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator1_data {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in msg_in;
    System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out msg_out;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator2_data {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in msg_in;
    System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out msg_out;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in {
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc {
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc tc;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc tc;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_data data;
    int selection;
}

typedef Actuator1_Event {
    Actuator1_Event_data data;
    int selection;
}

typedef Actuator2_Event {
    Actuator2_Event_data data;
    int selection;
}

typedef Egse_Event_msg_out_data {
    Egse_Event_msg_out_systemtc systemtc;
}

typedef Events_Ty_elem_input_event_event_actuator1 {
    Events_Ty_elem_input_event_event_actuator1_data data;
    int selection;
}

typedef Events_Ty_elem_input_event_event_actuator2 {
    Events_Ty_elem_input_event_event_actuator2_data data;
    int selection;
}

typedef Events_Ty_elem_input_event_event_egse_msg_out_data {
    Events_Ty_elem_input_event_event_egse_msg_out_systemtc systemtc;
}

typedef Events_Ty_elem_input_event_event_modemanager_msg_in_data {
    Events_Ty_elem_input_event_event_modemanager_msg_in_input_none input_none;
    Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1 actuatortm1;
    Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2 actuatortm2;
    Events_Ty_elem_input_event_event_modemanager_msg_in_reading reading;
    Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc systemtc;
}

typedef Events_Ty_elem_output_event_event_actuator1 {
    Events_Ty_elem_output_event_event_actuator1_data data;
    int selection;
}

typedef Events_Ty_elem_output_event_event_actuator2 {
    Events_Ty_elem_output_event_event_actuator2_data data;
    int selection;
}

typedef Events_Ty_elem_output_event_event_egse_msg_out_data {
    Events_Ty_elem_output_event_event_egse_msg_out_systemtc systemtc;
}

typedef Events_Ty_elem_output_event_event_modemanager_msg_in_data {
    Events_Ty_elem_output_event_event_modemanager_msg_in_input_none input_none;
    Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1 actuatortm1;
    Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2 actuatortm2;
    Events_Ty_elem_output_event_event_modemanager_msg_in_reading reading;
    Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc systemtc;
}

typedef Events_Ty_elem_unhandled_input_event_actuator1 {
    Events_Ty_elem_unhandled_input_event_actuator1_data data;
    int selection;
}

typedef Events_Ty_elem_unhandled_input_event_actuator2 {
    Events_Ty_elem_unhandled_input_event_actuator2_data data;
    int selection;
}

typedef Events_Ty_elem_unhandled_input_event_egse_msg_out_data {
    Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc systemtc;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_msg_in_data {
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_input_none input_none;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1 actuatortm1;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2 actuatortm2;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_reading reading;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc systemtc;
}

typedef Function_Event_actuator1 {
    Function_Event_actuator1_data data;
    int selection;
}

typedef Function_Event_actuator2 {
    Function_Event_actuator2_data data;
    int selection;
}

typedef Function_Event_egse_msg_out_data {
    Function_Event_egse_msg_out_systemtc systemtc;
}

typedef Function_Event_modemanager_msg_in_data {
    Function_Event_modemanager_msg_in_input_none input_none;
    Function_Event_modemanager_msg_in_actuatortm1 actuatortm1;
    Function_Event_modemanager_msg_in_actuatortm2 actuatortm2;
    Function_Event_modemanager_msg_in_reading reading;
    Function_Event_modemanager_msg_in_systemtc systemtc;
}

typedef Interface_Event_event_actuator1 {
    Interface_Event_event_actuator1_data data;
    int selection;
}

typedef Interface_Event_event_actuator2 {
    Interface_Event_event_actuator2_data data;
    int selection;
}

typedef Interface_Event_event_egse_msg_out_data {
    Interface_Event_event_egse_msg_out_systemtc systemtc;
}

typedef Interface_Event_event_modemanager_msg_in_data {
    Interface_Event_event_modemanager_msg_in_input_none input_none;
    Interface_Event_event_modemanager_msg_in_actuatortm1 actuatortm1;
    Interface_Event_event_modemanager_msg_in_actuatortm2 actuatortm2;
    Interface_Event_event_modemanager_msg_in_reading reading;
    Interface_Event_event_modemanager_msg_in_systemtc systemtc;
}

typedef Modemanager_Event_msg_in_data {
    Modemanager_Event_msg_in_input_none input_none;
    Modemanager_Event_msg_in_actuatortm1 actuatortm1;
    Modemanager_Event_msg_in_actuatortm2 actuatortm2;
    Modemanager_Event_msg_in_reading reading;
    Modemanager_Event_msg_in_systemtc systemtc;
}

typedef Named_Function_Event_event_actuator1 {
    Named_Function_Event_event_actuator1_data data;
    int selection;
}

typedef Named_Function_Event_event_actuator2 {
    Named_Function_Event_event_actuator2_data data;
    int selection;
}

typedef Named_Function_Event_event_egse_msg_out_data {
    Named_Function_Event_event_egse_msg_out_systemtc systemtc;
}

typedef Named_Function_Event_event_modemanager_msg_in_data {
    Named_Function_Event_event_modemanager_msg_in_input_none input_none;
    Named_Function_Event_event_modemanager_msg_in_actuatortm1 actuatortm1;
    Named_Function_Event_event_modemanager_msg_in_actuatortm2 actuatortm2;
    Named_Function_Event_event_modemanager_msg_in_reading reading;
    Named_Function_Event_event_modemanager_msg_in_systemtc systemtc;
}

typedef Observable_Event_input_event_event_actuator1 {
    Observable_Event_input_event_event_actuator1_data data;
    int selection;
}

typedef Observable_Event_input_event_event_actuator2 {
    Observable_Event_input_event_event_actuator2_data data;
    int selection;
}

typedef Observable_Event_input_event_event_egse_msg_out_data {
    Observable_Event_input_event_event_egse_msg_out_systemtc systemtc;
}

typedef Observable_Event_input_event_event_modemanager_msg_in_data {
    Observable_Event_input_event_event_modemanager_msg_in_input_none input_none;
    Observable_Event_input_event_event_modemanager_msg_in_actuatortm1 actuatortm1;
    Observable_Event_input_event_event_modemanager_msg_in_actuatortm2 actuatortm2;
    Observable_Event_input_event_event_modemanager_msg_in_reading reading;
    Observable_Event_input_event_event_modemanager_msg_in_systemtc systemtc;
}

typedef Observable_Event_output_event_event_actuator1 {
    Observable_Event_output_event_event_actuator1_data data;
    int selection;
}

typedef Observable_Event_output_event_event_actuator2 {
    Observable_Event_output_event_event_actuator2_data data;
    int selection;
}

typedef Observable_Event_output_event_event_egse_msg_out_data {
    Observable_Event_output_event_event_egse_msg_out_systemtc systemtc;
}

typedef Observable_Event_output_event_event_modemanager_msg_in_data {
    Observable_Event_output_event_event_modemanager_msg_in_input_none input_none;
    Observable_Event_output_event_event_modemanager_msg_in_actuatortm1 actuatortm1;
    Observable_Event_output_event_event_modemanager_msg_in_actuatortm2 actuatortm2;
    Observable_Event_output_event_event_modemanager_msg_in_reading reading;
    Observable_Event_output_event_event_modemanager_msg_in_systemtc systemtc;
}

typedef Observable_Event_unhandled_input_event_actuator1 {
    Observable_Event_unhandled_input_event_actuator1_data data;
    int selection;
}

typedef Observable_Event_unhandled_input_event_actuator2 {
    Observable_Event_unhandled_input_event_actuator2_data data;
    int selection;
}

typedef Observable_Event_unhandled_input_event_egse_msg_out_data {
    Observable_Event_unhandled_input_event_egse_msg_out_systemtc systemtc;
}

typedef Observable_Event_unhandled_input_event_modemanager_msg_in_data {
    Observable_Event_unhandled_input_event_modemanager_msg_in_input_none input_none;
    Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1 actuatortm1;
    Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2 actuatortm2;
    Observable_Event_unhandled_input_event_modemanager_msg_in_reading reading;
    Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc systemtc;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator1 {
    System_State_actuator1_queue_elem_input_event_event_actuator1_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_input_event_event_actuator2 {
    System_State_actuator1_queue_elem_input_event_event_actuator2_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_input_event_event_egse_msg_out_data {
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc systemtc;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_data {
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_input_none input_none;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1 actuatortm1;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2 actuatortm2;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_reading reading;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc systemtc;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator1 {
    System_State_actuator1_queue_elem_output_event_event_actuator1_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_output_event_event_actuator2 {
    System_State_actuator1_queue_elem_output_event_event_actuator2_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_output_event_event_egse_msg_out_data {
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc systemtc;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_data {
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_input_none input_none;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1 actuatortm1;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2 actuatortm2;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_reading reading;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc systemtc;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator1 {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator1_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_actuator2 {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator2_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_data {
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc systemtc;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_data {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_input_none input_none;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1 actuatortm1;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2 actuatortm2;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_reading reading;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc systemtc;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator1 {
    System_State_actuator2_queue_elem_input_event_event_actuator1_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_input_event_event_actuator2 {
    System_State_actuator2_queue_elem_input_event_event_actuator2_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_input_event_event_egse_msg_out_data {
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc systemtc;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_data {
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_input_none input_none;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1 actuatortm1;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2 actuatortm2;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_reading reading;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc systemtc;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator1 {
    System_State_actuator2_queue_elem_output_event_event_actuator1_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_output_event_event_actuator2 {
    System_State_actuator2_queue_elem_output_event_event_actuator2_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_output_event_event_egse_msg_out_data {
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc systemtc;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_data {
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_input_none input_none;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1 actuatortm1;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2 actuatortm2;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_reading reading;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc systemtc;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator1 {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator1_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_actuator2 {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator2_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_data {
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc systemtc;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_data {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_input_none input_none;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1 actuatortm1;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2 actuatortm2;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_reading reading;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc systemtc;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator1 {
    System_State_modemanager_queue_elem_input_event_event_actuator1_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_input_event_event_actuator2 {
    System_State_modemanager_queue_elem_input_event_event_actuator2_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_input_event_event_egse_msg_out_data {
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc systemtc;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_data {
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_input_none input_none;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1 actuatortm1;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2 actuatortm2;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_reading reading;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc systemtc;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator1 {
    System_State_modemanager_queue_elem_output_event_event_actuator1_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_output_event_event_actuator2 {
    System_State_modemanager_queue_elem_output_event_event_actuator2_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_output_event_event_egse_msg_out_data {
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc systemtc;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_data {
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_input_none input_none;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1 actuatortm1;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2 actuatortm2;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_reading reading;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc systemtc;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator1 {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator1_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_actuator2 {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator2_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_data {
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc systemtc;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_data {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_input_none input_none;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1 actuatortm1;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2 actuatortm2;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_reading reading;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc systemtc;
}

typedef Egse_Event_msg_out {
    Egse_Event_msg_out_data data;
    int selection;
}

typedef Events_Ty_elem_input_event_event_egse_msg_out {
    Events_Ty_elem_input_event_event_egse_msg_out_data data;
    int selection;
}

typedef Events_Ty_elem_input_event_event_modemanager_msg_in {
    Events_Ty_elem_input_event_event_modemanager_msg_in_data data;
    int selection;
}

typedef Events_Ty_elem_output_event_event_egse_msg_out {
    Events_Ty_elem_output_event_event_egse_msg_out_data data;
    int selection;
}

typedef Events_Ty_elem_output_event_event_modemanager_msg_in {
    Events_Ty_elem_output_event_event_modemanager_msg_in_data data;
    int selection;
}

typedef Events_Ty_elem_unhandled_input_event_egse_msg_out {
    Events_Ty_elem_unhandled_input_event_egse_msg_out_data data;
    int selection;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_msg_in {
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_data data;
    int selection;
}

typedef Function_Event_egse_msg_out {
    Function_Event_egse_msg_out_data data;
    int selection;
}

typedef Function_Event_modemanager_msg_in {
    Function_Event_modemanager_msg_in_data data;
    int selection;
}

typedef Interface_Event_event_egse_msg_out {
    Interface_Event_event_egse_msg_out_data data;
    int selection;
}

typedef Interface_Event_event_modemanager_msg_in {
    Interface_Event_event_modemanager_msg_in_data data;
    int selection;
}

typedef Modemanager_Event_msg_in {
    Modemanager_Event_msg_in_data data;
    int selection;
}

typedef Named_Function_Event_event_egse_msg_out {
    Named_Function_Event_event_egse_msg_out_data data;
    int selection;
}

typedef Named_Function_Event_event_modemanager_msg_in {
    Named_Function_Event_event_modemanager_msg_in_data data;
    int selection;
}

typedef Observable_Event_input_event_event_egse_msg_out {
    Observable_Event_input_event_event_egse_msg_out_data data;
    int selection;
}

typedef Observable_Event_input_event_event_modemanager_msg_in {
    Observable_Event_input_event_event_modemanager_msg_in_data data;
    int selection;
}

typedef Observable_Event_output_event_event_egse_msg_out {
    Observable_Event_output_event_event_egse_msg_out_data data;
    int selection;
}

typedef Observable_Event_output_event_event_modemanager_msg_in {
    Observable_Event_output_event_event_modemanager_msg_in_data data;
    int selection;
}

typedef Observable_Event_unhandled_input_event_egse_msg_out {
    Observable_Event_unhandled_input_event_egse_msg_out_data data;
    int selection;
}

typedef Observable_Event_unhandled_input_event_modemanager_msg_in {
    Observable_Event_unhandled_input_event_modemanager_msg_in_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_input_event_event_egse_msg_out {
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in {
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_output_event_event_egse_msg_out {
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in {
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out {
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_input_event_event_egse_msg_out {
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in {
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_output_event_event_egse_msg_out {
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in {
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out {
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_input_event_event_egse_msg_out {
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in {
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_output_event_event_egse_msg_out {
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in {
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out {
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_data data;
    int selection;
}

typedef Egse_Event_data {
    Egse_Event_msg_in msg_in;
    Egse_Event_msg_out msg_out;
}

typedef Events_Ty_elem_input_event_event_egse_data {
    Events_Ty_elem_input_event_event_egse_msg_in msg_in;
    Events_Ty_elem_input_event_event_egse_msg_out msg_out;
}

typedef Events_Ty_elem_input_event_event_modemanager_data {
    Events_Ty_elem_input_event_event_modemanager_msg_in msg_in;
    Events_Ty_elem_input_event_event_modemanager_msg_out msg_out;
}

typedef Events_Ty_elem_output_event_event_egse_data {
    Events_Ty_elem_output_event_event_egse_msg_in msg_in;
    Events_Ty_elem_output_event_event_egse_msg_out msg_out;
}

typedef Events_Ty_elem_output_event_event_modemanager_data {
    Events_Ty_elem_output_event_event_modemanager_msg_in msg_in;
    Events_Ty_elem_output_event_event_modemanager_msg_out msg_out;
}

typedef Events_Ty_elem_unhandled_input_event_egse_data {
    Events_Ty_elem_unhandled_input_event_egse_msg_in msg_in;
    Events_Ty_elem_unhandled_input_event_egse_msg_out msg_out;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager_data {
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in msg_in;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out msg_out;
}

typedef Function_Event_egse_data {
    Function_Event_egse_msg_in msg_in;
    Function_Event_egse_msg_out msg_out;
}

typedef Function_Event_modemanager_data {
    Function_Event_modemanager_msg_in msg_in;
    Function_Event_modemanager_msg_out msg_out;
}

typedef Interface_Event_event_egse_data {
    Interface_Event_event_egse_msg_in msg_in;
    Interface_Event_event_egse_msg_out msg_out;
}

typedef Interface_Event_event_modemanager_data {
    Interface_Event_event_modemanager_msg_in msg_in;
    Interface_Event_event_modemanager_msg_out msg_out;
}

typedef Modemanager_Event_data {
    Modemanager_Event_msg_in msg_in;
    Modemanager_Event_msg_out msg_out;
}

typedef Named_Function_Event_event_egse_data {
    Named_Function_Event_event_egse_msg_in msg_in;
    Named_Function_Event_event_egse_msg_out msg_out;
}

typedef Named_Function_Event_event_modemanager_data {
    Named_Function_Event_event_modemanager_msg_in msg_in;
    Named_Function_Event_event_modemanager_msg_out msg_out;
}

typedef Observable_Event_input_event_event_egse_data {
    Observable_Event_input_event_event_egse_msg_in msg_in;
    Observable_Event_input_event_event_egse_msg_out msg_out;
}

typedef Observable_Event_input_event_event_modemanager_data {
    Observable_Event_input_event_event_modemanager_msg_in msg_in;
    Observable_Event_input_event_event_modemanager_msg_out msg_out;
}

typedef Observable_Event_output_event_event_egse_data {
    Observable_Event_output_event_event_egse_msg_in msg_in;
    Observable_Event_output_event_event_egse_msg_out msg_out;
}

typedef Observable_Event_output_event_event_modemanager_data {
    Observable_Event_output_event_event_modemanager_msg_in msg_in;
    Observable_Event_output_event_event_modemanager_msg_out msg_out;
}

typedef Observable_Event_unhandled_input_event_egse_data {
    Observable_Event_unhandled_input_event_egse_msg_in msg_in;
    Observable_Event_unhandled_input_event_egse_msg_out msg_out;
}

typedef Observable_Event_unhandled_input_event_modemanager_data {
    Observable_Event_unhandled_input_event_modemanager_msg_in msg_in;
    Observable_Event_unhandled_input_event_modemanager_msg_out msg_out;
}

typedef System_State_actuator1_queue_elem_input_event_event_egse_data {
    System_State_actuator1_queue_elem_input_event_event_egse_msg_in msg_in;
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out msg_out;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager_data {
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in msg_in;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out msg_out;
}

typedef System_State_actuator1_queue_elem_output_event_event_egse_data {
    System_State_actuator1_queue_elem_output_event_event_egse_msg_in msg_in;
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out msg_out;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager_data {
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in msg_in;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out msg_out;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_egse_data {
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in msg_in;
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out msg_out;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager_data {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in msg_in;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out msg_out;
}

typedef System_State_actuator2_queue_elem_input_event_event_egse_data {
    System_State_actuator2_queue_elem_input_event_event_egse_msg_in msg_in;
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out msg_out;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager_data {
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in msg_in;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out msg_out;
}

typedef System_State_actuator2_queue_elem_output_event_event_egse_data {
    System_State_actuator2_queue_elem_output_event_event_egse_msg_in msg_in;
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out msg_out;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager_data {
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in msg_in;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out msg_out;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_egse_data {
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in msg_in;
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out msg_out;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager_data {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in msg_in;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out msg_out;
}

typedef System_State_modemanager_queue_elem_input_event_event_egse_data {
    System_State_modemanager_queue_elem_input_event_event_egse_msg_in msg_in;
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out msg_out;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager_data {
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in msg_in;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out msg_out;
}

typedef System_State_modemanager_queue_elem_output_event_event_egse_data {
    System_State_modemanager_queue_elem_output_event_event_egse_msg_in msg_in;
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out msg_out;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager_data {
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in msg_in;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out msg_out;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_egse_data {
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in msg_in;
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out msg_out;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager_data {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in msg_in;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out msg_out;
}

typedef Egse_Event {
    Egse_Event_data data;
    int selection;
}

typedef Events_Ty_elem_input_event_event_egse {
    Events_Ty_elem_input_event_event_egse_data data;
    int selection;
}

typedef Events_Ty_elem_input_event_event_modemanager {
    Events_Ty_elem_input_event_event_modemanager_data data;
    int selection;
}

typedef Events_Ty_elem_output_event_event_egse {
    Events_Ty_elem_output_event_event_egse_data data;
    int selection;
}

typedef Events_Ty_elem_output_event_event_modemanager {
    Events_Ty_elem_output_event_event_modemanager_data data;
    int selection;
}

typedef Events_Ty_elem_unhandled_input_event_egse {
    Events_Ty_elem_unhandled_input_event_egse_data data;
    int selection;
}

typedef Events_Ty_elem_unhandled_input_event_modemanager {
    Events_Ty_elem_unhandled_input_event_modemanager_data data;
    int selection;
}

typedef Function_Event_egse {
    Function_Event_egse_data data;
    int selection;
}

typedef Function_Event_modemanager {
    Function_Event_modemanager_data data;
    int selection;
}

typedef Interface_Event_event_egse {
    Interface_Event_event_egse_data data;
    int selection;
}

typedef Interface_Event_event_modemanager {
    Interface_Event_event_modemanager_data data;
    int selection;
}

typedef Modemanager_Event {
    Modemanager_Event_data data;
    int selection;
}

typedef Named_Function_Event_event_egse {
    Named_Function_Event_event_egse_data data;
    int selection;
}

typedef Named_Function_Event_event_modemanager {
    Named_Function_Event_event_modemanager_data data;
    int selection;
}

typedef Observable_Event_input_event_event_egse {
    Observable_Event_input_event_event_egse_data data;
    int selection;
}

typedef Observable_Event_input_event_event_modemanager {
    Observable_Event_input_event_event_modemanager_data data;
    int selection;
}

typedef Observable_Event_output_event_event_egse {
    Observable_Event_output_event_event_egse_data data;
    int selection;
}

typedef Observable_Event_output_event_event_modemanager {
    Observable_Event_output_event_event_modemanager_data data;
    int selection;
}

typedef Observable_Event_unhandled_input_event_egse {
    Observable_Event_unhandled_input_event_egse_data data;
    int selection;
}

typedef Observable_Event_unhandled_input_event_modemanager {
    Observable_Event_unhandled_input_event_modemanager_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_input_event_event_egse {
    System_State_actuator1_queue_elem_input_event_event_egse_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_input_event_event_modemanager {
    System_State_actuator1_queue_elem_input_event_event_modemanager_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_output_event_event_egse {
    System_State_actuator1_queue_elem_output_event_event_egse_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_output_event_event_modemanager {
    System_State_actuator1_queue_elem_output_event_event_modemanager_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_egse {
    System_State_actuator1_queue_elem_unhandled_input_event_egse_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_modemanager {
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_input_event_event_egse {
    System_State_actuator2_queue_elem_input_event_event_egse_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_input_event_event_modemanager {
    System_State_actuator2_queue_elem_input_event_event_modemanager_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_output_event_event_egse {
    System_State_actuator2_queue_elem_output_event_event_egse_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_output_event_event_modemanager {
    System_State_actuator2_queue_elem_output_event_event_modemanager_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_egse {
    System_State_actuator2_queue_elem_unhandled_input_event_egse_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_modemanager {
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_input_event_event_egse {
    System_State_modemanager_queue_elem_input_event_event_egse_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_input_event_event_modemanager {
    System_State_modemanager_queue_elem_input_event_event_modemanager_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_output_event_event_egse {
    System_State_modemanager_queue_elem_output_event_event_egse_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_output_event_event_modemanager {
    System_State_modemanager_queue_elem_output_event_event_modemanager_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_egse {
    System_State_modemanager_queue_elem_unhandled_input_event_egse_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_modemanager {
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_data data;
    int selection;
}

typedef Events_Ty_elem_input_event_event_data {
    Events_Ty_elem_input_event_event_actuator1 actuator1;
    Events_Ty_elem_input_event_event_actuator2 actuator2;
    Events_Ty_elem_input_event_event_egse egse;
    Events_Ty_elem_input_event_event_modemanager modemanager;
    Events_Ty_elem_input_event_event_sensor sensor;
}

typedef Events_Ty_elem_output_event_event_data {
    Events_Ty_elem_output_event_event_actuator1 actuator1;
    Events_Ty_elem_output_event_event_actuator2 actuator2;
    Events_Ty_elem_output_event_event_egse egse;
    Events_Ty_elem_output_event_event_modemanager modemanager;
    Events_Ty_elem_output_event_event_sensor sensor;
}

typedef Events_Ty_elem_unhandled_input_event_data {
    Events_Ty_elem_unhandled_input_event_actuator1 actuator1;
    Events_Ty_elem_unhandled_input_event_actuator2 actuator2;
    Events_Ty_elem_unhandled_input_event_egse egse;
    Events_Ty_elem_unhandled_input_event_modemanager modemanager;
    Events_Ty_elem_unhandled_input_event_sensor sensor;
}

typedef Function_Event_data {
    Function_Event_actuator1 actuator1;
    Function_Event_actuator2 actuator2;
    Function_Event_egse egse;
    Function_Event_modemanager modemanager;
    Function_Event_sensor sensor;
}

typedef Interface_Event_event_data {
    Interface_Event_event_actuator1 actuator1;
    Interface_Event_event_actuator2 actuator2;
    Interface_Event_event_egse egse;
    Interface_Event_event_modemanager modemanager;
    Interface_Event_event_sensor sensor;
}

typedef Named_Function_Event_event_data {
    Named_Function_Event_event_actuator1 actuator1;
    Named_Function_Event_event_actuator2 actuator2;
    Named_Function_Event_event_egse egse;
    Named_Function_Event_event_modemanager modemanager;
    Named_Function_Event_event_sensor sensor;
}

typedef Observable_Event_input_event_event_data {
    Observable_Event_input_event_event_actuator1 actuator1;
    Observable_Event_input_event_event_actuator2 actuator2;
    Observable_Event_input_event_event_egse egse;
    Observable_Event_input_event_event_modemanager modemanager;
    Observable_Event_input_event_event_sensor sensor;
}

typedef Observable_Event_output_event_event_data {
    Observable_Event_output_event_event_actuator1 actuator1;
    Observable_Event_output_event_event_actuator2 actuator2;
    Observable_Event_output_event_event_egse egse;
    Observable_Event_output_event_event_modemanager modemanager;
    Observable_Event_output_event_event_sensor sensor;
}

typedef Observable_Event_unhandled_input_event_data {
    Observable_Event_unhandled_input_event_actuator1 actuator1;
    Observable_Event_unhandled_input_event_actuator2 actuator2;
    Observable_Event_unhandled_input_event_egse egse;
    Observable_Event_unhandled_input_event_modemanager modemanager;
    Observable_Event_unhandled_input_event_sensor sensor;
}

typedef System_State_actuator1_queue_elem_input_event_event_data {
    System_State_actuator1_queue_elem_input_event_event_actuator1 actuator1;
    System_State_actuator1_queue_elem_input_event_event_actuator2 actuator2;
    System_State_actuator1_queue_elem_input_event_event_egse egse;
    System_State_actuator1_queue_elem_input_event_event_modemanager modemanager;
    System_State_actuator1_queue_elem_input_event_event_sensor sensor;
}

typedef System_State_actuator1_queue_elem_output_event_event_data {
    System_State_actuator1_queue_elem_output_event_event_actuator1 actuator1;
    System_State_actuator1_queue_elem_output_event_event_actuator2 actuator2;
    System_State_actuator1_queue_elem_output_event_event_egse egse;
    System_State_actuator1_queue_elem_output_event_event_modemanager modemanager;
    System_State_actuator1_queue_elem_output_event_event_sensor sensor;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event_data {
    System_State_actuator1_queue_elem_unhandled_input_event_actuator1 actuator1;
    System_State_actuator1_queue_elem_unhandled_input_event_actuator2 actuator2;
    System_State_actuator1_queue_elem_unhandled_input_event_egse egse;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager modemanager;
    System_State_actuator1_queue_elem_unhandled_input_event_sensor sensor;
}

typedef System_State_actuator2_queue_elem_input_event_event_data {
    System_State_actuator2_queue_elem_input_event_event_actuator1 actuator1;
    System_State_actuator2_queue_elem_input_event_event_actuator2 actuator2;
    System_State_actuator2_queue_elem_input_event_event_egse egse;
    System_State_actuator2_queue_elem_input_event_event_modemanager modemanager;
    System_State_actuator2_queue_elem_input_event_event_sensor sensor;
}

typedef System_State_actuator2_queue_elem_output_event_event_data {
    System_State_actuator2_queue_elem_output_event_event_actuator1 actuator1;
    System_State_actuator2_queue_elem_output_event_event_actuator2 actuator2;
    System_State_actuator2_queue_elem_output_event_event_egse egse;
    System_State_actuator2_queue_elem_output_event_event_modemanager modemanager;
    System_State_actuator2_queue_elem_output_event_event_sensor sensor;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event_data {
    System_State_actuator2_queue_elem_unhandled_input_event_actuator1 actuator1;
    System_State_actuator2_queue_elem_unhandled_input_event_actuator2 actuator2;
    System_State_actuator2_queue_elem_unhandled_input_event_egse egse;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager modemanager;
    System_State_actuator2_queue_elem_unhandled_input_event_sensor sensor;
}

typedef System_State_modemanager_queue_elem_input_event_event_data {
    System_State_modemanager_queue_elem_input_event_event_actuator1 actuator1;
    System_State_modemanager_queue_elem_input_event_event_actuator2 actuator2;
    System_State_modemanager_queue_elem_input_event_event_egse egse;
    System_State_modemanager_queue_elem_input_event_event_modemanager modemanager;
    System_State_modemanager_queue_elem_input_event_event_sensor sensor;
}

typedef System_State_modemanager_queue_elem_output_event_event_data {
    System_State_modemanager_queue_elem_output_event_event_actuator1 actuator1;
    System_State_modemanager_queue_elem_output_event_event_actuator2 actuator2;
    System_State_modemanager_queue_elem_output_event_event_egse egse;
    System_State_modemanager_queue_elem_output_event_event_modemanager modemanager;
    System_State_modemanager_queue_elem_output_event_event_sensor sensor;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event_data {
    System_State_modemanager_queue_elem_unhandled_input_event_actuator1 actuator1;
    System_State_modemanager_queue_elem_unhandled_input_event_actuator2 actuator2;
    System_State_modemanager_queue_elem_unhandled_input_event_egse egse;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager modemanager;
    System_State_modemanager_queue_elem_unhandled_input_event_sensor sensor;
}

typedef Events_Ty_elem_input_event_event {
    Events_Ty_elem_input_event_event_data data;
    int selection;
}

typedef Events_Ty_elem_output_event_event {
    Events_Ty_elem_output_event_event_data data;
    int selection;
}

typedef Events_Ty_elem_unhandled_input_event {
    Events_Ty_elem_unhandled_input_event_data data;
    int selection;
}

typedef Function_Event {
    Function_Event_data data;
    int selection;
}

typedef Interface_Event_event {
    Interface_Event_event_data data;
    int selection;
}

typedef Named_Function_Event_event {
    Named_Function_Event_event_data data;
    int selection;
}

typedef Observable_Event_input_event_event {
    Observable_Event_input_event_event_data data;
    int selection;
}

typedef Observable_Event_output_event_event {
    Observable_Event_output_event_event_data data;
    int selection;
}

typedef Observable_Event_unhandled_input_event {
    Observable_Event_unhandled_input_event_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_input_event_event {
    System_State_actuator1_queue_elem_input_event_event_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_output_event_event {
    System_State_actuator1_queue_elem_output_event_event_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem_unhandled_input_event {
    System_State_actuator1_queue_elem_unhandled_input_event_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_input_event_event {
    System_State_actuator2_queue_elem_input_event_event_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_output_event_event {
    System_State_actuator2_queue_elem_output_event_event_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem_unhandled_input_event {
    System_State_actuator2_queue_elem_unhandled_input_event_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_input_event_event {
    System_State_modemanager_queue_elem_input_event_event_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_output_event_event {
    System_State_modemanager_queue_elem_output_event_event_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem_unhandled_input_event {
    System_State_modemanager_queue_elem_unhandled_input_event_data data;
    int selection;
}

typedef Events_Ty_elem_input_event {
    Events_Ty_elem_input_event_source source;
    Events_Ty_elem_input_event_dest dest;
    Events_Ty_elem_input_event_event event;
}

typedef Events_Ty_elem_output_event {
    Events_Ty_elem_output_event_source source;
    Events_Ty_elem_output_event_dest dest;
    Events_Ty_elem_output_event_event event;
}

typedef Events_Ty_elem_unhandled_input {
    Events_Ty_elem_unhandled_input_source source;
    Events_Ty_elem_unhandled_input_dest dest;
    Events_Ty_elem_unhandled_input_event event;
}

typedef Interface_Event {
    Interface_Event_source source;
    Interface_Event_dest dest;
    Interface_Event_event event;
}

typedef Named_Function_Event {
    Named_Function_Event_id id;
    Named_Function_Event_event event;
}

typedef Observable_Event_input_event {
    Observable_Event_input_event_source source;
    Observable_Event_input_event_dest dest;
    Observable_Event_input_event_event event;
}

typedef Observable_Event_output_event {
    Observable_Event_output_event_source source;
    Observable_Event_output_event_dest dest;
    Observable_Event_output_event_event event;
}

typedef Observable_Event_unhandled_input {
    Observable_Event_unhandled_input_source source;
    Observable_Event_unhandled_input_dest dest;
    Observable_Event_unhandled_input_event event;
}

typedef System_State_actuator1_queue_elem_input_event {
    System_State_actuator1_queue_elem_input_event_source source;
    System_State_actuator1_queue_elem_input_event_dest dest;
    System_State_actuator1_queue_elem_input_event_event event;
}

typedef System_State_actuator1_queue_elem_output_event {
    System_State_actuator1_queue_elem_output_event_source source;
    System_State_actuator1_queue_elem_output_event_dest dest;
    System_State_actuator1_queue_elem_output_event_event event;
}

typedef System_State_actuator1_queue_elem_unhandled_input {
    System_State_actuator1_queue_elem_unhandled_input_source source;
    System_State_actuator1_queue_elem_unhandled_input_dest dest;
    System_State_actuator1_queue_elem_unhandled_input_event event;
}

typedef System_State_actuator2_queue_elem_input_event {
    System_State_actuator2_queue_elem_input_event_source source;
    System_State_actuator2_queue_elem_input_event_dest dest;
    System_State_actuator2_queue_elem_input_event_event event;
}

typedef System_State_actuator2_queue_elem_output_event {
    System_State_actuator2_queue_elem_output_event_source source;
    System_State_actuator2_queue_elem_output_event_dest dest;
    System_State_actuator2_queue_elem_output_event_event event;
}

typedef System_State_actuator2_queue_elem_unhandled_input {
    System_State_actuator2_queue_elem_unhandled_input_source source;
    System_State_actuator2_queue_elem_unhandled_input_dest dest;
    System_State_actuator2_queue_elem_unhandled_input_event event;
}

typedef System_State_modemanager_queue_elem_input_event {
    System_State_modemanager_queue_elem_input_event_source source;
    System_State_modemanager_queue_elem_input_event_dest dest;
    System_State_modemanager_queue_elem_input_event_event event;
}

typedef System_State_modemanager_queue_elem_output_event {
    System_State_modemanager_queue_elem_output_event_source source;
    System_State_modemanager_queue_elem_output_event_dest dest;
    System_State_modemanager_queue_elem_output_event_event event;
}

typedef System_State_modemanager_queue_elem_unhandled_input {
    System_State_modemanager_queue_elem_unhandled_input_source source;
    System_State_modemanager_queue_elem_unhandled_input_dest dest;
    System_State_modemanager_queue_elem_unhandled_input_event event;
}

typedef Events_Ty_elem_data {
    Events_Ty_elem_no_event no_event;
    Events_Ty_elem_system_startup system_startup;
    Events_Ty_elem_input_event input_event;
    Events_Ty_elem_output_event output_event;
    Events_Ty_elem_unhandled_input unhandled_input;
}

typedef Observable_Event_data {
    Observable_Event_no_event no_event;
    Observable_Event_system_startup system_startup;
    Observable_Event_input_event input_event;
    Observable_Event_output_event output_event;
    Observable_Event_unhandled_input unhandled_input;
}

typedef System_State_actuator1_queue_elem_data {
    System_State_actuator1_queue_elem_no_event no_event;
    System_State_actuator1_queue_elem_system_startup system_startup;
    System_State_actuator1_queue_elem_input_event input_event;
    System_State_actuator1_queue_elem_output_event output_event;
    System_State_actuator1_queue_elem_unhandled_input unhandled_input;
}

typedef System_State_actuator2_queue_elem_data {
    System_State_actuator2_queue_elem_no_event no_event;
    System_State_actuator2_queue_elem_system_startup system_startup;
    System_State_actuator2_queue_elem_input_event input_event;
    System_State_actuator2_queue_elem_output_event output_event;
    System_State_actuator2_queue_elem_unhandled_input unhandled_input;
}

typedef System_State_modemanager_queue_elem_data {
    System_State_modemanager_queue_elem_no_event no_event;
    System_State_modemanager_queue_elem_system_startup system_startup;
    System_State_modemanager_queue_elem_input_event input_event;
    System_State_modemanager_queue_elem_output_event output_event;
    System_State_modemanager_queue_elem_unhandled_input unhandled_input;
}

typedef Events_Ty_elem {
    Events_Ty_elem_data data;
    int selection;
}

typedef Observable_Event {
    Observable_Event_data data;
    int selection;
}

typedef System_State_actuator1_queue_elem {
    System_State_actuator1_queue_elem_data data;
    int selection;
}

typedef System_State_actuator2_queue_elem {
    System_State_actuator2_queue_elem_data data;
    int selection;
}

typedef System_State_modemanager_queue_elem {
    System_State_modemanager_queue_elem_data data;
    int selection;
}

typedef Events_Ty {
    Events_Ty_elem data[10];
    int length;
}

typedef System_State_actuator1_queue {
    System_State_actuator1_queue_elem data[2];
    int length;
}

typedef System_State_actuator2_queue {
    System_State_actuator2_queue_elem data[2];
    int length;
}

typedef System_State_modemanager_queue {
    System_State_modemanager_queue_elem data[2];
    int length;
}

typedef System_State {
    System_State_timers timers;
    System_State_actuator1_queue actuator1_queue;
    System_State_actuator2_queue actuator2_queue;
    System_State_modemanager_queue modemanager_queue;
    System_State_actuator1 actuator1;
    System_State_actuator2 actuator2;
    System_State_modemanager modemanager;
}

Observable_Event nothing;
inline Untitled_msc_States_assign_value(dst, src)
{
    dst = src;
    Untitled_msc_States_range_check(dst);
}
inline Untitled_msc_States_range_check(Untitled_msc_States_vc)
{
    assert(((((Untitled_msc_States_vc == Untitled_msc_States_s0) || (Untitled_msc_States_vc == Untitled_msc_States_s2)) || (Untitled_msc_States_vc == Untitled_msc_States_s1)) || (Untitled_msc_States_vc == Untitled_msc_States_serr)));
}
inline Untitled_msc_Context_state_assign_value(dst, src)
{
    dst = src;
    Untitled_msc_Context_state_range_check(dst);
}
inline Untitled_msc_Context_state_range_check(Untitled_msc_Context_state_vc)
{
    assert(((((Untitled_msc_Context_state_vc == Untitled_msc_Context_state_s0) || (Untitled_msc_Context_state_vc == Untitled_msc_Context_state_s2)) || (Untitled_msc_Context_state_vc == Untitled_msc_Context_state_s1)) || (Untitled_msc_Context_state_vc == Untitled_msc_Context_state_serr)));
}
inline Untitled_msc_Context_init_done_assign_value(dst, src)
{
    dst = src;
    Untitled_msc_Context_init_done_range_check(dst);
}
inline Untitled_msc_Context_init_done_range_check(Untitled_msc_Context_init_done_vc)
{
    assert(true);
}
inline Untitled_msc_Context_sender_assign_value(dst, src)
{
    dst = src;
    Untitled_msc_Context_sender_range_check(dst);
}
inline Untitled_msc_Context_sender_range_check(Untitled_msc_Context_sender_vc)
{
    assert((((((((Untitled_msc_Context_sender_vc == Untitled_msc_Context_sender_actuator) || (Untitled_msc_Context_sender_vc == Untitled_msc_Context_sender_actuator1)) || (Untitled_msc_Context_sender_vc == Untitled_msc_Context_sender_actuator2)) || (Untitled_msc_Context_sender_vc == Untitled_msc_Context_sender_egse)) || (Untitled_msc_Context_sender_vc == Untitled_msc_Context_sender_modemanager)) || (Untitled_msc_Context_sender_vc == Untitled_msc_Context_sender_sensor)) || (Untitled_msc_Context_sender_vc == Untitled_msc_Context_sender_env)));
}
inline Untitled_msc_Context_assign_value(dst, src)
{
    Untitled_msc_Context_state_assign_value(dst.state, src.state);
    Untitled_msc_Context_init_done_assign_value(dst.init_done, src.init_done);
    Untitled_msc_Context_sender_assign_value(dst.sender, src.sender);
}
inline Untitled_Msc_Systemcommand_Selection_assign_value(dst, src)
{
    dst = src;
    Untitled_Msc_Systemcommand_Selection_range_check(dst);
}
inline Untitled_Msc_Systemcommand_Selection_range_check(Untitled_Msc_Systemcommand_Selection_vc)
{
    assert((((Untitled_Msc_Systemcommand_Selection_vc == Untitled_Msc_Systemcommand_Selection_goToIdle_present) || (Untitled_Msc_Systemcommand_Selection_vc == Untitled_Msc_Systemcommand_Selection_goToOperational_present)) || (Untitled_Msc_Systemcommand_Selection_vc == Untitled_Msc_Systemcommand_Selection_doReport_present)));
}
inline Untitled_Msc_Actuator1_Event_Msg_In_Selection_assign_value(dst, src)
{
    dst = src;
    Untitled_Msc_Actuator1_Event_Msg_In_Selection_range_check(dst);
}
inline Untitled_Msc_Actuator1_Event_Msg_In_Selection_range_check(Untitled_Msc_Actuator1_Event_Msg_In_Selection_vc)
{
    assert(((Untitled_Msc_Actuator1_Event_Msg_In_Selection_vc == Untitled_Msc_Actuator1_Event_Msg_In_Selection_input_none_present) || (Untitled_Msc_Actuator1_Event_Msg_In_Selection_vc == Untitled_Msc_Actuator1_Event_Msg_In_Selection_actuatortc_present)));
}
inline Untitled_Msc_Actuator1_Event_Msg_Out_Selection_assign_value(dst, src)
{
    dst = src;
    Untitled_Msc_Actuator1_Event_Msg_Out_Selection_range_check(dst);
}
inline Untitled_Msc_Actuator1_Event_Msg_Out_Selection_range_check(Untitled_Msc_Actuator1_Event_Msg_Out_Selection_vc)
{
    assert((Untitled_Msc_Actuator1_Event_Msg_Out_Selection_vc == Untitled_Msc_Actuator1_Event_Msg_Out_Selection_actuatortm_present));
}
inline Untitled_Msc_Actuator1_Event_Selection_assign_value(dst, src)
{
    dst = src;
    Untitled_Msc_Actuator1_Event_Selection_range_check(dst);
}
inline Untitled_Msc_Actuator1_Event_Selection_range_check(Untitled_Msc_Actuator1_Event_Selection_vc)
{
    assert(((Untitled_Msc_Actuator1_Event_Selection_vc == Untitled_Msc_Actuator1_Event_Selection_msg_in_present) || (Untitled_Msc_Actuator1_Event_Selection_vc == Untitled_Msc_Actuator1_Event_Selection_msg_out_present)));
}
inline Untitled_Msc_Actuator2_Event_Msg_In_Selection_assign_value(dst, src)
{
    dst = src;
    Untitled_Msc_Actuator2_Event_Msg_In_Selection_range_check(dst);
}
inline Untitled_Msc_Actuator2_Event_Msg_In_Selection_range_check(Untitled_Msc_Actuator2_Event_Msg_In_Selection_vc)
{
    assert(((Untitled_Msc_Actuator2_Event_Msg_In_Selection_vc == Untitled_Msc_Actuator2_Event_Msg_In_Selection_input_none_present) || (Untitled_Msc_Actuator2_Event_Msg_In_Selection_vc == Untitled_Msc_Actuator2_Event_Msg_In_Selection_actuatortc_present)));
}
inline Untitled_Msc_Actuator2_Event_Msg_Out_Selection_assign_value(dst, src)
{
    dst = src;
    Untitled_Msc_Actuator2_Event_Msg_Out_Selection_range_check(dst);
}
inline Untitled_Msc_Actuator2_Event_Msg_Out_Selection_range_check(Untitled_Msc_Actuator2_Event_Msg_Out_Selection_vc)
{
    assert((Untitled_Msc_Actuator2_Event_Msg_Out_Selection_vc == Untitled_Msc_Actuator2_Event_Msg_Out_Selection_actuatortm_present));
}
inline Untitled_Msc_Actuator2_Event_Selection_assign_value(dst, src)
{
    dst = src;
    Untitled_Msc_Actuator2_Event_Selection_range_check(dst);
}
inline Untitled_Msc_Actuator2_Event_Selection_range_check(Untitled_Msc_Actuator2_Event_Selection_vc)
{
    assert(((Untitled_Msc_Actuator2_Event_Selection_vc == Untitled_Msc_Actuator2_Event_Selection_msg_in_present) || (Untitled_Msc_Actuator2_Event_Selection_vc == Untitled_Msc_Actuator2_Event_Selection_msg_out_present)));
}
inline Untitled_Msc_Egse_Event_Msg_In_Selection_assign_value(dst, src)
{
    dst = src;
    Untitled_Msc_Egse_Event_Msg_In_Selection_range_check(dst);
}
inline Untitled_Msc_Egse_Event_Msg_In_Selection_range_check(Untitled_Msc_Egse_Event_Msg_In_Selection_vc)
{
    assert((Untitled_Msc_Egse_Event_Msg_In_Selection_vc == Untitled_Msc_Egse_Event_Msg_In_Selection_systemtm_present));
}
inline Untitled_Msc_Egse_Event_Msg_Out_Selection_assign_value(dst, src)
{
    dst = src;
    Untitled_Msc_Egse_Event_Msg_Out_Selection_range_check(dst);
}
inline Untitled_Msc_Egse_Event_Msg_Out_Selection_range_check(Untitled_Msc_Egse_Event_Msg_Out_Selection_vc)
{
    assert((Untitled_Msc_Egse_Event_Msg_Out_Selection_vc == Untitled_Msc_Egse_Event_Msg_Out_Selection_systemtc_present));
}
inline Untitled_Msc_Egse_Event_Selection_assign_value(dst, src)
{
    dst = src;
    Untitled_Msc_Egse_Event_Selection_range_check(dst);
}
inline Untitled_Msc_Egse_Event_Selection_range_check(Untitled_Msc_Egse_Event_Selection_vc)
{
    assert(((Untitled_Msc_Egse_Event_Selection_vc == Untitled_Msc_Egse_Event_Selection_msg_in_present) || (Untitled_Msc_Egse_Event_Selection_vc == Untitled_Msc_Egse_Event_Selection_msg_out_present)));
}
inline Untitled_Msc_Modemanager_Event_Msg_In_Selection_assign_value(dst, src)
{
    dst = src;
    Untitled_Msc_Modemanager_Event_Msg_In_Selection_range_check(dst);
}
inline Untitled_Msc_Modemanager_Event_Msg_In_Selection_range_check(Untitled_Msc_Modemanager_Event_Msg_In_Selection_vc)
{
    assert((((((Untitled_Msc_Modemanager_Event_Msg_In_Selection_vc == Untitled_Msc_Modemanager_Event_Msg_In_Selection_input_none_present) || (Untitled_Msc_Modemanager_Event_Msg_In_Selection_vc == Untitled_Msc_Modemanager_Event_Msg_In_Selection_actuatortm1_present)) || (Untitled_Msc_Modemanager_Event_Msg_In_Selection_vc == Untitled_Msc_Modemanager_Event_Msg_In_Selection_actuatortm2_present)) || (Untitled_Msc_Modemanager_Event_Msg_In_Selection_vc == Untitled_Msc_Modemanager_Event_Msg_In_Selection_reading_present)) || (Untitled_Msc_Modemanager_Event_Msg_In_Selection_vc == Untitled_Msc_Modemanager_Event_Msg_In_Selection_systemtc_present)));
}
inline Untitled_Msc_Modemanager_Event_Msg_Out_Selection_assign_value(dst, src)
{
    dst = src;
    Untitled_Msc_Modemanager_Event_Msg_Out_Selection_range_check(dst);
}
inline Untitled_Msc_Modemanager_Event_Msg_Out_Selection_range_check(Untitled_Msc_Modemanager_Event_Msg_Out_Selection_vc)
{
    assert((((Untitled_Msc_Modemanager_Event_Msg_Out_Selection_vc == Untitled_Msc_Modemanager_Event_Msg_Out_Selection_actuatortc1_present) || (Untitled_Msc_Modemanager_Event_Msg_Out_Selection_vc == Untitled_Msc_Modemanager_Event_Msg_Out_Selection_actuatortc2_present)) || (Untitled_Msc_Modemanager_Event_Msg_Out_Selection_vc == Untitled_Msc_Modemanager_Event_Msg_Out_Selection_systemtm_present)));
}
inline Untitled_Msc_Modemanager_Event_Selection_assign_value(dst, src)
{
    dst = src;
    Untitled_Msc_Modemanager_Event_Selection_range_check(dst);
}
inline Untitled_Msc_Modemanager_Event_Selection_range_check(Untitled_Msc_Modemanager_Event_Selection_vc)
{
    assert(((Untitled_Msc_Modemanager_Event_Selection_vc == Untitled_Msc_Modemanager_Event_Selection_msg_in_present) || (Untitled_Msc_Modemanager_Event_Selection_vc == Untitled_Msc_Modemanager_Event_Selection_msg_out_present)));
}
inline Untitled_Msc_Function_Event_Selection_assign_value(dst, src)
{
    dst = src;
    Untitled_Msc_Function_Event_Selection_range_check(dst);
}
inline Untitled_Msc_Function_Event_Selection_range_check(Untitled_Msc_Function_Event_Selection_vc)
{
    assert((((((Untitled_Msc_Function_Event_Selection_vc == Untitled_Msc_Function_Event_Selection_actuator1_present) || (Untitled_Msc_Function_Event_Selection_vc == Untitled_Msc_Function_Event_Selection_actuator2_present)) || (Untitled_Msc_Function_Event_Selection_vc == Untitled_Msc_Function_Event_Selection_egse_present)) || (Untitled_Msc_Function_Event_Selection_vc == Untitled_Msc_Function_Event_Selection_modemanager_present)) || (Untitled_Msc_Function_Event_Selection_vc == Untitled_Msc_Function_Event_Selection_sensor_present)));
}
inline Untitled_Msc_Observable_Event_Selection_assign_value(dst, src)
{
    dst = src;
    Untitled_Msc_Observable_Event_Selection_range_check(dst);
}
inline Untitled_Msc_Observable_Event_Selection_range_check(Untitled_Msc_Observable_Event_Selection_vc)
{
    assert((((((Untitled_Msc_Observable_Event_Selection_vc == Untitled_Msc_Observable_Event_Selection_no_event_present) || (Untitled_Msc_Observable_Event_Selection_vc == Untitled_Msc_Observable_Event_Selection_system_startup_present)) || (Untitled_Msc_Observable_Event_Selection_vc == Untitled_Msc_Observable_Event_Selection_input_event_present)) || (Untitled_Msc_Observable_Event_Selection_vc == Untitled_Msc_Observable_Event_Selection_output_event_present)) || (Untitled_Msc_Observable_Event_Selection_vc == Untitled_Msc_Observable_Event_Selection_unhandled_input_present)));
}
inline OptimizedDataItem_assign_value(dst, src)
{
    dst = src;
    OptimizedDataItem_range_check(dst);
}
inline OptimizedDataItem_range_check(OptimizedDataItem_vc)
{
    assert(((((OptimizedDataItem_vc >= 10) && (OptimizedDataItem_vc <= 10)) || ((OptimizedDataItem_vc >= 50) && (OptimizedDataItem_vc <= 50))) || ((OptimizedDataItem_vc >= 100) && (OptimizedDataItem_vc <= 100))));
}
inline OptimizedConfiguration_threshold1_assign_value(dst, src)
{
    dst = src;
    OptimizedConfiguration_threshold1_range_check(dst);
}
inline OptimizedConfiguration_threshold1_range_check(OptimizedConfiguration_threshold1_vc)
{
    assert(((((OptimizedConfiguration_threshold1_vc >= 10) && (OptimizedConfiguration_threshold1_vc <= 10)) || ((OptimizedConfiguration_threshold1_vc >= 50) && (OptimizedConfiguration_threshold1_vc <= 50))) || ((OptimizedConfiguration_threshold1_vc >= 100) && (OptimizedConfiguration_threshold1_vc <= 100))));
}
inline OptimizedConfiguration_threshold2_assign_value(dst, src)
{
    dst = src;
    OptimizedConfiguration_threshold2_range_check(dst);
}
inline OptimizedConfiguration_threshold2_range_check(OptimizedConfiguration_threshold2_vc)
{
    assert(((((OptimizedConfiguration_threshold2_vc >= 10) && (OptimizedConfiguration_threshold2_vc <= 10)) || ((OptimizedConfiguration_threshold2_vc >= 50) && (OptimizedConfiguration_threshold2_vc <= 50))) || ((OptimizedConfiguration_threshold2_vc >= 100) && (OptimizedConfiguration_threshold2_vc <= 100))));
}
inline OptimizedConfiguration_assign_value(dst, src)
{
    OptimizedConfiguration_threshold1_assign_value(dst.threshold1, src.threshold1);
    OptimizedConfiguration_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Egse_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Egse_systemtc_tc_goToIdle_range_check(dst);
}
inline Egse_systemtc_tc_goToIdle_range_check(Egse_systemtc_tc_goToIdle_vc)
{
    assert(((Egse_systemtc_tc_goToIdle_vc >= 0) && (Egse_systemtc_tc_goToIdle_vc <= 0)));
}
inline Egse_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Egse_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Egse_systemtc_tc_goToOperational_threshold1_range_check(Egse_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((((Egse_systemtc_tc_goToOperational_threshold1_vc >= 10) && (Egse_systemtc_tc_goToOperational_threshold1_vc <= 10)) || ((Egse_systemtc_tc_goToOperational_threshold1_vc >= 50) && (Egse_systemtc_tc_goToOperational_threshold1_vc <= 50))) || ((Egse_systemtc_tc_goToOperational_threshold1_vc >= 100) && (Egse_systemtc_tc_goToOperational_threshold1_vc <= 100))));
}
inline Egse_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Egse_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Egse_systemtc_tc_goToOperational_threshold2_range_check(Egse_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((((Egse_systemtc_tc_goToOperational_threshold2_vc >= 10) && (Egse_systemtc_tc_goToOperational_threshold2_vc <= 10)) || ((Egse_systemtc_tc_goToOperational_threshold2_vc >= 50) && (Egse_systemtc_tc_goToOperational_threshold2_vc <= 50))) || ((Egse_systemtc_tc_goToOperational_threshold2_vc >= 100) && (Egse_systemtc_tc_goToOperational_threshold2_vc <= 100))));
}
inline Egse_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Egse_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Egse_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Egse_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Egse_systemtc_tc_doReport_range_check(dst);
}
inline Egse_systemtc_tc_doReport_range_check(Egse_systemtc_tc_doReport_vc)
{
    assert(((Egse_systemtc_tc_doReport_vc >= 0) && (Egse_systemtc_tc_doReport_vc <= 0)));
}
inline Egse_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Egse_systemtc_tc_goToIdle_PRESENT);
        Egse_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Egse_systemtc_tc_goToOperational_PRESENT);
        Egse_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Egse_systemtc_tc_doReport_PRESENT);
        Egse_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Egse_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Sensor_reading_x_assign_value(dst, src)
{
    dst = src;
    Sensor_reading_x_range_check(dst);
}
inline Sensor_reading_x_range_check(Sensor_reading_x_vc)
{
    assert(((((Sensor_reading_x_vc >= 10) && (Sensor_reading_x_vc <= 10)) || ((Sensor_reading_x_vc >= 50) && (Sensor_reading_x_vc <= 50))) || ((Sensor_reading_x_vc >= 100) && (Sensor_reading_x_vc <= 100))));
}
inline Actuator_States_assign_value(dst, src)
{
    dst = src;
    Actuator_States_range_check(dst);
}
inline Actuator_States_range_check(Actuator_States_vc)
{
    assert((((Actuator_States_vc == Actuator_States_armed) || (Actuator_States_vc == Actuator_States_executing)) || (Actuator_States_vc == Actuator_States_standby)));
}
inline Actuator_Context_state_assign_value(dst, src)
{
    dst = src;
    Actuator_Context_state_range_check(dst);
}
inline Actuator_Context_state_range_check(Actuator_Context_state_vc)
{
    assert((((Actuator_Context_state_vc == Actuator_Context_state_armed) || (Actuator_Context_state_vc == Actuator_Context_state_executing)) || (Actuator_Context_state_vc == Actuator_Context_state_standby)));
}
inline Actuator_Context_init_done_assign_value(dst, src)
{
    dst = src;
    Actuator_Context_init_done_range_check(dst);
}
inline Actuator_Context_init_done_range_check(Actuator_Context_init_done_vc)
{
    assert(true);
}
inline Actuator_Context_sender_assign_value(dst, src)
{
    dst = src;
    Actuator_Context_sender_range_check(dst);
}
inline Actuator_Context_sender_range_check(Actuator_Context_sender_vc)
{
    assert((((((((Actuator_Context_sender_vc == Actuator_Context_sender_actuator) || (Actuator_Context_sender_vc == Actuator_Context_sender_actuator1)) || (Actuator_Context_sender_vc == Actuator_Context_sender_actuator2)) || (Actuator_Context_sender_vc == Actuator_Context_sender_egse)) || (Actuator_Context_sender_vc == Actuator_Context_sender_modemanager)) || (Actuator_Context_sender_vc == Actuator_Context_sender_sensor)) || (Actuator_Context_sender_vc == Actuator_Context_sender_env)));
}
inline Actuator_Context_cmd_assign_value(dst, src)
{
    dst = src;
    Actuator_Context_cmd_range_check(dst);
}
inline Actuator_Context_cmd_range_check(Actuator_Context_cmd_vc)
{
    assert((((Actuator_Context_cmd_vc == Actuator_Context_cmd_actuatorArm) || (Actuator_Context_cmd_vc == Actuator_Context_cmd_actuatorExecute)) || (Actuator_Context_cmd_vc == Actuator_Context_cmd_actuatorStandby)));
}
inline Actuator_Context_assign_value(dst, src)
{
    Actuator_Context_state_assign_value(dst.state, src.state);
    Actuator_Context_init_done_assign_value(dst.init_done, src.init_done);
    Actuator_Context_sender_assign_value(dst.sender, src.sender);
    Actuator_Context_cmd_assign_value(dst.cmd, src.cmd);
}
inline Actuator_Systemcommand_Selection_assign_value(dst, src)
{
    dst = src;
    Actuator_Systemcommand_Selection_range_check(dst);
}
inline Actuator_Systemcommand_Selection_range_check(Actuator_Systemcommand_Selection_vc)
{
    assert(((Actuator_Systemcommand_Selection_vc == Actuator_Systemcommand_Selection_goToIdle_present) || (Actuator_Systemcommand_Selection_vc == Actuator_Systemcommand_Selection_goToOperational_present)));
}
inline Modemanager_States_assign_value(dst, src)
{
    dst = src;
    Modemanager_States_range_check(dst);
}
inline Modemanager_States_range_check(Modemanager_States_vc)
{
    assert(((((Modemanager_States_vc == Modemanager_States_starting) || (Modemanager_States_vc == Modemanager_States_operational)) || (Modemanager_States_vc == Modemanager_States_stopping)) || (Modemanager_States_vc == Modemanager_States_idle)));
}
inline Modemanager_Context_state_assign_value(dst, src)
{
    dst = src;
    Modemanager_Context_state_range_check(dst);
}
inline Modemanager_Context_state_range_check(Modemanager_Context_state_vc)
{
    assert(((((Modemanager_Context_state_vc == Modemanager_Context_state_starting) || (Modemanager_Context_state_vc == Modemanager_Context_state_operational)) || (Modemanager_Context_state_vc == Modemanager_Context_state_stopping)) || (Modemanager_Context_state_vc == Modemanager_Context_state_idle)));
}
inline Modemanager_Context_init_done_assign_value(dst, src)
{
    dst = src;
    Modemanager_Context_init_done_range_check(dst);
}
inline Modemanager_Context_init_done_range_check(Modemanager_Context_init_done_vc)
{
    assert(true);
}
inline Modemanager_Context_sender_assign_value(dst, src)
{
    dst = src;
    Modemanager_Context_sender_range_check(dst);
}
inline Modemanager_Context_sender_range_check(Modemanager_Context_sender_vc)
{
    assert((((((((Modemanager_Context_sender_vc == Modemanager_Context_sender_actuator) || (Modemanager_Context_sender_vc == Modemanager_Context_sender_actuator1)) || (Modemanager_Context_sender_vc == Modemanager_Context_sender_actuator2)) || (Modemanager_Context_sender_vc == Modemanager_Context_sender_egse)) || (Modemanager_Context_sender_vc == Modemanager_Context_sender_modemanager)) || (Modemanager_Context_sender_vc == Modemanager_Context_sender_sensor)) || (Modemanager_Context_sender_vc == Modemanager_Context_sender_env)));
}
inline Modemanager_Context_status1_assign_value(dst, src)
{
    dst = src;
    Modemanager_Context_status1_range_check(dst);
}
inline Modemanager_Context_status1_range_check(Modemanager_Context_status1_vc)
{
    assert((((Modemanager_Context_status1_vc == Modemanager_Context_status1_actuatorArmed) || (Modemanager_Context_status1_vc == Modemanager_Context_status1_actuatorExecuting)) || (Modemanager_Context_status1_vc == Modemanager_Context_status1_actuatorStandingBy)));
}
inline Modemanager_Context_status2_assign_value(dst, src)
{
    dst = src;
    Modemanager_Context_status2_range_check(dst);
}
inline Modemanager_Context_status2_range_check(Modemanager_Context_status2_vc)
{
    assert((((Modemanager_Context_status2_vc == Modemanager_Context_status2_actuatorArmed) || (Modemanager_Context_status2_vc == Modemanager_Context_status2_actuatorExecuting)) || (Modemanager_Context_status2_vc == Modemanager_Context_status2_actuatorStandingBy)));
}
inline Modemanager_Context_r_assign_value(dst, src)
{
    dst = src;
    Modemanager_Context_r_range_check(dst);
}
inline Modemanager_Context_r_range_check(Modemanager_Context_r_vc)
{
    assert(((Modemanager_Context_r_vc >= 0) && (Modemanager_Context_r_vc <= 255)));
}
inline Modemanager_Context_threshold1_assign_value(dst, src)
{
    dst = src;
    Modemanager_Context_threshold1_range_check(dst);
}
inline Modemanager_Context_threshold1_range_check(Modemanager_Context_threshold1_vc)
{
    assert(((Modemanager_Context_threshold1_vc >= 0) && (Modemanager_Context_threshold1_vc <= 255)));
}
inline Modemanager_Context_threshold2_assign_value(dst, src)
{
    dst = src;
    Modemanager_Context_threshold2_range_check(dst);
}
inline Modemanager_Context_threshold2_range_check(Modemanager_Context_threshold2_vc)
{
    assert(((Modemanager_Context_threshold2_vc >= 0) && (Modemanager_Context_threshold2_vc <= 255)));
}
inline Modemanager_Context_stc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Modemanager_Context_stc_goToIdle_range_check(dst);
}
inline Modemanager_Context_stc_goToIdle_range_check(Modemanager_Context_stc_goToIdle_vc)
{
    assert(((Modemanager_Context_stc_goToIdle_vc >= 0) && (Modemanager_Context_stc_goToIdle_vc <= 0)));
}
inline Modemanager_Context_stc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Modemanager_Context_stc_goToOperational_threshold1_range_check(dst);
}
inline Modemanager_Context_stc_goToOperational_threshold1_range_check(Modemanager_Context_stc_goToOperational_threshold1_vc)
{
    assert(((Modemanager_Context_stc_goToOperational_threshold1_vc >= 0) && (Modemanager_Context_stc_goToOperational_threshold1_vc <= 255)));
}
inline Modemanager_Context_stc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Modemanager_Context_stc_goToOperational_threshold2_range_check(dst);
}
inline Modemanager_Context_stc_goToOperational_threshold2_range_check(Modemanager_Context_stc_goToOperational_threshold2_vc)
{
    assert(((Modemanager_Context_stc_goToOperational_threshold2_vc >= 0) && (Modemanager_Context_stc_goToOperational_threshold2_vc <= 255)));
}
inline Modemanager_Context_stc_goToOperational_assign_value(dst, src)
{
    Modemanager_Context_stc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Modemanager_Context_stc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Modemanager_Context_stc_doReport_assign_value(dst, src)
{
    dst = src;
    Modemanager_Context_stc_doReport_range_check(dst);
}
inline Modemanager_Context_stc_doReport_range_check(Modemanager_Context_stc_doReport_vc)
{
    assert(((Modemanager_Context_stc_doReport_vc >= 0) && (Modemanager_Context_stc_doReport_vc <= 0)));
}
inline Modemanager_Context_stc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Modemanager_Context_stc_goToIdle_PRESENT);
        Modemanager_Context_stc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Modemanager_Context_stc_goToOperational_PRESENT);
        Modemanager_Context_stc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Modemanager_Context_stc_doReport_PRESENT);
        Modemanager_Context_stc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Modemanager_context_stc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Modemanager_Context_stm_reading_assign_value(dst, src)
{
    dst = src;
    Modemanager_Context_stm_reading_range_check(dst);
}
inline Modemanager_Context_stm_reading_range_check(Modemanager_Context_stm_reading_vc)
{
    assert(((Modemanager_Context_stm_reading_vc >= 0) && (Modemanager_Context_stm_reading_vc <= 255)));
}
inline Modemanager_Context_stm_status1_assign_value(dst, src)
{
    dst = src;
    Modemanager_Context_stm_status1_range_check(dst);
}
inline Modemanager_Context_stm_status1_range_check(Modemanager_Context_stm_status1_vc)
{
    assert((((Modemanager_Context_stm_status1_vc == Modemanager_Context_stm_status1_actuatorArmed) || (Modemanager_Context_stm_status1_vc == Modemanager_Context_stm_status1_actuatorExecuting)) || (Modemanager_Context_stm_status1_vc == Modemanager_Context_stm_status1_actuatorStandingBy)));
}
inline Modemanager_Context_stm_status2_assign_value(dst, src)
{
    dst = src;
    Modemanager_Context_stm_status2_range_check(dst);
}
inline Modemanager_Context_stm_status2_range_check(Modemanager_Context_stm_status2_vc)
{
    assert((((Modemanager_Context_stm_status2_vc == Modemanager_Context_stm_status2_actuatorArmed) || (Modemanager_Context_stm_status2_vc == Modemanager_Context_stm_status2_actuatorExecuting)) || (Modemanager_Context_stm_status2_vc == Modemanager_Context_stm_status2_actuatorStandingBy)));
}
inline Modemanager_Context_stm_assign_value(dst, src)
{
    Modemanager_Context_stm_reading_assign_value(dst.reading, src.reading);
    Modemanager_Context_stm_status1_assign_value(dst.status1, src.status1);
    Modemanager_Context_stm_status2_assign_value(dst.status2, src.status2);
}
inline Modemanager_Context_assign_value(dst, src)
{
    Modemanager_Context_state_assign_value(dst.state, src.state);
    Modemanager_Context_init_done_assign_value(dst.init_done, src.init_done);
    Modemanager_Context_sender_assign_value(dst.sender, src.sender);
    Modemanager_Context_status1_assign_value(dst.status1, src.status1);
    Modemanager_Context_status2_assign_value(dst.status2, src.status2);
    Modemanager_Context_r_assign_value(dst.r, src.r);
    Modemanager_Context_threshold1_assign_value(dst.threshold1, src.threshold1);
    Modemanager_Context_threshold2_assign_value(dst.threshold2, src.threshold2);
    Modemanager_Context_stc_assign_value(dst.stc, src.stc);
    Modemanager_Context_stm_assign_value(dst.stm, src.stm);
}
inline Modemanager_Systemcommand_Selection_assign_value(dst, src)
{
    dst = src;
    Modemanager_Systemcommand_Selection_range_check(dst);
}
inline Modemanager_Systemcommand_Selection_range_check(Modemanager_Systemcommand_Selection_vc)
{
    assert((((Modemanager_Systemcommand_Selection_vc == Modemanager_Systemcommand_Selection_goToIdle_present) || (Modemanager_Systemcommand_Selection_vc == Modemanager_Systemcommand_Selection_goToOperational_present)) || (Modemanager_Systemcommand_Selection_vc == Modemanager_Systemcommand_Selection_doReport_present)));
}
inline Dummy_assign_value(dst, src)
{
    dst = src;
    Dummy_range_check(dst);
}
inline Dummy_range_check(Dummy_vc)
{
    assert(((Dummy_vc >= 0) && (Dummy_vc <= 0)));
}
inline DataItem_assign_value(dst, src)
{
    dst = src;
    DataItem_range_check(dst);
}
inline DataItem_range_check(DataItem_vc)
{
    assert(((DataItem_vc >= 0) && (DataItem_vc <= 255)));
}
inline ActuatorIndex_assign_value(dst, src)
{
    dst = src;
    ActuatorIndex_range_check(dst);
}
inline ActuatorIndex_range_check(ActuatorIndex_vc)
{
    assert(((ActuatorIndex_vc == ActuatorIndex_actuator1) || (ActuatorIndex_vc == ActuatorIndex_actuator2)));
}
inline ActuatorCommand_assign_value(dst, src)
{
    dst = src;
    ActuatorCommand_range_check(dst);
}
inline ActuatorCommand_range_check(ActuatorCommand_vc)
{
    assert((((ActuatorCommand_vc == ActuatorCommand_actuatorArm) || (ActuatorCommand_vc == ActuatorCommand_actuatorExecute)) || (ActuatorCommand_vc == ActuatorCommand_actuatorStandby)));
}
inline ActuatorStatus_assign_value(dst, src)
{
    dst = src;
    ActuatorStatus_range_check(dst);
}
inline ActuatorStatus_range_check(ActuatorStatus_vc)
{
    assert((((ActuatorStatus_vc == ActuatorStatus_actuatorArmed) || (ActuatorStatus_vc == ActuatorStatus_actuatorExecuting)) || (ActuatorStatus_vc == ActuatorStatus_actuatorStandingBy)));
}
inline ActuatorConfiguration_threshold1_assign_value(dst, src)
{
    dst = src;
    ActuatorConfiguration_threshold1_range_check(dst);
}
inline ActuatorConfiguration_threshold1_range_check(ActuatorConfiguration_threshold1_vc)
{
    assert(((ActuatorConfiguration_threshold1_vc >= 0) && (ActuatorConfiguration_threshold1_vc <= 255)));
}
inline ActuatorConfiguration_threshold2_assign_value(dst, src)
{
    dst = src;
    ActuatorConfiguration_threshold2_range_check(dst);
}
inline ActuatorConfiguration_threshold2_range_check(ActuatorConfiguration_threshold2_vc)
{
    assert(((ActuatorConfiguration_threshold2_vc >= 0) && (ActuatorConfiguration_threshold2_vc <= 255)));
}
inline ActuatorConfiguration_assign_value(dst, src)
{
    ActuatorConfiguration_threshold1_assign_value(dst.threshold1, src.threshold1);
    ActuatorConfiguration_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline SystemCommand_goToIdle_assign_value(dst, src)
{
    dst = src;
    SystemCommand_goToIdle_range_check(dst);
}
inline SystemCommand_goToIdle_range_check(SystemCommand_goToIdle_vc)
{
    assert(((SystemCommand_goToIdle_vc >= 0) && (SystemCommand_goToIdle_vc <= 0)));
}
inline SystemCommand_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    SystemCommand_goToOperational_threshold1_range_check(dst);
}
inline SystemCommand_goToOperational_threshold1_range_check(SystemCommand_goToOperational_threshold1_vc)
{
    assert(((SystemCommand_goToOperational_threshold1_vc >= 0) && (SystemCommand_goToOperational_threshold1_vc <= 255)));
}
inline SystemCommand_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    SystemCommand_goToOperational_threshold2_range_check(dst);
}
inline SystemCommand_goToOperational_threshold2_range_check(SystemCommand_goToOperational_threshold2_vc)
{
    assert(((SystemCommand_goToOperational_threshold2_vc >= 0) && (SystemCommand_goToOperational_threshold2_vc <= 255)));
}
inline SystemCommand_goToOperational_assign_value(dst, src)
{
    SystemCommand_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    SystemCommand_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline SystemCommand_doReport_assign_value(dst, src)
{
    dst = src;
    SystemCommand_doReport_range_check(dst);
}
inline SystemCommand_doReport_range_check(SystemCommand_doReport_vc)
{
    assert(((SystemCommand_doReport_vc >= 0) && (SystemCommand_doReport_vc <= 0)));
}
inline SystemCommand_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == SystemCommand_goToIdle_PRESENT);
        SystemCommand_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == SystemCommand_goToOperational_PRESENT);
        SystemCommand_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == SystemCommand_doReport_PRESENT);
        SystemCommand_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Systemcommand_selection_assign_value(dst, src)
{
    dst = src;
}
inline SystemTelemetry_reading_assign_value(dst, src)
{
    dst = src;
    SystemTelemetry_reading_range_check(dst);
}
inline SystemTelemetry_reading_range_check(SystemTelemetry_reading_vc)
{
    assert(((SystemTelemetry_reading_vc >= 0) && (SystemTelemetry_reading_vc <= 255)));
}
inline SystemTelemetry_status1_assign_value(dst, src)
{
    dst = src;
    SystemTelemetry_status1_range_check(dst);
}
inline SystemTelemetry_status1_range_check(SystemTelemetry_status1_vc)
{
    assert((((SystemTelemetry_status1_vc == SystemTelemetry_status1_actuatorArmed) || (SystemTelemetry_status1_vc == SystemTelemetry_status1_actuatorExecuting)) || (SystemTelemetry_status1_vc == SystemTelemetry_status1_actuatorStandingBy)));
}
inline SystemTelemetry_status2_assign_value(dst, src)
{
    dst = src;
    SystemTelemetry_status2_range_check(dst);
}
inline SystemTelemetry_status2_range_check(SystemTelemetry_status2_vc)
{
    assert((((SystemTelemetry_status2_vc == SystemTelemetry_status2_actuatorArmed) || (SystemTelemetry_status2_vc == SystemTelemetry_status2_actuatorExecuting)) || (SystemTelemetry_status2_vc == SystemTelemetry_status2_actuatorStandingBy)));
}
inline SystemTelemetry_assign_value(dst, src)
{
    SystemTelemetry_reading_assign_value(dst.reading, src.reading);
    SystemTelemetry_status1_assign_value(dst.status1, src.status1);
    SystemTelemetry_status2_assign_value(dst.status2, src.status2);
}
inline T_Int32_assign_value(dst, src)
{
    dst = src;
    T_Int32_range_check(dst);
}
inline T_Int32_range_check(T_Int32_vc)
{
    assert(((T_Int32_vc >= -2147483648) && (T_Int32_vc <= 2147483647)));
}
inline T_UInt32_assign_value(dst, src)
{
    dst = src;
    T_UInt32_range_check(dst);
}
inline T_UInt32_range_check(T_UInt32_vc)
{
    assert(((T_UInt32_vc >= 0) && (T_UInt32_vc <= -1)));
}
inline T_Int8_assign_value(dst, src)
{
    dst = src;
    T_Int8_range_check(dst);
}
inline T_Int8_range_check(T_Int8_vc)
{
    assert(((T_Int8_vc >= -128) && (T_Int8_vc <= 127)));
}
inline T_UInt8_assign_value(dst, src)
{
    dst = src;
    T_UInt8_range_check(dst);
}
inline T_UInt8_range_check(T_UInt8_vc)
{
    assert(((T_UInt8_vc >= 0) && (T_UInt8_vc <= 255)));
}
inline T_Boolean_assign_value(dst, src)
{
    dst = src;
    T_Boolean_range_check(dst);
}
inline T_Boolean_range_check(T_Boolean_vc)
{
    assert(true);
}
inline T_Null_Record_assign_value(dst, src)
{
    skip;
}
inline PID_Range_assign_value(dst, src)
{
    dst = src;
    PID_Range_range_check(dst);
}
inline PID_Range_range_check(PID_Range_vc)
{
    assert(((PID_Range_vc >= 0) && (PID_Range_vc <= 6)));
}
inline PID_assign_value(dst, src)
{
    dst = src;
    PID_range_check(dst);
}
inline PID_range_check(PID_vc)
{
    assert((((((((PID_vc == PID_actuator) || (PID_vc == PID_actuator1)) || (PID_vc == PID_actuator2)) || (PID_vc == PID_egse)) || (PID_vc == PID_modemanager)) || (PID_vc == PID_sensor)) || (PID_vc == PID_env)));
}
inline Actuator1_Event_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Actuator1_Event_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Actuator1_Event_msg_in_actuatortc_tc_range_check(dst);
}
inline Actuator1_Event_msg_in_actuatortc_tc_range_check(Actuator1_Event_msg_in_actuatortc_tc_vc)
{
    assert((((Actuator1_Event_msg_in_actuatortc_tc_vc == Actuator1_Event_msg_in_actuatortc_tc_actuatorArm) || (Actuator1_Event_msg_in_actuatortc_tc_vc == Actuator1_Event_msg_in_actuatortc_tc_actuatorExecute)) || (Actuator1_Event_msg_in_actuatortc_tc_vc == Actuator1_Event_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Actuator1_Event_msg_in_actuatortc_assign_value(dst, src)
{
    Actuator1_Event_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Actuator1_Event_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Actuator1_Event_msg_in_input_none_PRESENT);
        Actuator1_Event_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Actuator1_Event_msg_in_actuatortc_PRESENT);
        Actuator1_Event_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Actuator1_event_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Actuator1_Event_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Actuator1_Event_msg_out_actuatortm_tm_range_check(dst);
}
inline Actuator1_Event_msg_out_actuatortm_tm_range_check(Actuator1_Event_msg_out_actuatortm_tm_vc)
{
    assert((((Actuator1_Event_msg_out_actuatortm_tm_vc == Actuator1_Event_msg_out_actuatortm_tm_actuatorArmed) || (Actuator1_Event_msg_out_actuatortm_tm_vc == Actuator1_Event_msg_out_actuatortm_tm_actuatorExecuting)) || (Actuator1_Event_msg_out_actuatortm_tm_vc == Actuator1_Event_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Actuator1_Event_msg_out_actuatortm_assign_value(dst, src)
{
    Actuator1_Event_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Actuator1_Event_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Actuator1_Event_msg_out_actuatortm_PRESENT);
        Actuator1_Event_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Actuator1_event_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Actuator1_Event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Actuator1_Event_msg_in_PRESENT);
        Actuator1_Event_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Actuator1_Event_msg_out_PRESENT);
        Actuator1_Event_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Actuator1_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline Actuator2_Event_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Actuator2_Event_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Actuator2_Event_msg_in_actuatortc_tc_range_check(dst);
}
inline Actuator2_Event_msg_in_actuatortc_tc_range_check(Actuator2_Event_msg_in_actuatortc_tc_vc)
{
    assert((((Actuator2_Event_msg_in_actuatortc_tc_vc == Actuator2_Event_msg_in_actuatortc_tc_actuatorArm) || (Actuator2_Event_msg_in_actuatortc_tc_vc == Actuator2_Event_msg_in_actuatortc_tc_actuatorExecute)) || (Actuator2_Event_msg_in_actuatortc_tc_vc == Actuator2_Event_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Actuator2_Event_msg_in_actuatortc_assign_value(dst, src)
{
    Actuator2_Event_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Actuator2_Event_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Actuator2_Event_msg_in_input_none_PRESENT);
        Actuator2_Event_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Actuator2_Event_msg_in_actuatortc_PRESENT);
        Actuator2_Event_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Actuator2_event_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Actuator2_Event_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Actuator2_Event_msg_out_actuatortm_tm_range_check(dst);
}
inline Actuator2_Event_msg_out_actuatortm_tm_range_check(Actuator2_Event_msg_out_actuatortm_tm_vc)
{
    assert((((Actuator2_Event_msg_out_actuatortm_tm_vc == Actuator2_Event_msg_out_actuatortm_tm_actuatorArmed) || (Actuator2_Event_msg_out_actuatortm_tm_vc == Actuator2_Event_msg_out_actuatortm_tm_actuatorExecuting)) || (Actuator2_Event_msg_out_actuatortm_tm_vc == Actuator2_Event_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Actuator2_Event_msg_out_actuatortm_assign_value(dst, src)
{
    Actuator2_Event_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Actuator2_Event_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Actuator2_Event_msg_out_actuatortm_PRESENT);
        Actuator2_Event_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Actuator2_event_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Actuator2_Event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Actuator2_Event_msg_in_PRESENT);
        Actuator2_Event_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Actuator2_Event_msg_out_PRESENT);
        Actuator2_Event_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Actuator2_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline Egse_Event_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Egse_Event_msg_in_systemtm_tm_reading_range_check(dst);
}
inline Egse_Event_msg_in_systemtm_tm_reading_range_check(Egse_Event_msg_in_systemtm_tm_reading_vc)
{
    assert(((Egse_Event_msg_in_systemtm_tm_reading_vc >= 0) && (Egse_Event_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline Egse_Event_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Egse_Event_msg_in_systemtm_tm_status1_range_check(dst);
}
inline Egse_Event_msg_in_systemtm_tm_status1_range_check(Egse_Event_msg_in_systemtm_tm_status1_vc)
{
    assert((((Egse_Event_msg_in_systemtm_tm_status1_vc == Egse_Event_msg_in_systemtm_tm_status1_actuatorArmed) || (Egse_Event_msg_in_systemtm_tm_status1_vc == Egse_Event_msg_in_systemtm_tm_status1_actuatorExecuting)) || (Egse_Event_msg_in_systemtm_tm_status1_vc == Egse_Event_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline Egse_Event_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Egse_Event_msg_in_systemtm_tm_status2_range_check(dst);
}
inline Egse_Event_msg_in_systemtm_tm_status2_range_check(Egse_Event_msg_in_systemtm_tm_status2_vc)
{
    assert((((Egse_Event_msg_in_systemtm_tm_status2_vc == Egse_Event_msg_in_systemtm_tm_status2_actuatorArmed) || (Egse_Event_msg_in_systemtm_tm_status2_vc == Egse_Event_msg_in_systemtm_tm_status2_actuatorExecuting)) || (Egse_Event_msg_in_systemtm_tm_status2_vc == Egse_Event_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline Egse_Event_msg_in_systemtm_tm_assign_value(dst, src)
{
    Egse_Event_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Egse_Event_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Egse_Event_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Egse_Event_msg_in_systemtm_assign_value(dst, src)
{
    Egse_Event_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Egse_Event_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Egse_Event_msg_in_systemtm_PRESENT);
        Egse_Event_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Egse_event_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Egse_Event_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Egse_Event_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline Egse_Event_msg_out_systemtc_tc_goToIdle_range_check(Egse_Event_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((Egse_Event_msg_out_systemtc_tc_goToIdle_vc >= 0) && (Egse_Event_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline Egse_Event_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Egse_Event_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Egse_Event_msg_out_systemtc_tc_goToOperational_threshold1_range_check(Egse_Event_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Egse_Event_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Egse_Event_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Egse_Event_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Egse_Event_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Egse_Event_msg_out_systemtc_tc_goToOperational_threshold2_range_check(Egse_Event_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Egse_Event_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Egse_Event_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Egse_Event_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Egse_Event_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Egse_Event_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Egse_Event_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Egse_Event_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline Egse_Event_msg_out_systemtc_tc_doReport_range_check(Egse_Event_msg_out_systemtc_tc_doReport_vc)
{
    assert(((Egse_Event_msg_out_systemtc_tc_doReport_vc >= 0) && (Egse_Event_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline Egse_Event_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Egse_Event_msg_out_systemtc_tc_goToIdle_PRESENT);
        Egse_Event_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Egse_Event_msg_out_systemtc_tc_goToOperational_PRESENT);
        Egse_Event_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Egse_Event_msg_out_systemtc_tc_doReport_PRESENT);
        Egse_Event_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Egse_event_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Egse_Event_msg_out_systemtc_assign_value(dst, src)
{
    Egse_Event_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Egse_Event_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Egse_Event_msg_out_systemtc_PRESENT);
        Egse_Event_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Egse_event_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Egse_Event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Egse_Event_msg_in_PRESENT);
        Egse_Event_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Egse_Event_msg_out_PRESENT);
        Egse_Event_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Egse_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline Modemanager_Event_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Modemanager_Event_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    Modemanager_Event_msg_in_actuatortm1_tm_range_check(dst);
}
inline Modemanager_Event_msg_in_actuatortm1_tm_range_check(Modemanager_Event_msg_in_actuatortm1_tm_vc)
{
    assert((((Modemanager_Event_msg_in_actuatortm1_tm_vc == Modemanager_Event_msg_in_actuatortm1_tm_actuatorArmed) || (Modemanager_Event_msg_in_actuatortm1_tm_vc == Modemanager_Event_msg_in_actuatortm1_tm_actuatorExecuting)) || (Modemanager_Event_msg_in_actuatortm1_tm_vc == Modemanager_Event_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline Modemanager_Event_msg_in_actuatortm1_assign_value(dst, src)
{
    Modemanager_Event_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline Modemanager_Event_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    Modemanager_Event_msg_in_actuatortm2_tm_range_check(dst);
}
inline Modemanager_Event_msg_in_actuatortm2_tm_range_check(Modemanager_Event_msg_in_actuatortm2_tm_vc)
{
    assert((((Modemanager_Event_msg_in_actuatortm2_tm_vc == Modemanager_Event_msg_in_actuatortm2_tm_actuatorArmed) || (Modemanager_Event_msg_in_actuatortm2_tm_vc == Modemanager_Event_msg_in_actuatortm2_tm_actuatorExecuting)) || (Modemanager_Event_msg_in_actuatortm2_tm_vc == Modemanager_Event_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline Modemanager_Event_msg_in_actuatortm2_assign_value(dst, src)
{
    Modemanager_Event_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline Modemanager_Event_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    Modemanager_Event_msg_in_reading_x_range_check(dst);
}
inline Modemanager_Event_msg_in_reading_x_range_check(Modemanager_Event_msg_in_reading_x_vc)
{
    assert(((Modemanager_Event_msg_in_reading_x_vc >= 0) && (Modemanager_Event_msg_in_reading_x_vc <= 255)));
}
inline Modemanager_Event_msg_in_reading_assign_value(dst, src)
{
    Modemanager_Event_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline Modemanager_Event_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Modemanager_Event_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline Modemanager_Event_msg_in_systemtc_tc_goToIdle_range_check(Modemanager_Event_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((Modemanager_Event_msg_in_systemtc_tc_goToIdle_vc >= 0) && (Modemanager_Event_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold1_range_check(Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold2_range_check(Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Modemanager_Event_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Modemanager_Event_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Modemanager_Event_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Modemanager_Event_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline Modemanager_Event_msg_in_systemtc_tc_doReport_range_check(Modemanager_Event_msg_in_systemtc_tc_doReport_vc)
{
    assert(((Modemanager_Event_msg_in_systemtc_tc_doReport_vc >= 0) && (Modemanager_Event_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline Modemanager_Event_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Modemanager_Event_msg_in_systemtc_tc_goToIdle_PRESENT);
        Modemanager_Event_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Modemanager_Event_msg_in_systemtc_tc_goToOperational_PRESENT);
        Modemanager_Event_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Modemanager_Event_msg_in_systemtc_tc_doReport_PRESENT);
        Modemanager_Event_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Modemanager_event_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Modemanager_Event_msg_in_systemtc_assign_value(dst, src)
{
    Modemanager_Event_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Modemanager_Event_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Modemanager_Event_msg_in_input_none_PRESENT);
        Modemanager_Event_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Modemanager_Event_msg_in_actuatortm1_PRESENT);
        Modemanager_Event_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == Modemanager_Event_msg_in_actuatortm2_PRESENT);
        Modemanager_Event_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == Modemanager_Event_msg_in_reading_PRESENT);
        Modemanager_Event_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == Modemanager_Event_msg_in_systemtc_PRESENT);
        Modemanager_Event_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Modemanager_event_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Modemanager_Event_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    Modemanager_Event_msg_out_actuatortc1_tc_range_check(dst);
}
inline Modemanager_Event_msg_out_actuatortc1_tc_range_check(Modemanager_Event_msg_out_actuatortc1_tc_vc)
{
    assert((((Modemanager_Event_msg_out_actuatortc1_tc_vc == Modemanager_Event_msg_out_actuatortc1_tc_actuatorArm) || (Modemanager_Event_msg_out_actuatortc1_tc_vc == Modemanager_Event_msg_out_actuatortc1_tc_actuatorExecute)) || (Modemanager_Event_msg_out_actuatortc1_tc_vc == Modemanager_Event_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline Modemanager_Event_msg_out_actuatortc1_assign_value(dst, src)
{
    Modemanager_Event_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline Modemanager_Event_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    Modemanager_Event_msg_out_actuatortc2_tc_range_check(dst);
}
inline Modemanager_Event_msg_out_actuatortc2_tc_range_check(Modemanager_Event_msg_out_actuatortc2_tc_vc)
{
    assert((((Modemanager_Event_msg_out_actuatortc2_tc_vc == Modemanager_Event_msg_out_actuatortc2_tc_actuatorArm) || (Modemanager_Event_msg_out_actuatortc2_tc_vc == Modemanager_Event_msg_out_actuatortc2_tc_actuatorExecute)) || (Modemanager_Event_msg_out_actuatortc2_tc_vc == Modemanager_Event_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline Modemanager_Event_msg_out_actuatortc2_assign_value(dst, src)
{
    Modemanager_Event_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline Modemanager_Event_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Modemanager_Event_msg_out_systemtm_tm_reading_range_check(dst);
}
inline Modemanager_Event_msg_out_systemtm_tm_reading_range_check(Modemanager_Event_msg_out_systemtm_tm_reading_vc)
{
    assert(((Modemanager_Event_msg_out_systemtm_tm_reading_vc >= 0) && (Modemanager_Event_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline Modemanager_Event_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Modemanager_Event_msg_out_systemtm_tm_status1_range_check(dst);
}
inline Modemanager_Event_msg_out_systemtm_tm_status1_range_check(Modemanager_Event_msg_out_systemtm_tm_status1_vc)
{
    assert((((Modemanager_Event_msg_out_systemtm_tm_status1_vc == Modemanager_Event_msg_out_systemtm_tm_status1_actuatorArmed) || (Modemanager_Event_msg_out_systemtm_tm_status1_vc == Modemanager_Event_msg_out_systemtm_tm_status1_actuatorExecuting)) || (Modemanager_Event_msg_out_systemtm_tm_status1_vc == Modemanager_Event_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline Modemanager_Event_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Modemanager_Event_msg_out_systemtm_tm_status2_range_check(dst);
}
inline Modemanager_Event_msg_out_systemtm_tm_status2_range_check(Modemanager_Event_msg_out_systemtm_tm_status2_vc)
{
    assert((((Modemanager_Event_msg_out_systemtm_tm_status2_vc == Modemanager_Event_msg_out_systemtm_tm_status2_actuatorArmed) || (Modemanager_Event_msg_out_systemtm_tm_status2_vc == Modemanager_Event_msg_out_systemtm_tm_status2_actuatorExecuting)) || (Modemanager_Event_msg_out_systemtm_tm_status2_vc == Modemanager_Event_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline Modemanager_Event_msg_out_systemtm_tm_assign_value(dst, src)
{
    Modemanager_Event_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Modemanager_Event_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Modemanager_Event_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Modemanager_Event_msg_out_systemtm_assign_value(dst, src)
{
    Modemanager_Event_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Modemanager_Event_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Modemanager_Event_msg_out_actuatortc1_PRESENT);
        Modemanager_Event_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == Modemanager_Event_msg_out_actuatortc2_PRESENT);
        Modemanager_Event_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == Modemanager_Event_msg_out_systemtm_PRESENT);
        Modemanager_Event_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Modemanager_event_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Modemanager_Event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Modemanager_Event_msg_in_PRESENT);
        Modemanager_Event_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Modemanager_Event_msg_out_PRESENT);
        Modemanager_Event_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Modemanager_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline Sensor_Event_assign_value(dst, src)
{
    skip;
}
inline Observer_State_Kind_assign_value(dst, src)
{
    dst = src;
    Observer_State_Kind_range_check(dst);
}
inline Observer_State_Kind_range_check(Observer_State_Kind_vc)
{
    assert(((((Observer_State_Kind_vc == Observer_State_Kind_regular_state) || (Observer_State_Kind_vc == Observer_State_Kind_error_state)) || (Observer_State_Kind_vc == Observer_State_Kind_ignore_state)) || (Observer_State_Kind_vc == Observer_State_Kind_success_state)));
}
inline Function_Event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Function_Event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Function_Event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline Function_Event_actuator1_msg_in_actuatortc_tc_range_check(Function_Event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((Function_Event_actuator1_msg_in_actuatortc_tc_vc == Function_Event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (Function_Event_actuator1_msg_in_actuatortc_tc_vc == Function_Event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (Function_Event_actuator1_msg_in_actuatortc_tc_vc == Function_Event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Function_Event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    Function_Event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Function_Event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Function_Event_actuator1_msg_in_input_none_PRESENT);
        Function_Event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Function_Event_actuator1_msg_in_actuatortc_PRESENT);
        Function_Event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Function_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Function_Event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Function_Event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline Function_Event_actuator1_msg_out_actuatortm_tm_range_check(Function_Event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((Function_Event_actuator1_msg_out_actuatortm_tm_vc == Function_Event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (Function_Event_actuator1_msg_out_actuatortm_tm_vc == Function_Event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (Function_Event_actuator1_msg_out_actuatortm_tm_vc == Function_Event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Function_Event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    Function_Event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Function_Event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Function_Event_actuator1_msg_out_actuatortm_PRESENT);
        Function_Event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Function_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Function_Event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Function_Event_actuator1_msg_in_PRESENT);
        Function_Event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Function_Event_actuator1_msg_out_PRESENT);
        Function_Event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Function_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline Function_Event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Function_Event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Function_Event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline Function_Event_actuator2_msg_in_actuatortc_tc_range_check(Function_Event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((Function_Event_actuator2_msg_in_actuatortc_tc_vc == Function_Event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (Function_Event_actuator2_msg_in_actuatortc_tc_vc == Function_Event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (Function_Event_actuator2_msg_in_actuatortc_tc_vc == Function_Event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Function_Event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    Function_Event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Function_Event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Function_Event_actuator2_msg_in_input_none_PRESENT);
        Function_Event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Function_Event_actuator2_msg_in_actuatortc_PRESENT);
        Function_Event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Function_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Function_Event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Function_Event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline Function_Event_actuator2_msg_out_actuatortm_tm_range_check(Function_Event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((Function_Event_actuator2_msg_out_actuatortm_tm_vc == Function_Event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (Function_Event_actuator2_msg_out_actuatortm_tm_vc == Function_Event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (Function_Event_actuator2_msg_out_actuatortm_tm_vc == Function_Event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Function_Event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    Function_Event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Function_Event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Function_Event_actuator2_msg_out_actuatortm_PRESENT);
        Function_Event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Function_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Function_Event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Function_Event_actuator2_msg_in_PRESENT);
        Function_Event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Function_Event_actuator2_msg_out_PRESENT);
        Function_Event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Function_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline Function_Event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Function_Event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline Function_Event_egse_msg_in_systemtm_tm_reading_range_check(Function_Event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((Function_Event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (Function_Event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline Function_Event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Function_Event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline Function_Event_egse_msg_in_systemtm_tm_status1_range_check(Function_Event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((Function_Event_egse_msg_in_systemtm_tm_status1_vc == Function_Event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (Function_Event_egse_msg_in_systemtm_tm_status1_vc == Function_Event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (Function_Event_egse_msg_in_systemtm_tm_status1_vc == Function_Event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline Function_Event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Function_Event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline Function_Event_egse_msg_in_systemtm_tm_status2_range_check(Function_Event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((Function_Event_egse_msg_in_systemtm_tm_status2_vc == Function_Event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (Function_Event_egse_msg_in_systemtm_tm_status2_vc == Function_Event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (Function_Event_egse_msg_in_systemtm_tm_status2_vc == Function_Event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline Function_Event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    Function_Event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Function_Event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Function_Event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Function_Event_egse_msg_in_systemtm_assign_value(dst, src)
{
    Function_Event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Function_Event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Function_Event_egse_msg_in_systemtm_PRESENT);
        Function_Event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Function_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Function_Event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Function_Event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline Function_Event_egse_msg_out_systemtc_tc_goToIdle_range_check(Function_Event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((Function_Event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (Function_Event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Function_Event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Function_Event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Function_Event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Function_Event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline Function_Event_egse_msg_out_systemtc_tc_doReport_range_check(Function_Event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((Function_Event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (Function_Event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline Function_Event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Function_Event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        Function_Event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Function_Event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        Function_Event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Function_Event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        Function_Event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Function_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Function_Event_egse_msg_out_systemtc_assign_value(dst, src)
{
    Function_Event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Function_Event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Function_Event_egse_msg_out_systemtc_PRESENT);
        Function_Event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Function_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Function_Event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Function_Event_egse_msg_in_PRESENT);
        Function_Event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Function_Event_egse_msg_out_PRESENT);
        Function_Event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Function_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline Function_Event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Function_Event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    Function_Event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline Function_Event_modemanager_msg_in_actuatortm1_tm_range_check(Function_Event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((Function_Event_modemanager_msg_in_actuatortm1_tm_vc == Function_Event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (Function_Event_modemanager_msg_in_actuatortm1_tm_vc == Function_Event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (Function_Event_modemanager_msg_in_actuatortm1_tm_vc == Function_Event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline Function_Event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    Function_Event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline Function_Event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    Function_Event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline Function_Event_modemanager_msg_in_actuatortm2_tm_range_check(Function_Event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((Function_Event_modemanager_msg_in_actuatortm2_tm_vc == Function_Event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (Function_Event_modemanager_msg_in_actuatortm2_tm_vc == Function_Event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (Function_Event_modemanager_msg_in_actuatortm2_tm_vc == Function_Event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline Function_Event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    Function_Event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline Function_Event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    Function_Event_modemanager_msg_in_reading_x_range_check(dst);
}
inline Function_Event_modemanager_msg_in_reading_x_range_check(Function_Event_modemanager_msg_in_reading_x_vc)
{
    assert(((Function_Event_modemanager_msg_in_reading_x_vc >= 0) && (Function_Event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline Function_Event_modemanager_msg_in_reading_assign_value(dst, src)
{
    Function_Event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline Function_Event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Function_Event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline Function_Event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(Function_Event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((Function_Event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (Function_Event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Function_Event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Function_Event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline Function_Event_modemanager_msg_in_systemtc_tc_doReport_range_check(Function_Event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((Function_Event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (Function_Event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline Function_Event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Function_Event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        Function_Event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        Function_Event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Function_Event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        Function_Event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Function_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Function_Event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    Function_Event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Function_Event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Function_Event_modemanager_msg_in_input_none_PRESENT);
        Function_Event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Function_Event_modemanager_msg_in_actuatortm1_PRESENT);
        Function_Event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == Function_Event_modemanager_msg_in_actuatortm2_PRESENT);
        Function_Event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == Function_Event_modemanager_msg_in_reading_PRESENT);
        Function_Event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == Function_Event_modemanager_msg_in_systemtc_PRESENT);
        Function_Event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Function_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Function_Event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    Function_Event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline Function_Event_modemanager_msg_out_actuatortc1_tc_range_check(Function_Event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((Function_Event_modemanager_msg_out_actuatortc1_tc_vc == Function_Event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (Function_Event_modemanager_msg_out_actuatortc1_tc_vc == Function_Event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (Function_Event_modemanager_msg_out_actuatortc1_tc_vc == Function_Event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline Function_Event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    Function_Event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline Function_Event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    Function_Event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline Function_Event_modemanager_msg_out_actuatortc2_tc_range_check(Function_Event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((Function_Event_modemanager_msg_out_actuatortc2_tc_vc == Function_Event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (Function_Event_modemanager_msg_out_actuatortc2_tc_vc == Function_Event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (Function_Event_modemanager_msg_out_actuatortc2_tc_vc == Function_Event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline Function_Event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    Function_Event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline Function_Event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Function_Event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline Function_Event_modemanager_msg_out_systemtm_tm_reading_range_check(Function_Event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((Function_Event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (Function_Event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline Function_Event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Function_Event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline Function_Event_modemanager_msg_out_systemtm_tm_status1_range_check(Function_Event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((Function_Event_modemanager_msg_out_systemtm_tm_status1_vc == Function_Event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (Function_Event_modemanager_msg_out_systemtm_tm_status1_vc == Function_Event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (Function_Event_modemanager_msg_out_systemtm_tm_status1_vc == Function_Event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline Function_Event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Function_Event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline Function_Event_modemanager_msg_out_systemtm_tm_status2_range_check(Function_Event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((Function_Event_modemanager_msg_out_systemtm_tm_status2_vc == Function_Event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (Function_Event_modemanager_msg_out_systemtm_tm_status2_vc == Function_Event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (Function_Event_modemanager_msg_out_systemtm_tm_status2_vc == Function_Event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline Function_Event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    Function_Event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Function_Event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Function_Event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Function_Event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    Function_Event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Function_Event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Function_Event_modemanager_msg_out_actuatortc1_PRESENT);
        Function_Event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == Function_Event_modemanager_msg_out_actuatortc2_PRESENT);
        Function_Event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == Function_Event_modemanager_msg_out_systemtm_PRESENT);
        Function_Event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Function_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Function_Event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Function_Event_modemanager_msg_in_PRESENT);
        Function_Event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Function_Event_modemanager_msg_out_PRESENT);
        Function_Event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Function_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline Function_Event_sensor_assign_value(dst, src)
{
    skip;
}
inline Function_Event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Function_Event_actuator1_PRESENT);
        Function_Event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == Function_Event_actuator2_PRESENT);
        Function_Event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == Function_Event_egse_PRESENT);
        Function_Event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == Function_Event_modemanager_PRESENT);
        Function_Event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == Function_Event_sensor_PRESENT);
        Function_Event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline Function_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline Named_Function_Event_id_assign_value(dst, src)
{
    Named_Function_Event_id_size_check(src.length);
    int i;
    for(i : 0 .. (src.length - 1))
    {
        dst.data[i] = src.data[i];
    }
    for(i : src.length .. 79)
    {
        dst.data[i] = 0;
    }
    dst.length = src.length;
}
inline Named_Function_Event_id_size_check(Named_Function_Event_id_sc)
{
    assert(((Named_Function_Event_id_sc >= 1) && (Named_Function_Event_id_sc <= 80)));
}
inline Named_Function_Event_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Named_Function_Event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline Named_Function_Event_event_actuator1_msg_in_actuatortc_tc_range_check(Named_Function_Event_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((Named_Function_Event_event_actuator1_msg_in_actuatortc_tc_vc == Named_Function_Event_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (Named_Function_Event_event_actuator1_msg_in_actuatortc_tc_vc == Named_Function_Event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (Named_Function_Event_event_actuator1_msg_in_actuatortc_tc_vc == Named_Function_Event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Named_Function_Event_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    Named_Function_Event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Named_Function_Event_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Named_Function_Event_event_actuator1_msg_in_input_none_PRESENT);
        Named_Function_Event_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Named_Function_Event_event_actuator1_msg_in_actuatortc_PRESENT);
        Named_Function_Event_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Named_function_event_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Named_Function_Event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline Named_Function_Event_event_actuator1_msg_out_actuatortm_tm_range_check(Named_Function_Event_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((Named_Function_Event_event_actuator1_msg_out_actuatortm_tm_vc == Named_Function_Event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (Named_Function_Event_event_actuator1_msg_out_actuatortm_tm_vc == Named_Function_Event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (Named_Function_Event_event_actuator1_msg_out_actuatortm_tm_vc == Named_Function_Event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Named_Function_Event_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    Named_Function_Event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Named_Function_Event_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Named_Function_Event_event_actuator1_msg_out_actuatortm_PRESENT);
        Named_Function_Event_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Named_function_event_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Named_Function_Event_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Named_Function_Event_event_actuator1_msg_in_PRESENT);
        Named_Function_Event_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Named_Function_Event_event_actuator1_msg_out_PRESENT);
        Named_Function_Event_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Named_function_event_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline Named_Function_Event_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Named_Function_Event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline Named_Function_Event_event_actuator2_msg_in_actuatortc_tc_range_check(Named_Function_Event_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((Named_Function_Event_event_actuator2_msg_in_actuatortc_tc_vc == Named_Function_Event_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (Named_Function_Event_event_actuator2_msg_in_actuatortc_tc_vc == Named_Function_Event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (Named_Function_Event_event_actuator2_msg_in_actuatortc_tc_vc == Named_Function_Event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Named_Function_Event_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    Named_Function_Event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Named_Function_Event_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Named_Function_Event_event_actuator2_msg_in_input_none_PRESENT);
        Named_Function_Event_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Named_Function_Event_event_actuator2_msg_in_actuatortc_PRESENT);
        Named_Function_Event_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Named_function_event_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Named_Function_Event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline Named_Function_Event_event_actuator2_msg_out_actuatortm_tm_range_check(Named_Function_Event_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((Named_Function_Event_event_actuator2_msg_out_actuatortm_tm_vc == Named_Function_Event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (Named_Function_Event_event_actuator2_msg_out_actuatortm_tm_vc == Named_Function_Event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (Named_Function_Event_event_actuator2_msg_out_actuatortm_tm_vc == Named_Function_Event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Named_Function_Event_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    Named_Function_Event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Named_Function_Event_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Named_Function_Event_event_actuator2_msg_out_actuatortm_PRESENT);
        Named_Function_Event_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Named_function_event_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Named_Function_Event_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Named_Function_Event_event_actuator2_msg_in_PRESENT);
        Named_Function_Event_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Named_Function_Event_event_actuator2_msg_out_PRESENT);
        Named_Function_Event_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Named_function_event_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline Named_Function_Event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline Named_Function_Event_event_egse_msg_in_systemtm_tm_reading_range_check(Named_Function_Event_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((Named_Function_Event_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (Named_Function_Event_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline Named_Function_Event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline Named_Function_Event_event_egse_msg_in_systemtm_tm_status1_range_check(Named_Function_Event_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((Named_Function_Event_event_egse_msg_in_systemtm_tm_status1_vc == Named_Function_Event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (Named_Function_Event_event_egse_msg_in_systemtm_tm_status1_vc == Named_Function_Event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (Named_Function_Event_event_egse_msg_in_systemtm_tm_status1_vc == Named_Function_Event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline Named_Function_Event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline Named_Function_Event_event_egse_msg_in_systemtm_tm_status2_range_check(Named_Function_Event_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((Named_Function_Event_event_egse_msg_in_systemtm_tm_status2_vc == Named_Function_Event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (Named_Function_Event_event_egse_msg_in_systemtm_tm_status2_vc == Named_Function_Event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (Named_Function_Event_event_egse_msg_in_systemtm_tm_status2_vc == Named_Function_Event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline Named_Function_Event_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    Named_Function_Event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Named_Function_Event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Named_Function_Event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Named_Function_Event_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    Named_Function_Event_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Named_Function_Event_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Named_Function_Event_event_egse_msg_in_systemtm_PRESENT);
        Named_Function_Event_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Named_function_event_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Named_Function_Event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline Named_Function_Event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(Named_Function_Event_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((Named_Function_Event_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (Named_Function_Event_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Named_Function_Event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline Named_Function_Event_event_egse_msg_out_systemtc_tc_doReport_range_check(Named_Function_Event_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((Named_Function_Event_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (Named_Function_Event_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline Named_Function_Event_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Named_Function_Event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        Named_Function_Event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        Named_Function_Event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Named_Function_Event_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        Named_Function_Event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Named_function_event_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Named_Function_Event_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    Named_Function_Event_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Named_Function_Event_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Named_Function_Event_event_egse_msg_out_systemtc_PRESENT);
        Named_Function_Event_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Named_function_event_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Named_Function_Event_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Named_Function_Event_event_egse_msg_in_PRESENT);
        Named_Function_Event_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Named_Function_Event_event_egse_msg_out_PRESENT);
        Named_Function_Event_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Named_function_event_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline Named_Function_Event_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Named_Function_Event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline Named_Function_Event_event_modemanager_msg_in_actuatortm1_tm_range_check(Named_Function_Event_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((Named_Function_Event_event_modemanager_msg_in_actuatortm1_tm_vc == Named_Function_Event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (Named_Function_Event_event_modemanager_msg_in_actuatortm1_tm_vc == Named_Function_Event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (Named_Function_Event_event_modemanager_msg_in_actuatortm1_tm_vc == Named_Function_Event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline Named_Function_Event_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    Named_Function_Event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline Named_Function_Event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline Named_Function_Event_event_modemanager_msg_in_actuatortm2_tm_range_check(Named_Function_Event_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((Named_Function_Event_event_modemanager_msg_in_actuatortm2_tm_vc == Named_Function_Event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (Named_Function_Event_event_modemanager_msg_in_actuatortm2_tm_vc == Named_Function_Event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (Named_Function_Event_event_modemanager_msg_in_actuatortm2_tm_vc == Named_Function_Event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline Named_Function_Event_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    Named_Function_Event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline Named_Function_Event_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline Named_Function_Event_event_modemanager_msg_in_reading_x_range_check(Named_Function_Event_event_modemanager_msg_in_reading_x_vc)
{
    assert(((Named_Function_Event_event_modemanager_msg_in_reading_x_vc >= 0) && (Named_Function_Event_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline Named_Function_Event_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    Named_Function_Event_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Named_Function_Event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline Named_Function_Event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(Named_Function_Event_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((Named_Function_Event_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (Named_Function_Event_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline Named_Function_Event_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        Named_Function_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Named_Function_Event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        Named_Function_Event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Named_function_event_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Named_Function_Event_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    Named_Function_Event_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Named_Function_Event_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Named_Function_Event_event_modemanager_msg_in_input_none_PRESENT);
        Named_Function_Event_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Named_Function_Event_event_modemanager_msg_in_actuatortm1_PRESENT);
        Named_Function_Event_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == Named_Function_Event_event_modemanager_msg_in_actuatortm2_PRESENT);
        Named_Function_Event_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == Named_Function_Event_event_modemanager_msg_in_reading_PRESENT);
        Named_Function_Event_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == Named_Function_Event_event_modemanager_msg_in_systemtc_PRESENT);
        Named_Function_Event_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Named_function_event_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Named_Function_Event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline Named_Function_Event_event_modemanager_msg_out_actuatortc1_tc_range_check(Named_Function_Event_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((Named_Function_Event_event_modemanager_msg_out_actuatortc1_tc_vc == Named_Function_Event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (Named_Function_Event_event_modemanager_msg_out_actuatortc1_tc_vc == Named_Function_Event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (Named_Function_Event_event_modemanager_msg_out_actuatortc1_tc_vc == Named_Function_Event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline Named_Function_Event_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    Named_Function_Event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline Named_Function_Event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline Named_Function_Event_event_modemanager_msg_out_actuatortc2_tc_range_check(Named_Function_Event_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((Named_Function_Event_event_modemanager_msg_out_actuatortc2_tc_vc == Named_Function_Event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (Named_Function_Event_event_modemanager_msg_out_actuatortc2_tc_vc == Named_Function_Event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (Named_Function_Event_event_modemanager_msg_out_actuatortc2_tc_vc == Named_Function_Event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline Named_Function_Event_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    Named_Function_Event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline Named_Function_Event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline Named_Function_Event_event_modemanager_msg_out_systemtm_tm_reading_range_check(Named_Function_Event_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((Named_Function_Event_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (Named_Function_Event_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status1_range_check(Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status1_vc == Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status1_vc == Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status1_vc == Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status2_range_check(Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status2_vc == Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status2_vc == Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status2_vc == Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline Named_Function_Event_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    Named_Function_Event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Named_Function_Event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Named_Function_Event_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    Named_Function_Event_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Named_Function_Event_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Named_Function_Event_event_modemanager_msg_out_actuatortc1_PRESENT);
        Named_Function_Event_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == Named_Function_Event_event_modemanager_msg_out_actuatortc2_PRESENT);
        Named_Function_Event_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == Named_Function_Event_event_modemanager_msg_out_systemtm_PRESENT);
        Named_Function_Event_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Named_function_event_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Named_Function_Event_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Named_Function_Event_event_modemanager_msg_in_PRESENT);
        Named_Function_Event_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Named_Function_Event_event_modemanager_msg_out_PRESENT);
        Named_Function_Event_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Named_function_event_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline Named_Function_Event_event_sensor_assign_value(dst, src)
{
    skip;
}
inline Named_Function_Event_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Named_Function_Event_event_actuator1_PRESENT);
        Named_Function_Event_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == Named_Function_Event_event_actuator2_PRESENT);
        Named_Function_Event_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == Named_Function_Event_event_egse_PRESENT);
        Named_Function_Event_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == Named_Function_Event_event_modemanager_PRESENT);
        Named_Function_Event_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == Named_Function_Event_event_sensor_PRESENT);
        Named_Function_Event_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline Named_function_event_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline Named_Function_Event_assign_value(dst, src)
{
    Named_Function_Event_id_assign_value(dst.id, src.id);
    Named_Function_Event_event_assign_value(dst.event, src.event);
}
inline Interface_Event_source_assign_value(dst, src)
{
    dst = src;
    Interface_Event_source_range_check(dst);
}
inline Interface_Event_source_range_check(Interface_Event_source_vc)
{
    assert((((((((Interface_Event_source_vc == Interface_Event_source_actuator) || (Interface_Event_source_vc == Interface_Event_source_actuator1)) || (Interface_Event_source_vc == Interface_Event_source_actuator2)) || (Interface_Event_source_vc == Interface_Event_source_egse)) || (Interface_Event_source_vc == Interface_Event_source_modemanager)) || (Interface_Event_source_vc == Interface_Event_source_sensor)) || (Interface_Event_source_vc == Interface_Event_source_env)));
}
inline Interface_Event_dest_assign_value(dst, src)
{
    dst = src;
    Interface_Event_dest_range_check(dst);
}
inline Interface_Event_dest_range_check(Interface_Event_dest_vc)
{
    assert((((((((Interface_Event_dest_vc == Interface_Event_dest_actuator) || (Interface_Event_dest_vc == Interface_Event_dest_actuator1)) || (Interface_Event_dest_vc == Interface_Event_dest_actuator2)) || (Interface_Event_dest_vc == Interface_Event_dest_egse)) || (Interface_Event_dest_vc == Interface_Event_dest_modemanager)) || (Interface_Event_dest_vc == Interface_Event_dest_sensor)) || (Interface_Event_dest_vc == Interface_Event_dest_env)));
}
inline Interface_Event_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Interface_Event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline Interface_Event_event_actuator1_msg_in_actuatortc_tc_range_check(Interface_Event_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((Interface_Event_event_actuator1_msg_in_actuatortc_tc_vc == Interface_Event_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (Interface_Event_event_actuator1_msg_in_actuatortc_tc_vc == Interface_Event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (Interface_Event_event_actuator1_msg_in_actuatortc_tc_vc == Interface_Event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Interface_Event_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    Interface_Event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Interface_Event_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Interface_Event_event_actuator1_msg_in_input_none_PRESENT);
        Interface_Event_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Interface_Event_event_actuator1_msg_in_actuatortc_PRESENT);
        Interface_Event_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Interface_event_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Interface_Event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline Interface_Event_event_actuator1_msg_out_actuatortm_tm_range_check(Interface_Event_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((Interface_Event_event_actuator1_msg_out_actuatortm_tm_vc == Interface_Event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (Interface_Event_event_actuator1_msg_out_actuatortm_tm_vc == Interface_Event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (Interface_Event_event_actuator1_msg_out_actuatortm_tm_vc == Interface_Event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Interface_Event_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    Interface_Event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Interface_Event_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Interface_Event_event_actuator1_msg_out_actuatortm_PRESENT);
        Interface_Event_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Interface_event_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Interface_Event_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Interface_Event_event_actuator1_msg_in_PRESENT);
        Interface_Event_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Interface_Event_event_actuator1_msg_out_PRESENT);
        Interface_Event_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Interface_event_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline Interface_Event_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Interface_Event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline Interface_Event_event_actuator2_msg_in_actuatortc_tc_range_check(Interface_Event_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((Interface_Event_event_actuator2_msg_in_actuatortc_tc_vc == Interface_Event_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (Interface_Event_event_actuator2_msg_in_actuatortc_tc_vc == Interface_Event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (Interface_Event_event_actuator2_msg_in_actuatortc_tc_vc == Interface_Event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Interface_Event_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    Interface_Event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Interface_Event_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Interface_Event_event_actuator2_msg_in_input_none_PRESENT);
        Interface_Event_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Interface_Event_event_actuator2_msg_in_actuatortc_PRESENT);
        Interface_Event_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Interface_event_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Interface_Event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline Interface_Event_event_actuator2_msg_out_actuatortm_tm_range_check(Interface_Event_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((Interface_Event_event_actuator2_msg_out_actuatortm_tm_vc == Interface_Event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (Interface_Event_event_actuator2_msg_out_actuatortm_tm_vc == Interface_Event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (Interface_Event_event_actuator2_msg_out_actuatortm_tm_vc == Interface_Event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Interface_Event_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    Interface_Event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Interface_Event_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Interface_Event_event_actuator2_msg_out_actuatortm_PRESENT);
        Interface_Event_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Interface_event_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Interface_Event_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Interface_Event_event_actuator2_msg_in_PRESENT);
        Interface_Event_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Interface_Event_event_actuator2_msg_out_PRESENT);
        Interface_Event_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Interface_event_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline Interface_Event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline Interface_Event_event_egse_msg_in_systemtm_tm_reading_range_check(Interface_Event_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((Interface_Event_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (Interface_Event_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline Interface_Event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline Interface_Event_event_egse_msg_in_systemtm_tm_status1_range_check(Interface_Event_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((Interface_Event_event_egse_msg_in_systemtm_tm_status1_vc == Interface_Event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (Interface_Event_event_egse_msg_in_systemtm_tm_status1_vc == Interface_Event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (Interface_Event_event_egse_msg_in_systemtm_tm_status1_vc == Interface_Event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline Interface_Event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline Interface_Event_event_egse_msg_in_systemtm_tm_status2_range_check(Interface_Event_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((Interface_Event_event_egse_msg_in_systemtm_tm_status2_vc == Interface_Event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (Interface_Event_event_egse_msg_in_systemtm_tm_status2_vc == Interface_Event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (Interface_Event_event_egse_msg_in_systemtm_tm_status2_vc == Interface_Event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline Interface_Event_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    Interface_Event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Interface_Event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Interface_Event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Interface_Event_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    Interface_Event_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Interface_Event_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Interface_Event_event_egse_msg_in_systemtm_PRESENT);
        Interface_Event_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Interface_event_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Interface_Event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline Interface_Event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(Interface_Event_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((Interface_Event_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (Interface_Event_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Interface_Event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline Interface_Event_event_egse_msg_out_systemtc_tc_doReport_range_check(Interface_Event_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((Interface_Event_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (Interface_Event_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline Interface_Event_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Interface_Event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        Interface_Event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        Interface_Event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Interface_Event_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        Interface_Event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Interface_event_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Interface_Event_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    Interface_Event_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Interface_Event_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Interface_Event_event_egse_msg_out_systemtc_PRESENT);
        Interface_Event_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Interface_event_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Interface_Event_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Interface_Event_event_egse_msg_in_PRESENT);
        Interface_Event_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Interface_Event_event_egse_msg_out_PRESENT);
        Interface_Event_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Interface_event_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline Interface_Event_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Interface_Event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline Interface_Event_event_modemanager_msg_in_actuatortm1_tm_range_check(Interface_Event_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((Interface_Event_event_modemanager_msg_in_actuatortm1_tm_vc == Interface_Event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (Interface_Event_event_modemanager_msg_in_actuatortm1_tm_vc == Interface_Event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (Interface_Event_event_modemanager_msg_in_actuatortm1_tm_vc == Interface_Event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline Interface_Event_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    Interface_Event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline Interface_Event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline Interface_Event_event_modemanager_msg_in_actuatortm2_tm_range_check(Interface_Event_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((Interface_Event_event_modemanager_msg_in_actuatortm2_tm_vc == Interface_Event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (Interface_Event_event_modemanager_msg_in_actuatortm2_tm_vc == Interface_Event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (Interface_Event_event_modemanager_msg_in_actuatortm2_tm_vc == Interface_Event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline Interface_Event_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    Interface_Event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline Interface_Event_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline Interface_Event_event_modemanager_msg_in_reading_x_range_check(Interface_Event_event_modemanager_msg_in_reading_x_vc)
{
    assert(((Interface_Event_event_modemanager_msg_in_reading_x_vc >= 0) && (Interface_Event_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline Interface_Event_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    Interface_Event_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline Interface_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline Interface_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(Interface_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((Interface_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (Interface_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Interface_Event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline Interface_Event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(Interface_Event_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((Interface_Event_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (Interface_Event_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline Interface_Event_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Interface_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        Interface_Event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        Interface_Event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Interface_Event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        Interface_Event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Interface_event_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Interface_Event_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    Interface_Event_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Interface_Event_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Interface_Event_event_modemanager_msg_in_input_none_PRESENT);
        Interface_Event_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Interface_Event_event_modemanager_msg_in_actuatortm1_PRESENT);
        Interface_Event_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == Interface_Event_event_modemanager_msg_in_actuatortm2_PRESENT);
        Interface_Event_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == Interface_Event_event_modemanager_msg_in_reading_PRESENT);
        Interface_Event_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == Interface_Event_event_modemanager_msg_in_systemtc_PRESENT);
        Interface_Event_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Interface_event_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Interface_Event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline Interface_Event_event_modemanager_msg_out_actuatortc1_tc_range_check(Interface_Event_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((Interface_Event_event_modemanager_msg_out_actuatortc1_tc_vc == Interface_Event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (Interface_Event_event_modemanager_msg_out_actuatortc1_tc_vc == Interface_Event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (Interface_Event_event_modemanager_msg_out_actuatortc1_tc_vc == Interface_Event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline Interface_Event_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    Interface_Event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline Interface_Event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline Interface_Event_event_modemanager_msg_out_actuatortc2_tc_range_check(Interface_Event_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((Interface_Event_event_modemanager_msg_out_actuatortc2_tc_vc == Interface_Event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (Interface_Event_event_modemanager_msg_out_actuatortc2_tc_vc == Interface_Event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (Interface_Event_event_modemanager_msg_out_actuatortc2_tc_vc == Interface_Event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline Interface_Event_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    Interface_Event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline Interface_Event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline Interface_Event_event_modemanager_msg_out_systemtm_tm_reading_range_check(Interface_Event_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((Interface_Event_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (Interface_Event_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline Interface_Event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline Interface_Event_event_modemanager_msg_out_systemtm_tm_status1_range_check(Interface_Event_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((Interface_Event_event_modemanager_msg_out_systemtm_tm_status1_vc == Interface_Event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (Interface_Event_event_modemanager_msg_out_systemtm_tm_status1_vc == Interface_Event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (Interface_Event_event_modemanager_msg_out_systemtm_tm_status1_vc == Interface_Event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline Interface_Event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Interface_Event_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline Interface_Event_event_modemanager_msg_out_systemtm_tm_status2_range_check(Interface_Event_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((Interface_Event_event_modemanager_msg_out_systemtm_tm_status2_vc == Interface_Event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (Interface_Event_event_modemanager_msg_out_systemtm_tm_status2_vc == Interface_Event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (Interface_Event_event_modemanager_msg_out_systemtm_tm_status2_vc == Interface_Event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline Interface_Event_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    Interface_Event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Interface_Event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Interface_Event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Interface_Event_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    Interface_Event_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Interface_Event_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Interface_Event_event_modemanager_msg_out_actuatortc1_PRESENT);
        Interface_Event_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == Interface_Event_event_modemanager_msg_out_actuatortc2_PRESENT);
        Interface_Event_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == Interface_Event_event_modemanager_msg_out_systemtm_PRESENT);
        Interface_Event_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Interface_event_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Interface_Event_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Interface_Event_event_modemanager_msg_in_PRESENT);
        Interface_Event_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Interface_Event_event_modemanager_msg_out_PRESENT);
        Interface_Event_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Interface_event_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline Interface_Event_event_sensor_assign_value(dst, src)
{
    skip;
}
inline Interface_Event_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Interface_Event_event_actuator1_PRESENT);
        Interface_Event_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == Interface_Event_event_actuator2_PRESENT);
        Interface_Event_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == Interface_Event_event_egse_PRESENT);
        Interface_Event_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == Interface_Event_event_modemanager_PRESENT);
        Interface_Event_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == Interface_Event_event_sensor_PRESENT);
        Interface_Event_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline Interface_event_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline Interface_Event_assign_value(dst, src)
{
    Interface_Event_source_assign_value(dst.source, src.source);
    Interface_Event_dest_assign_value(dst.dest, src.dest);
    Interface_Event_event_assign_value(dst.event, src.event);
}
inline Observable_Event_no_event_assign_value(dst, src)
{
    skip;
}
inline Observable_Event_system_startup_assign_value(dst, src)
{
    skip;
}
inline Observable_Event_input_event_source_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_source_range_check(dst);
}
inline Observable_Event_input_event_source_range_check(Observable_Event_input_event_source_vc)
{
    assert((((((((Observable_Event_input_event_source_vc == Observable_Event_input_event_source_actuator) || (Observable_Event_input_event_source_vc == Observable_Event_input_event_source_actuator1)) || (Observable_Event_input_event_source_vc == Observable_Event_input_event_source_actuator2)) || (Observable_Event_input_event_source_vc == Observable_Event_input_event_source_egse)) || (Observable_Event_input_event_source_vc == Observable_Event_input_event_source_modemanager)) || (Observable_Event_input_event_source_vc == Observable_Event_input_event_source_sensor)) || (Observable_Event_input_event_source_vc == Observable_Event_input_event_source_env)));
}
inline Observable_Event_input_event_dest_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_dest_range_check(dst);
}
inline Observable_Event_input_event_dest_range_check(Observable_Event_input_event_dest_vc)
{
    assert((((((((Observable_Event_input_event_dest_vc == Observable_Event_input_event_dest_actuator) || (Observable_Event_input_event_dest_vc == Observable_Event_input_event_dest_actuator1)) || (Observable_Event_input_event_dest_vc == Observable_Event_input_event_dest_actuator2)) || (Observable_Event_input_event_dest_vc == Observable_Event_input_event_dest_egse)) || (Observable_Event_input_event_dest_vc == Observable_Event_input_event_dest_modemanager)) || (Observable_Event_input_event_dest_vc == Observable_Event_input_event_dest_sensor)) || (Observable_Event_input_event_dest_vc == Observable_Event_input_event_dest_env)));
}
inline Observable_Event_input_event_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Observable_Event_input_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline Observable_Event_input_event_event_actuator1_msg_in_actuatortc_tc_range_check(Observable_Event_input_event_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((Observable_Event_input_event_event_actuator1_msg_in_actuatortc_tc_vc == Observable_Event_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (Observable_Event_input_event_event_actuator1_msg_in_actuatortc_tc_vc == Observable_Event_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (Observable_Event_input_event_event_actuator1_msg_in_actuatortc_tc_vc == Observable_Event_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Observable_Event_input_event_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    Observable_Event_input_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_input_event_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_input_event_event_actuator1_msg_in_input_none_PRESENT);
        Observable_Event_input_event_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Observable_Event_input_event_event_actuator1_msg_in_actuatortc_PRESENT);
        Observable_Event_input_event_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Observable_event_input_event_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_input_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline Observable_Event_input_event_event_actuator1_msg_out_actuatortm_tm_range_check(Observable_Event_input_event_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((Observable_Event_input_event_event_actuator1_msg_out_actuatortm_tm_vc == Observable_Event_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (Observable_Event_input_event_event_actuator1_msg_out_actuatortm_tm_vc == Observable_Event_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (Observable_Event_input_event_event_actuator1_msg_out_actuatortm_tm_vc == Observable_Event_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Observable_Event_input_event_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    Observable_Event_input_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_input_event_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_input_event_event_actuator1_msg_out_actuatortm_PRESENT);
        Observable_Event_input_event_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Observable_event_input_event_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_input_event_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_input_event_event_actuator1_msg_in_PRESENT);
        Observable_Event_input_event_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Observable_Event_input_event_event_actuator1_msg_out_PRESENT);
        Observable_Event_input_event_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Observable_event_input_event_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_input_event_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Observable_Event_input_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline Observable_Event_input_event_event_actuator2_msg_in_actuatortc_tc_range_check(Observable_Event_input_event_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((Observable_Event_input_event_event_actuator2_msg_in_actuatortc_tc_vc == Observable_Event_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (Observable_Event_input_event_event_actuator2_msg_in_actuatortc_tc_vc == Observable_Event_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (Observable_Event_input_event_event_actuator2_msg_in_actuatortc_tc_vc == Observable_Event_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Observable_Event_input_event_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    Observable_Event_input_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_input_event_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_input_event_event_actuator2_msg_in_input_none_PRESENT);
        Observable_Event_input_event_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Observable_Event_input_event_event_actuator2_msg_in_actuatortc_PRESENT);
        Observable_Event_input_event_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Observable_event_input_event_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_input_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline Observable_Event_input_event_event_actuator2_msg_out_actuatortm_tm_range_check(Observable_Event_input_event_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((Observable_Event_input_event_event_actuator2_msg_out_actuatortm_tm_vc == Observable_Event_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (Observable_Event_input_event_event_actuator2_msg_out_actuatortm_tm_vc == Observable_Event_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (Observable_Event_input_event_event_actuator2_msg_out_actuatortm_tm_vc == Observable_Event_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Observable_Event_input_event_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    Observable_Event_input_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_input_event_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_input_event_event_actuator2_msg_out_actuatortm_PRESENT);
        Observable_Event_input_event_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Observable_event_input_event_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_input_event_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_input_event_event_actuator2_msg_in_PRESENT);
        Observable_Event_input_event_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Observable_Event_input_event_event_actuator2_msg_out_PRESENT);
        Observable_Event_input_event_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Observable_event_input_event_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_input_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline Observable_Event_input_event_event_egse_msg_in_systemtm_tm_reading_range_check(Observable_Event_input_event_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((Observable_Event_input_event_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (Observable_Event_input_event_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status1_range_check(Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status1_vc == Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status1_vc == Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status1_vc == Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status2_range_check(Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status2_vc == Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status2_vc == Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status2_vc == Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline Observable_Event_input_event_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    Observable_Event_input_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Observable_Event_input_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Observable_Event_input_event_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    Observable_Event_input_event_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_input_event_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_input_event_event_egse_msg_in_systemtm_PRESENT);
        Observable_Event_input_event_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Observable_event_input_event_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Observable_Event_input_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline Observable_Event_input_event_event_egse_msg_out_systemtc_tc_doReport_range_check(Observable_Event_input_event_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((Observable_Event_input_event_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (Observable_Event_input_event_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline Observable_Event_input_event_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        Observable_Event_input_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Observable_Event_input_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        Observable_Event_input_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Observable_event_input_event_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_input_event_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    Observable_Event_input_event_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_input_event_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_input_event_event_egse_msg_out_systemtc_PRESENT);
        Observable_Event_input_event_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Observable_event_input_event_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_input_event_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_input_event_event_egse_msg_in_PRESENT);
        Observable_Event_input_event_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Observable_Event_input_event_event_egse_msg_out_PRESENT);
        Observable_Event_input_event_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Observable_event_input_event_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_input_event_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_tm_range_check(Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_tm_vc == Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_tm_vc == Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_tm_vc == Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_tm_range_check(Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_tm_vc == Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_tm_vc == Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_tm_vc == Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_input_event_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline Observable_Event_input_event_event_modemanager_msg_in_reading_x_range_check(Observable_Event_input_event_event_modemanager_msg_in_reading_x_vc)
{
    assert(((Observable_Event_input_event_event_modemanager_msg_in_reading_x_vc >= 0) && (Observable_Event_input_event_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline Observable_Event_input_event_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    Observable_Event_input_event_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Observable_event_input_event_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_input_event_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    Observable_Event_input_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_input_event_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_input_event_event_modemanager_msg_in_input_none_PRESENT);
        Observable_Event_input_event_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_PRESENT);
        Observable_Event_input_event_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_PRESENT);
        Observable_Event_input_event_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == Observable_Event_input_event_event_modemanager_msg_in_reading_PRESENT);
        Observable_Event_input_event_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == Observable_Event_input_event_event_modemanager_msg_in_systemtc_PRESENT);
        Observable_Event_input_event_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Observable_event_input_event_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_tc_range_check(Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_tc_vc == Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_tc_vc == Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_tc_vc == Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_tc_range_check(Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_tc_vc == Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_tc_vc == Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_tc_vc == Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc == Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc == Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc == Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc == Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc == Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc == Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Observable_Event_input_event_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    Observable_Event_input_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_input_event_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_PRESENT);
        Observable_Event_input_event_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_PRESENT);
        Observable_Event_input_event_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == Observable_Event_input_event_event_modemanager_msg_out_systemtm_PRESENT);
        Observable_Event_input_event_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Observable_event_input_event_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_input_event_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_input_event_event_modemanager_msg_in_PRESENT);
        Observable_Event_input_event_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Observable_Event_input_event_event_modemanager_msg_out_PRESENT);
        Observable_Event_input_event_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Observable_event_input_event_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_input_event_event_sensor_assign_value(dst, src)
{
    skip;
}
inline Observable_Event_input_event_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_input_event_event_actuator1_PRESENT);
        Observable_Event_input_event_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == Observable_Event_input_event_event_actuator2_PRESENT);
        Observable_Event_input_event_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == Observable_Event_input_event_event_egse_PRESENT);
        Observable_Event_input_event_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == Observable_Event_input_event_event_modemanager_PRESENT);
        Observable_Event_input_event_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == Observable_Event_input_event_event_sensor_PRESENT);
        Observable_Event_input_event_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline Observable_event_input_event_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_input_event_assign_value(dst, src)
{
    Observable_Event_input_event_source_assign_value(dst.source, src.source);
    Observable_Event_input_event_dest_assign_value(dst.dest, src.dest);
    Observable_Event_input_event_event_assign_value(dst.event, src.event);
}
inline Observable_Event_output_event_source_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_source_range_check(dst);
}
inline Observable_Event_output_event_source_range_check(Observable_Event_output_event_source_vc)
{
    assert((((((((Observable_Event_output_event_source_vc == Observable_Event_output_event_source_actuator) || (Observable_Event_output_event_source_vc == Observable_Event_output_event_source_actuator1)) || (Observable_Event_output_event_source_vc == Observable_Event_output_event_source_actuator2)) || (Observable_Event_output_event_source_vc == Observable_Event_output_event_source_egse)) || (Observable_Event_output_event_source_vc == Observable_Event_output_event_source_modemanager)) || (Observable_Event_output_event_source_vc == Observable_Event_output_event_source_sensor)) || (Observable_Event_output_event_source_vc == Observable_Event_output_event_source_env)));
}
inline Observable_Event_output_event_dest_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_dest_range_check(dst);
}
inline Observable_Event_output_event_dest_range_check(Observable_Event_output_event_dest_vc)
{
    assert((((((((Observable_Event_output_event_dest_vc == Observable_Event_output_event_dest_actuator) || (Observable_Event_output_event_dest_vc == Observable_Event_output_event_dest_actuator1)) || (Observable_Event_output_event_dest_vc == Observable_Event_output_event_dest_actuator2)) || (Observable_Event_output_event_dest_vc == Observable_Event_output_event_dest_egse)) || (Observable_Event_output_event_dest_vc == Observable_Event_output_event_dest_modemanager)) || (Observable_Event_output_event_dest_vc == Observable_Event_output_event_dest_sensor)) || (Observable_Event_output_event_dest_vc == Observable_Event_output_event_dest_env)));
}
inline Observable_Event_output_event_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Observable_Event_output_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline Observable_Event_output_event_event_actuator1_msg_in_actuatortc_tc_range_check(Observable_Event_output_event_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((Observable_Event_output_event_event_actuator1_msg_in_actuatortc_tc_vc == Observable_Event_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (Observable_Event_output_event_event_actuator1_msg_in_actuatortc_tc_vc == Observable_Event_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (Observable_Event_output_event_event_actuator1_msg_in_actuatortc_tc_vc == Observable_Event_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Observable_Event_output_event_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    Observable_Event_output_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_output_event_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_output_event_event_actuator1_msg_in_input_none_PRESENT);
        Observable_Event_output_event_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Observable_Event_output_event_event_actuator1_msg_in_actuatortc_PRESENT);
        Observable_Event_output_event_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Observable_event_output_event_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_output_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline Observable_Event_output_event_event_actuator1_msg_out_actuatortm_tm_range_check(Observable_Event_output_event_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((Observable_Event_output_event_event_actuator1_msg_out_actuatortm_tm_vc == Observable_Event_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (Observable_Event_output_event_event_actuator1_msg_out_actuatortm_tm_vc == Observable_Event_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (Observable_Event_output_event_event_actuator1_msg_out_actuatortm_tm_vc == Observable_Event_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Observable_Event_output_event_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    Observable_Event_output_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_output_event_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_output_event_event_actuator1_msg_out_actuatortm_PRESENT);
        Observable_Event_output_event_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Observable_event_output_event_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_output_event_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_output_event_event_actuator1_msg_in_PRESENT);
        Observable_Event_output_event_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Observable_Event_output_event_event_actuator1_msg_out_PRESENT);
        Observable_Event_output_event_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Observable_event_output_event_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_output_event_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Observable_Event_output_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline Observable_Event_output_event_event_actuator2_msg_in_actuatortc_tc_range_check(Observable_Event_output_event_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((Observable_Event_output_event_event_actuator2_msg_in_actuatortc_tc_vc == Observable_Event_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (Observable_Event_output_event_event_actuator2_msg_in_actuatortc_tc_vc == Observable_Event_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (Observable_Event_output_event_event_actuator2_msg_in_actuatortc_tc_vc == Observable_Event_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Observable_Event_output_event_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    Observable_Event_output_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_output_event_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_output_event_event_actuator2_msg_in_input_none_PRESENT);
        Observable_Event_output_event_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Observable_Event_output_event_event_actuator2_msg_in_actuatortc_PRESENT);
        Observable_Event_output_event_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Observable_event_output_event_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_output_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline Observable_Event_output_event_event_actuator2_msg_out_actuatortm_tm_range_check(Observable_Event_output_event_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((Observable_Event_output_event_event_actuator2_msg_out_actuatortm_tm_vc == Observable_Event_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (Observable_Event_output_event_event_actuator2_msg_out_actuatortm_tm_vc == Observable_Event_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (Observable_Event_output_event_event_actuator2_msg_out_actuatortm_tm_vc == Observable_Event_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Observable_Event_output_event_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    Observable_Event_output_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_output_event_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_output_event_event_actuator2_msg_out_actuatortm_PRESENT);
        Observable_Event_output_event_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Observable_event_output_event_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_output_event_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_output_event_event_actuator2_msg_in_PRESENT);
        Observable_Event_output_event_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Observable_Event_output_event_event_actuator2_msg_out_PRESENT);
        Observable_Event_output_event_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Observable_event_output_event_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_output_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline Observable_Event_output_event_event_egse_msg_in_systemtm_tm_reading_range_check(Observable_Event_output_event_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((Observable_Event_output_event_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (Observable_Event_output_event_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status1_range_check(Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status1_vc == Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status1_vc == Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status1_vc == Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status2_range_check(Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status2_vc == Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status2_vc == Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status2_vc == Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline Observable_Event_output_event_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    Observable_Event_output_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Observable_Event_output_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Observable_Event_output_event_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    Observable_Event_output_event_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_output_event_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_output_event_event_egse_msg_in_systemtm_PRESENT);
        Observable_Event_output_event_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Observable_event_output_event_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Observable_Event_output_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline Observable_Event_output_event_event_egse_msg_out_systemtc_tc_doReport_range_check(Observable_Event_output_event_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((Observable_Event_output_event_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (Observable_Event_output_event_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline Observable_Event_output_event_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        Observable_Event_output_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Observable_Event_output_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        Observable_Event_output_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Observable_event_output_event_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_output_event_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    Observable_Event_output_event_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_output_event_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_output_event_event_egse_msg_out_systemtc_PRESENT);
        Observable_Event_output_event_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Observable_event_output_event_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_output_event_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_output_event_event_egse_msg_in_PRESENT);
        Observable_Event_output_event_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Observable_Event_output_event_event_egse_msg_out_PRESENT);
        Observable_Event_output_event_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Observable_event_output_event_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_output_event_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_tm_range_check(Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_tm_vc == Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_tm_vc == Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_tm_vc == Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_tm_range_check(Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_tm_vc == Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_tm_vc == Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_tm_vc == Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_output_event_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline Observable_Event_output_event_event_modemanager_msg_in_reading_x_range_check(Observable_Event_output_event_event_modemanager_msg_in_reading_x_vc)
{
    assert(((Observable_Event_output_event_event_modemanager_msg_in_reading_x_vc >= 0) && (Observable_Event_output_event_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline Observable_Event_output_event_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    Observable_Event_output_event_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Observable_event_output_event_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_output_event_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    Observable_Event_output_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_output_event_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_output_event_event_modemanager_msg_in_input_none_PRESENT);
        Observable_Event_output_event_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_PRESENT);
        Observable_Event_output_event_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_PRESENT);
        Observable_Event_output_event_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == Observable_Event_output_event_event_modemanager_msg_in_reading_PRESENT);
        Observable_Event_output_event_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == Observable_Event_output_event_event_modemanager_msg_in_systemtc_PRESENT);
        Observable_Event_output_event_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Observable_event_output_event_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_tc_range_check(Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_tc_vc == Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_tc_vc == Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_tc_vc == Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_tc_range_check(Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_tc_vc == Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_tc_vc == Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_tc_vc == Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc == Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc == Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc == Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc == Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc == Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc == Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Observable_Event_output_event_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    Observable_Event_output_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_output_event_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_PRESENT);
        Observable_Event_output_event_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_PRESENT);
        Observable_Event_output_event_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == Observable_Event_output_event_event_modemanager_msg_out_systemtm_PRESENT);
        Observable_Event_output_event_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Observable_event_output_event_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_output_event_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_output_event_event_modemanager_msg_in_PRESENT);
        Observable_Event_output_event_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Observable_Event_output_event_event_modemanager_msg_out_PRESENT);
        Observable_Event_output_event_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Observable_event_output_event_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_output_event_event_sensor_assign_value(dst, src)
{
    skip;
}
inline Observable_Event_output_event_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_output_event_event_actuator1_PRESENT);
        Observable_Event_output_event_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == Observable_Event_output_event_event_actuator2_PRESENT);
        Observable_Event_output_event_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == Observable_Event_output_event_event_egse_PRESENT);
        Observable_Event_output_event_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == Observable_Event_output_event_event_modemanager_PRESENT);
        Observable_Event_output_event_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == Observable_Event_output_event_event_sensor_PRESENT);
        Observable_Event_output_event_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline Observable_event_output_event_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_output_event_assign_value(dst, src)
{
    Observable_Event_output_event_source_assign_value(dst.source, src.source);
    Observable_Event_output_event_dest_assign_value(dst.dest, src.dest);
    Observable_Event_output_event_event_assign_value(dst.event, src.event);
}
inline Observable_Event_unhandled_input_source_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_source_range_check(dst);
}
inline Observable_Event_unhandled_input_source_range_check(Observable_Event_unhandled_input_source_vc)
{
    assert((((((((Observable_Event_unhandled_input_source_vc == Observable_Event_unhandled_input_source_actuator) || (Observable_Event_unhandled_input_source_vc == Observable_Event_unhandled_input_source_actuator1)) || (Observable_Event_unhandled_input_source_vc == Observable_Event_unhandled_input_source_actuator2)) || (Observable_Event_unhandled_input_source_vc == Observable_Event_unhandled_input_source_egse)) || (Observable_Event_unhandled_input_source_vc == Observable_Event_unhandled_input_source_modemanager)) || (Observable_Event_unhandled_input_source_vc == Observable_Event_unhandled_input_source_sensor)) || (Observable_Event_unhandled_input_source_vc == Observable_Event_unhandled_input_source_env)));
}
inline Observable_Event_unhandled_input_dest_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_dest_range_check(dst);
}
inline Observable_Event_unhandled_input_dest_range_check(Observable_Event_unhandled_input_dest_vc)
{
    assert((((((((Observable_Event_unhandled_input_dest_vc == Observable_Event_unhandled_input_dest_actuator) || (Observable_Event_unhandled_input_dest_vc == Observable_Event_unhandled_input_dest_actuator1)) || (Observable_Event_unhandled_input_dest_vc == Observable_Event_unhandled_input_dest_actuator2)) || (Observable_Event_unhandled_input_dest_vc == Observable_Event_unhandled_input_dest_egse)) || (Observable_Event_unhandled_input_dest_vc == Observable_Event_unhandled_input_dest_modemanager)) || (Observable_Event_unhandled_input_dest_vc == Observable_Event_unhandled_input_dest_sensor)) || (Observable_Event_unhandled_input_dest_vc == Observable_Event_unhandled_input_dest_env)));
}
inline Observable_Event_unhandled_input_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_tc_range_check(Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc == Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc == Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc == Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_unhandled_input_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_unhandled_input_event_actuator1_msg_in_input_none_PRESENT);
        Observable_Event_unhandled_input_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_PRESENT);
        Observable_Event_unhandled_input_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Observable_event_unhandled_input_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_tm_range_check(Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc == Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc == Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc == Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_unhandled_input_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_PRESENT);
        Observable_Event_unhandled_input_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Observable_event_unhandled_input_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_unhandled_input_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_unhandled_input_event_actuator1_msg_in_PRESENT);
        Observable_Event_unhandled_input_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Observable_Event_unhandled_input_event_actuator1_msg_out_PRESENT);
        Observable_Event_unhandled_input_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Observable_event_unhandled_input_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_unhandled_input_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_tc_range_check(Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc == Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc == Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc == Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_unhandled_input_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_unhandled_input_event_actuator2_msg_in_input_none_PRESENT);
        Observable_Event_unhandled_input_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_PRESENT);
        Observable_Event_unhandled_input_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Observable_event_unhandled_input_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_tm_range_check(Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc == Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc == Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc == Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_unhandled_input_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_PRESENT);
        Observable_Event_unhandled_input_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Observable_event_unhandled_input_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_unhandled_input_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_unhandled_input_event_actuator2_msg_in_PRESENT);
        Observable_Event_unhandled_input_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Observable_Event_unhandled_input_event_actuator2_msg_out_PRESENT);
        Observable_Event_unhandled_input_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Observable_event_unhandled_input_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_reading_range_check(Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status1_range_check(Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc == Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc == Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc == Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status2_range_check(Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc == Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc == Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc == Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Observable_Event_unhandled_input_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_unhandled_input_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_unhandled_input_event_egse_msg_in_systemtm_PRESENT);
        Observable_Event_unhandled_input_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Observable_event_unhandled_input_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_range_check(Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_range_check(Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Observable_event_unhandled_input_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_unhandled_input_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_unhandled_input_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_unhandled_input_event_egse_msg_out_systemtc_PRESENT);
        Observable_Event_unhandled_input_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Observable_event_unhandled_input_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_unhandled_input_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_unhandled_input_event_egse_msg_in_PRESENT);
        Observable_Event_unhandled_input_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Observable_Event_unhandled_input_event_egse_msg_out_PRESENT);
        Observable_Event_unhandled_input_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Observable_event_unhandled_input_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_range_check(Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc == Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc == Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc == Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_range_check(Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc == Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc == Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc == Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_reading_x_range_check(Observable_Event_unhandled_input_event_modemanager_msg_in_reading_x_vc)
{
    assert(((Observable_Event_unhandled_input_event_modemanager_msg_in_reading_x_vc >= 0) && (Observable_Event_unhandled_input_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_range_check(Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Observable_event_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_unhandled_input_event_modemanager_msg_in_input_none_PRESENT);
        Observable_Event_unhandled_input_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_PRESENT);
        Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_PRESENT);
        Observable_Event_unhandled_input_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == Observable_Event_unhandled_input_event_modemanager_msg_in_reading_PRESENT);
        Observable_Event_unhandled_input_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_PRESENT);
        Observable_Event_unhandled_input_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Observable_event_unhandled_input_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_range_check(Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc == Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc == Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc == Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_range_check(Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc == Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc == Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc == Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_range_check(Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_range_check(Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc == Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc == Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc == Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_range_check(Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc == Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc == Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc == Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Observable_Event_unhandled_input_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_PRESENT);
        Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_PRESENT);
        Observable_Event_unhandled_input_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_PRESENT);
        Observable_Event_unhandled_input_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Observable_event_unhandled_input_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_unhandled_input_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_unhandled_input_event_modemanager_msg_in_PRESENT);
        Observable_Event_unhandled_input_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Observable_Event_unhandled_input_event_modemanager_msg_out_PRESENT);
        Observable_Event_unhandled_input_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Observable_event_unhandled_input_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_unhandled_input_event_sensor_assign_value(dst, src)
{
    skip;
}
inline Observable_Event_unhandled_input_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_unhandled_input_event_actuator1_PRESENT);
        Observable_Event_unhandled_input_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == Observable_Event_unhandled_input_event_actuator2_PRESENT);
        Observable_Event_unhandled_input_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == Observable_Event_unhandled_input_event_egse_PRESENT);
        Observable_Event_unhandled_input_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == Observable_Event_unhandled_input_event_modemanager_PRESENT);
        Observable_Event_unhandled_input_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == Observable_Event_unhandled_input_event_sensor_PRESENT);
        Observable_Event_unhandled_input_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline Observable_event_unhandled_input_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline Observable_Event_unhandled_input_assign_value(dst, src)
{
    Observable_Event_unhandled_input_source_assign_value(dst.source, src.source);
    Observable_Event_unhandled_input_dest_assign_value(dst.dest, src.dest);
    Observable_Event_unhandled_input_event_assign_value(dst.event, src.event);
}
inline Observable_Event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Observable_Event_no_event_PRESENT);
        Observable_Event_no_event_assign_value(dst.data.no_event, src.data.no_event);
    ::  (dst.selection == Observable_Event_system_startup_PRESENT);
        Observable_Event_system_startup_assign_value(dst.data.system_startup, src.data.system_startup);
    ::  (dst.selection == Observable_Event_input_event_PRESENT);
        Observable_Event_input_event_assign_value(dst.data.input_event, src.data.input_event);
    ::  (dst.selection == Observable_Event_output_event_PRESENT);
        Observable_Event_output_event_assign_value(dst.data.output_event, src.data.output_event);
    ::  (dst.selection == Observable_Event_unhandled_input_PRESENT);
        Observable_Event_unhandled_input_assign_value(dst.data.unhandled_input, src.data.unhandled_input);
    ::  else;
        skip;
    fi;
}
inline Observable_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_no_event_assign_value(dst, src)
{
    skip;
}
inline Events_Ty_elem_system_startup_assign_value(dst, src)
{
    skip;
}
inline Events_Ty_elem_input_event_source_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_source_range_check(dst);
}
inline Events_Ty_elem_input_event_source_range_check(Events_Ty_elem_input_event_source_vc)
{
    assert((((((((Events_Ty_elem_input_event_source_vc == Events_Ty_elem_input_event_source_actuator) || (Events_Ty_elem_input_event_source_vc == Events_Ty_elem_input_event_source_actuator1)) || (Events_Ty_elem_input_event_source_vc == Events_Ty_elem_input_event_source_actuator2)) || (Events_Ty_elem_input_event_source_vc == Events_Ty_elem_input_event_source_egse)) || (Events_Ty_elem_input_event_source_vc == Events_Ty_elem_input_event_source_modemanager)) || (Events_Ty_elem_input_event_source_vc == Events_Ty_elem_input_event_source_sensor)) || (Events_Ty_elem_input_event_source_vc == Events_Ty_elem_input_event_source_env)));
}
inline Events_Ty_elem_input_event_dest_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_dest_range_check(dst);
}
inline Events_Ty_elem_input_event_dest_range_check(Events_Ty_elem_input_event_dest_vc)
{
    assert((((((((Events_Ty_elem_input_event_dest_vc == Events_Ty_elem_input_event_dest_actuator) || (Events_Ty_elem_input_event_dest_vc == Events_Ty_elem_input_event_dest_actuator1)) || (Events_Ty_elem_input_event_dest_vc == Events_Ty_elem_input_event_dest_actuator2)) || (Events_Ty_elem_input_event_dest_vc == Events_Ty_elem_input_event_dest_egse)) || (Events_Ty_elem_input_event_dest_vc == Events_Ty_elem_input_event_dest_modemanager)) || (Events_Ty_elem_input_event_dest_vc == Events_Ty_elem_input_event_dest_sensor)) || (Events_Ty_elem_input_event_dest_vc == Events_Ty_elem_input_event_dest_env)));
}
inline Events_Ty_elem_input_event_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_tc_range_check(Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_tc_vc == Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_tc_vc == Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_tc_vc == Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_input_event_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_input_event_event_actuator1_msg_in_input_none_PRESENT);
        Events_Ty_elem_input_event_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_PRESENT);
        Events_Ty_elem_input_event_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_input_event_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_tm_range_check(Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_tm_vc == Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_tm_vc == Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_tm_vc == Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_input_event_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_PRESENT);
        Events_Ty_elem_input_event_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_input_event_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_input_event_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_input_event_event_actuator1_msg_in_PRESENT);
        Events_Ty_elem_input_event_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Events_Ty_elem_input_event_event_actuator1_msg_out_PRESENT);
        Events_Ty_elem_input_event_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_input_event_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_input_event_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_tc_range_check(Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_tc_vc == Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_tc_vc == Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_tc_vc == Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_input_event_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_input_event_event_actuator2_msg_in_input_none_PRESENT);
        Events_Ty_elem_input_event_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_PRESENT);
        Events_Ty_elem_input_event_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_input_event_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_tm_range_check(Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_tm_vc == Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_tm_vc == Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_tm_vc == Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_input_event_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_PRESENT);
        Events_Ty_elem_input_event_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_input_event_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_input_event_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_input_event_event_actuator2_msg_in_PRESENT);
        Events_Ty_elem_input_event_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Events_Ty_elem_input_event_event_actuator2_msg_out_PRESENT);
        Events_Ty_elem_input_event_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_input_event_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_reading_range_check(Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status1_range_check(Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status1_vc == Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status1_vc == Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status1_vc == Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status2_range_check(Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status2_vc == Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status2_vc == Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status2_vc == Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Events_Ty_elem_input_event_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_input_event_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_input_event_event_egse_msg_in_systemtm_PRESENT);
        Events_Ty_elem_input_event_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_input_event_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_range_check(Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_input_event_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_input_event_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_input_event_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_input_event_event_egse_msg_out_systemtc_PRESENT);
        Events_Ty_elem_input_event_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_input_event_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_input_event_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_input_event_event_egse_msg_in_PRESENT);
        Events_Ty_elem_input_event_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Events_Ty_elem_input_event_event_egse_msg_out_PRESENT);
        Events_Ty_elem_input_event_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_input_event_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_range_check(Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_vc == Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_vc == Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_vc == Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_range_check(Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_vc == Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_vc == Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_vc == Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_reading_x_range_check(Events_Ty_elem_input_event_event_modemanager_msg_in_reading_x_vc)
{
    assert(((Events_Ty_elem_input_event_event_modemanager_msg_in_reading_x_vc >= 0) && (Events_Ty_elem_input_event_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_input_event_event_modemanager_msg_in_input_none_PRESENT);
        Events_Ty_elem_input_event_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_PRESENT);
        Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_PRESENT);
        Events_Ty_elem_input_event_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == Events_Ty_elem_input_event_event_modemanager_msg_in_reading_PRESENT);
        Events_Ty_elem_input_event_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_PRESENT);
        Events_Ty_elem_input_event_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_input_event_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_range_check(Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_vc == Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_vc == Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_vc == Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_range_check(Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_vc == Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_vc == Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_vc == Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc == Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc == Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc == Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc == Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc == Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc == Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_input_event_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_PRESENT);
        Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_PRESENT);
        Events_Ty_elem_input_event_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_PRESENT);
        Events_Ty_elem_input_event_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_input_event_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_input_event_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_input_event_event_modemanager_msg_in_PRESENT);
        Events_Ty_elem_input_event_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Events_Ty_elem_input_event_event_modemanager_msg_out_PRESENT);
        Events_Ty_elem_input_event_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_input_event_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_input_event_event_sensor_assign_value(dst, src)
{
    skip;
}
inline Events_Ty_elem_input_event_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_input_event_event_actuator1_PRESENT);
        Events_Ty_elem_input_event_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == Events_Ty_elem_input_event_event_actuator2_PRESENT);
        Events_Ty_elem_input_event_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == Events_Ty_elem_input_event_event_egse_PRESENT);
        Events_Ty_elem_input_event_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == Events_Ty_elem_input_event_event_modemanager_PRESENT);
        Events_Ty_elem_input_event_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == Events_Ty_elem_input_event_event_sensor_PRESENT);
        Events_Ty_elem_input_event_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_input_event_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_input_event_assign_value(dst, src)
{
    Events_Ty_elem_input_event_source_assign_value(dst.source, src.source);
    Events_Ty_elem_input_event_dest_assign_value(dst.dest, src.dest);
    Events_Ty_elem_input_event_event_assign_value(dst.event, src.event);
}
inline Events_Ty_elem_output_event_source_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_source_range_check(dst);
}
inline Events_Ty_elem_output_event_source_range_check(Events_Ty_elem_output_event_source_vc)
{
    assert((((((((Events_Ty_elem_output_event_source_vc == Events_Ty_elem_output_event_source_actuator) || (Events_Ty_elem_output_event_source_vc == Events_Ty_elem_output_event_source_actuator1)) || (Events_Ty_elem_output_event_source_vc == Events_Ty_elem_output_event_source_actuator2)) || (Events_Ty_elem_output_event_source_vc == Events_Ty_elem_output_event_source_egse)) || (Events_Ty_elem_output_event_source_vc == Events_Ty_elem_output_event_source_modemanager)) || (Events_Ty_elem_output_event_source_vc == Events_Ty_elem_output_event_source_sensor)) || (Events_Ty_elem_output_event_source_vc == Events_Ty_elem_output_event_source_env)));
}
inline Events_Ty_elem_output_event_dest_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_dest_range_check(dst);
}
inline Events_Ty_elem_output_event_dest_range_check(Events_Ty_elem_output_event_dest_vc)
{
    assert((((((((Events_Ty_elem_output_event_dest_vc == Events_Ty_elem_output_event_dest_actuator) || (Events_Ty_elem_output_event_dest_vc == Events_Ty_elem_output_event_dest_actuator1)) || (Events_Ty_elem_output_event_dest_vc == Events_Ty_elem_output_event_dest_actuator2)) || (Events_Ty_elem_output_event_dest_vc == Events_Ty_elem_output_event_dest_egse)) || (Events_Ty_elem_output_event_dest_vc == Events_Ty_elem_output_event_dest_modemanager)) || (Events_Ty_elem_output_event_dest_vc == Events_Ty_elem_output_event_dest_sensor)) || (Events_Ty_elem_output_event_dest_vc == Events_Ty_elem_output_event_dest_env)));
}
inline Events_Ty_elem_output_event_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_tc_range_check(Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_tc_vc == Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_tc_vc == Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_tc_vc == Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_output_event_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_output_event_event_actuator1_msg_in_input_none_PRESENT);
        Events_Ty_elem_output_event_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_PRESENT);
        Events_Ty_elem_output_event_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_output_event_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_tm_range_check(Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_tm_vc == Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_tm_vc == Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_tm_vc == Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_output_event_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_PRESENT);
        Events_Ty_elem_output_event_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_output_event_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_output_event_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_output_event_event_actuator1_msg_in_PRESENT);
        Events_Ty_elem_output_event_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Events_Ty_elem_output_event_event_actuator1_msg_out_PRESENT);
        Events_Ty_elem_output_event_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_output_event_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_output_event_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_tc_range_check(Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_tc_vc == Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_tc_vc == Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_tc_vc == Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_output_event_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_output_event_event_actuator2_msg_in_input_none_PRESENT);
        Events_Ty_elem_output_event_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_PRESENT);
        Events_Ty_elem_output_event_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_output_event_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_tm_range_check(Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_tm_vc == Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_tm_vc == Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_tm_vc == Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_output_event_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_PRESENT);
        Events_Ty_elem_output_event_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_output_event_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_output_event_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_output_event_event_actuator2_msg_in_PRESENT);
        Events_Ty_elem_output_event_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Events_Ty_elem_output_event_event_actuator2_msg_out_PRESENT);
        Events_Ty_elem_output_event_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_output_event_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_reading_range_check(Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status1_range_check(Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status1_vc == Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status1_vc == Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status1_vc == Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status2_range_check(Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status2_vc == Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status2_vc == Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status2_vc == Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Events_Ty_elem_output_event_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_output_event_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_output_event_event_egse_msg_in_systemtm_PRESENT);
        Events_Ty_elem_output_event_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_output_event_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_range_check(Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_output_event_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_output_event_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_output_event_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_output_event_event_egse_msg_out_systemtc_PRESENT);
        Events_Ty_elem_output_event_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_output_event_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_output_event_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_output_event_event_egse_msg_in_PRESENT);
        Events_Ty_elem_output_event_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Events_Ty_elem_output_event_event_egse_msg_out_PRESENT);
        Events_Ty_elem_output_event_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_output_event_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_range_check(Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_vc == Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_vc == Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_vc == Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_range_check(Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_vc == Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_vc == Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_vc == Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_reading_x_range_check(Events_Ty_elem_output_event_event_modemanager_msg_in_reading_x_vc)
{
    assert(((Events_Ty_elem_output_event_event_modemanager_msg_in_reading_x_vc >= 0) && (Events_Ty_elem_output_event_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_output_event_event_modemanager_msg_in_input_none_PRESENT);
        Events_Ty_elem_output_event_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_PRESENT);
        Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_PRESENT);
        Events_Ty_elem_output_event_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == Events_Ty_elem_output_event_event_modemanager_msg_in_reading_PRESENT);
        Events_Ty_elem_output_event_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_PRESENT);
        Events_Ty_elem_output_event_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_output_event_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_range_check(Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_vc == Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_vc == Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_vc == Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_range_check(Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_vc == Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_vc == Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_vc == Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc == Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc == Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc == Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc == Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc == Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc == Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_output_event_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_PRESENT);
        Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_PRESENT);
        Events_Ty_elem_output_event_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_PRESENT);
        Events_Ty_elem_output_event_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_output_event_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_output_event_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_output_event_event_modemanager_msg_in_PRESENT);
        Events_Ty_elem_output_event_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Events_Ty_elem_output_event_event_modemanager_msg_out_PRESENT);
        Events_Ty_elem_output_event_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_output_event_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_output_event_event_sensor_assign_value(dst, src)
{
    skip;
}
inline Events_Ty_elem_output_event_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_output_event_event_actuator1_PRESENT);
        Events_Ty_elem_output_event_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == Events_Ty_elem_output_event_event_actuator2_PRESENT);
        Events_Ty_elem_output_event_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == Events_Ty_elem_output_event_event_egse_PRESENT);
        Events_Ty_elem_output_event_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == Events_Ty_elem_output_event_event_modemanager_PRESENT);
        Events_Ty_elem_output_event_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == Events_Ty_elem_output_event_event_sensor_PRESENT);
        Events_Ty_elem_output_event_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_output_event_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_output_event_assign_value(dst, src)
{
    Events_Ty_elem_output_event_source_assign_value(dst.source, src.source);
    Events_Ty_elem_output_event_dest_assign_value(dst.dest, src.dest);
    Events_Ty_elem_output_event_event_assign_value(dst.event, src.event);
}
inline Events_Ty_elem_unhandled_input_source_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_source_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_source_range_check(Events_Ty_elem_unhandled_input_source_vc)
{
    assert((((((((Events_Ty_elem_unhandled_input_source_vc == Events_Ty_elem_unhandled_input_source_actuator) || (Events_Ty_elem_unhandled_input_source_vc == Events_Ty_elem_unhandled_input_source_actuator1)) || (Events_Ty_elem_unhandled_input_source_vc == Events_Ty_elem_unhandled_input_source_actuator2)) || (Events_Ty_elem_unhandled_input_source_vc == Events_Ty_elem_unhandled_input_source_egse)) || (Events_Ty_elem_unhandled_input_source_vc == Events_Ty_elem_unhandled_input_source_modemanager)) || (Events_Ty_elem_unhandled_input_source_vc == Events_Ty_elem_unhandled_input_source_sensor)) || (Events_Ty_elem_unhandled_input_source_vc == Events_Ty_elem_unhandled_input_source_env)));
}
inline Events_Ty_elem_unhandled_input_dest_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_dest_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_dest_range_check(Events_Ty_elem_unhandled_input_dest_vc)
{
    assert((((((((Events_Ty_elem_unhandled_input_dest_vc == Events_Ty_elem_unhandled_input_dest_actuator) || (Events_Ty_elem_unhandled_input_dest_vc == Events_Ty_elem_unhandled_input_dest_actuator1)) || (Events_Ty_elem_unhandled_input_dest_vc == Events_Ty_elem_unhandled_input_dest_actuator2)) || (Events_Ty_elem_unhandled_input_dest_vc == Events_Ty_elem_unhandled_input_dest_egse)) || (Events_Ty_elem_unhandled_input_dest_vc == Events_Ty_elem_unhandled_input_dest_modemanager)) || (Events_Ty_elem_unhandled_input_dest_vc == Events_Ty_elem_unhandled_input_dest_sensor)) || (Events_Ty_elem_unhandled_input_dest_vc == Events_Ty_elem_unhandled_input_dest_env)));
}
inline Events_Ty_elem_unhandled_input_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_range_check(Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc == Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc == Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc == Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_unhandled_input_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_actuator1_msg_in_input_none_PRESENT);
        Events_Ty_elem_unhandled_input_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_PRESENT);
        Events_Ty_elem_unhandled_input_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_unhandled_input_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_range_check(Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc == Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc == Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc == Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_unhandled_input_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_PRESENT);
        Events_Ty_elem_unhandled_input_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_unhandled_input_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_unhandled_input_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_actuator1_msg_in_PRESENT);
        Events_Ty_elem_unhandled_input_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_actuator1_msg_out_PRESENT);
        Events_Ty_elem_unhandled_input_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_unhandled_input_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_unhandled_input_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_range_check(Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc == Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc == Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc == Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_unhandled_input_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_actuator2_msg_in_input_none_PRESENT);
        Events_Ty_elem_unhandled_input_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_PRESENT);
        Events_Ty_elem_unhandled_input_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_unhandled_input_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_range_check(Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc == Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc == Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc == Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_unhandled_input_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_PRESENT);
        Events_Ty_elem_unhandled_input_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_unhandled_input_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_unhandled_input_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_actuator2_msg_in_PRESENT);
        Events_Ty_elem_unhandled_input_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_actuator2_msg_out_PRESENT);
        Events_Ty_elem_unhandled_input_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_unhandled_input_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_range_check(Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_range_check(Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc == Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc == Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc == Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_range_check(Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc == Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc == Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc == Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_PRESENT);
        Events_Ty_elem_unhandled_input_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_unhandled_input_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_range_check(Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_range_check(Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_unhandled_input_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_PRESENT);
        Events_Ty_elem_unhandled_input_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_unhandled_input_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_unhandled_input_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_egse_msg_in_PRESENT);
        Events_Ty_elem_unhandled_input_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_egse_msg_out_PRESENT);
        Events_Ty_elem_unhandled_input_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_unhandled_input_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_range_check(Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_range_check(Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_reading_x_range_check(Events_Ty_elem_unhandled_input_event_modemanager_msg_in_reading_x_vc)
{
    assert(((Events_Ty_elem_unhandled_input_event_modemanager_msg_in_reading_x_vc >= 0) && (Events_Ty_elem_unhandled_input_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_range_check(Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_modemanager_msg_in_input_none_PRESENT);
        Events_Ty_elem_unhandled_input_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_PRESENT);
        Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_PRESENT);
        Events_Ty_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_modemanager_msg_in_reading_PRESENT);
        Events_Ty_elem_unhandled_input_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_PRESENT);
        Events_Ty_elem_unhandled_input_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_unhandled_input_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_range_check(Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_range_check(Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_range_check(Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_range_check(Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_range_check(Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc == Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline Events_Ty_elem_unhandled_input_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_PRESENT);
        Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_PRESENT);
        Events_Ty_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_PRESENT);
        Events_Ty_elem_unhandled_input_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_unhandled_input_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_unhandled_input_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_modemanager_msg_in_PRESENT);
        Events_Ty_elem_unhandled_input_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_modemanager_msg_out_PRESENT);
        Events_Ty_elem_unhandled_input_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_unhandled_input_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_unhandled_input_event_sensor_assign_value(dst, src)
{
    skip;
}
inline Events_Ty_elem_unhandled_input_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_actuator1_PRESENT);
        Events_Ty_elem_unhandled_input_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_actuator2_PRESENT);
        Events_Ty_elem_unhandled_input_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_egse_PRESENT);
        Events_Ty_elem_unhandled_input_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_modemanager_PRESENT);
        Events_Ty_elem_unhandled_input_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_event_sensor_PRESENT);
        Events_Ty_elem_unhandled_input_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline Events_ty_elem_unhandled_input_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_elem_unhandled_input_assign_value(dst, src)
{
    Events_Ty_elem_unhandled_input_source_assign_value(dst.source, src.source);
    Events_Ty_elem_unhandled_input_dest_assign_value(dst.dest, src.dest);
    Events_Ty_elem_unhandled_input_event_assign_value(dst.event, src.event);
}
inline Events_Ty_elem_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == Events_Ty_elem_no_event_PRESENT);
        Events_Ty_elem_no_event_assign_value(dst.data.no_event, src.data.no_event);
    ::  (dst.selection == Events_Ty_elem_system_startup_PRESENT);
        Events_Ty_elem_system_startup_assign_value(dst.data.system_startup, src.data.system_startup);
    ::  (dst.selection == Events_Ty_elem_input_event_PRESENT);
        Events_Ty_elem_input_event_assign_value(dst.data.input_event, src.data.input_event);
    ::  (dst.selection == Events_Ty_elem_output_event_PRESENT);
        Events_Ty_elem_output_event_assign_value(dst.data.output_event, src.data.output_event);
    ::  (dst.selection == Events_Ty_elem_unhandled_input_PRESENT);
        Events_Ty_elem_unhandled_input_assign_value(dst.data.unhandled_input, src.data.unhandled_input);
    ::  else;
        skip;
    fi;
}
inline Events_Ty_elem_init_value(dst)
{
    skip;
}
inline Events_ty_elem_selection_assign_value(dst, src)
{
    dst = src;
}
inline Events_Ty_assign_value(dst, src)
{
    int i;
    for(i : 0 .. (src.length - 1))
    {
        Events_Ty_elem_assign_value(dst.data[i], src.data[i]);
    }
    for(i : src.length .. 9)
    {
        Events_Ty_elem_init_value(dst.data[i]);
    }
    dst.length = src.length;
}
inline Events_Ty_size_check(Events_Ty_sc)
{
    assert(((Events_Ty_sc >= 0) && (Events_Ty_sc <= 10)));
}
inline System_State_timers_actuator1_assign_value(dst, src)
{
    skip;
}
inline System_State_timers_actuator2_assign_value(dst, src)
{
    skip;
}
inline System_State_timers_modemanager_assign_value(dst, src)
{
    skip;
}
inline System_State_timers_dummy_entry_assign_value(dst, src)
{
    skip;
}
inline System_State_timers_assign_value(dst, src)
{
    System_State_timers_actuator1_assign_value(dst.actuator1, src.actuator1);
    System_State_timers_actuator2_assign_value(dst.actuator2, src.actuator2);
    System_State_timers_modemanager_assign_value(dst.modemanager, src.modemanager);
    System_State_timers_dummy_entry_assign_value(dst.dummy_entry, src.dummy_entry);
}
inline System_State_actuator1_queue_elem_no_event_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator1_queue_elem_system_startup_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator1_queue_elem_input_event_source_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_source_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_source_range_check(System_State_actuator1_queue_elem_input_event_source_vc)
{
    assert((((((((System_State_actuator1_queue_elem_input_event_source_vc == System_State_actuator1_queue_elem_input_event_source_actuator) || (System_State_actuator1_queue_elem_input_event_source_vc == System_State_actuator1_queue_elem_input_event_source_actuator1)) || (System_State_actuator1_queue_elem_input_event_source_vc == System_State_actuator1_queue_elem_input_event_source_actuator2)) || (System_State_actuator1_queue_elem_input_event_source_vc == System_State_actuator1_queue_elem_input_event_source_egse)) || (System_State_actuator1_queue_elem_input_event_source_vc == System_State_actuator1_queue_elem_input_event_source_modemanager)) || (System_State_actuator1_queue_elem_input_event_source_vc == System_State_actuator1_queue_elem_input_event_source_sensor)) || (System_State_actuator1_queue_elem_input_event_source_vc == System_State_actuator1_queue_elem_input_event_source_env)));
}
inline System_State_actuator1_queue_elem_input_event_dest_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_dest_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_dest_range_check(System_State_actuator1_queue_elem_input_event_dest_vc)
{
    assert((((((((System_State_actuator1_queue_elem_input_event_dest_vc == System_State_actuator1_queue_elem_input_event_dest_actuator) || (System_State_actuator1_queue_elem_input_event_dest_vc == System_State_actuator1_queue_elem_input_event_dest_actuator1)) || (System_State_actuator1_queue_elem_input_event_dest_vc == System_State_actuator1_queue_elem_input_event_dest_actuator2)) || (System_State_actuator1_queue_elem_input_event_dest_vc == System_State_actuator1_queue_elem_input_event_dest_egse)) || (System_State_actuator1_queue_elem_input_event_dest_vc == System_State_actuator1_queue_elem_input_event_dest_modemanager)) || (System_State_actuator1_queue_elem_input_event_dest_vc == System_State_actuator1_queue_elem_input_event_dest_sensor)) || (System_State_actuator1_queue_elem_input_event_dest_vc == System_State_actuator1_queue_elem_input_event_dest_env)));
}
inline System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_range_check(System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_input_none_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_input_event_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_range_check(System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_input_event_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_input_event_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_input_event_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_range_check(System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_input_none_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_input_event_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_range_check(System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_input_event_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_input_event_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_input_event_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_range_check(System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_range_check(System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_range_check(System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_input_event_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_range_check(System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_input_event_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_input_event_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_input_event_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_egse_msg_in_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_egse_msg_out_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_input_event_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_range_check(System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_range_check(System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_reading_x_range_check(System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_reading_x_vc)
{
    assert(((System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_reading_x_vc >= 0) && (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_input_none_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_reading_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_input_event_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_range_check(System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_range_check(System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_input_event_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_input_event_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_input_event_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_input_event_event_sensor_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator1_queue_elem_input_event_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_actuator1_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_actuator2_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_egse_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_modemanager_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_event_sensor_PRESENT);
        System_State_actuator1_queue_elem_input_event_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_input_event_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_input_event_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_input_event_source_assign_value(dst.source, src.source);
    System_State_actuator1_queue_elem_input_event_dest_assign_value(dst.dest, src.dest);
    System_State_actuator1_queue_elem_input_event_event_assign_value(dst.event, src.event);
}
inline System_State_actuator1_queue_elem_output_event_source_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_source_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_source_range_check(System_State_actuator1_queue_elem_output_event_source_vc)
{
    assert((((((((System_State_actuator1_queue_elem_output_event_source_vc == System_State_actuator1_queue_elem_output_event_source_actuator) || (System_State_actuator1_queue_elem_output_event_source_vc == System_State_actuator1_queue_elem_output_event_source_actuator1)) || (System_State_actuator1_queue_elem_output_event_source_vc == System_State_actuator1_queue_elem_output_event_source_actuator2)) || (System_State_actuator1_queue_elem_output_event_source_vc == System_State_actuator1_queue_elem_output_event_source_egse)) || (System_State_actuator1_queue_elem_output_event_source_vc == System_State_actuator1_queue_elem_output_event_source_modemanager)) || (System_State_actuator1_queue_elem_output_event_source_vc == System_State_actuator1_queue_elem_output_event_source_sensor)) || (System_State_actuator1_queue_elem_output_event_source_vc == System_State_actuator1_queue_elem_output_event_source_env)));
}
inline System_State_actuator1_queue_elem_output_event_dest_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_dest_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_dest_range_check(System_State_actuator1_queue_elem_output_event_dest_vc)
{
    assert((((((((System_State_actuator1_queue_elem_output_event_dest_vc == System_State_actuator1_queue_elem_output_event_dest_actuator) || (System_State_actuator1_queue_elem_output_event_dest_vc == System_State_actuator1_queue_elem_output_event_dest_actuator1)) || (System_State_actuator1_queue_elem_output_event_dest_vc == System_State_actuator1_queue_elem_output_event_dest_actuator2)) || (System_State_actuator1_queue_elem_output_event_dest_vc == System_State_actuator1_queue_elem_output_event_dest_egse)) || (System_State_actuator1_queue_elem_output_event_dest_vc == System_State_actuator1_queue_elem_output_event_dest_modemanager)) || (System_State_actuator1_queue_elem_output_event_dest_vc == System_State_actuator1_queue_elem_output_event_dest_sensor)) || (System_State_actuator1_queue_elem_output_event_dest_vc == System_State_actuator1_queue_elem_output_event_dest_env)));
}
inline System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_range_check(System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_input_none_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_output_event_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_range_check(System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_output_event_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_output_event_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_output_event_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_range_check(System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_input_none_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_output_event_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_range_check(System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_output_event_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_output_event_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_output_event_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_range_check(System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_range_check(System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_range_check(System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_output_event_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_range_check(System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_output_event_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_output_event_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_output_event_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_egse_msg_in_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_egse_msg_out_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_output_event_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_range_check(System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_range_check(System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_reading_x_range_check(System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_reading_x_vc)
{
    assert(((System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_reading_x_vc >= 0) && (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_input_none_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_reading_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_output_event_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_range_check(System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_range_check(System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_output_event_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_output_event_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_output_event_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_output_event_event_sensor_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator1_queue_elem_output_event_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_actuator1_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_actuator2_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_egse_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_modemanager_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_event_sensor_PRESENT);
        System_State_actuator1_queue_elem_output_event_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_output_event_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_output_event_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_output_event_source_assign_value(dst.source, src.source);
    System_State_actuator1_queue_elem_output_event_dest_assign_value(dst.dest, src.dest);
    System_State_actuator1_queue_elem_output_event_event_assign_value(dst.event, src.event);
}
inline System_State_actuator1_queue_elem_unhandled_input_source_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_source_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_source_range_check(System_State_actuator1_queue_elem_unhandled_input_source_vc)
{
    assert((((((((System_State_actuator1_queue_elem_unhandled_input_source_vc == System_State_actuator1_queue_elem_unhandled_input_source_actuator) || (System_State_actuator1_queue_elem_unhandled_input_source_vc == System_State_actuator1_queue_elem_unhandled_input_source_actuator1)) || (System_State_actuator1_queue_elem_unhandled_input_source_vc == System_State_actuator1_queue_elem_unhandled_input_source_actuator2)) || (System_State_actuator1_queue_elem_unhandled_input_source_vc == System_State_actuator1_queue_elem_unhandled_input_source_egse)) || (System_State_actuator1_queue_elem_unhandled_input_source_vc == System_State_actuator1_queue_elem_unhandled_input_source_modemanager)) || (System_State_actuator1_queue_elem_unhandled_input_source_vc == System_State_actuator1_queue_elem_unhandled_input_source_sensor)) || (System_State_actuator1_queue_elem_unhandled_input_source_vc == System_State_actuator1_queue_elem_unhandled_input_source_env)));
}
inline System_State_actuator1_queue_elem_unhandled_input_dest_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_dest_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_dest_range_check(System_State_actuator1_queue_elem_unhandled_input_dest_vc)
{
    assert((((((((System_State_actuator1_queue_elem_unhandled_input_dest_vc == System_State_actuator1_queue_elem_unhandled_input_dest_actuator) || (System_State_actuator1_queue_elem_unhandled_input_dest_vc == System_State_actuator1_queue_elem_unhandled_input_dest_actuator1)) || (System_State_actuator1_queue_elem_unhandled_input_dest_vc == System_State_actuator1_queue_elem_unhandled_input_dest_actuator2)) || (System_State_actuator1_queue_elem_unhandled_input_dest_vc == System_State_actuator1_queue_elem_unhandled_input_dest_egse)) || (System_State_actuator1_queue_elem_unhandled_input_dest_vc == System_State_actuator1_queue_elem_unhandled_input_dest_modemanager)) || (System_State_actuator1_queue_elem_unhandled_input_dest_vc == System_State_actuator1_queue_elem_unhandled_input_dest_sensor)) || (System_State_actuator1_queue_elem_unhandled_input_dest_vc == System_State_actuator1_queue_elem_unhandled_input_dest_env)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_range_check(System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_input_none_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_range_check(System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_unhandled_input_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_range_check(System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_input_none_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_range_check(System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_unhandled_input_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_range_check(System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_range_check(System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_range_check(System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_unhandled_input_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_range_check(System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_range_check(System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_unhandled_input_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_unhandled_input_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_range_check(System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_range_check(System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_range_check(System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_vc)
{
    assert(((System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_vc >= 0) && (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_range_check(System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_input_none_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_reading_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_range_check(System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_range_check(System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_range_check(System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_range_check(System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_range_check(System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_unhandled_input_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_sensor_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator1_queue_elem_unhandled_input_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_actuator1_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_actuator2_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_egse_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_modemanager_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_event_sensor_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator1_queue_elem_unhandled_input_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_elem_unhandled_input_assign_value(dst, src)
{
    System_State_actuator1_queue_elem_unhandled_input_source_assign_value(dst.source, src.source);
    System_State_actuator1_queue_elem_unhandled_input_dest_assign_value(dst.dest, src.dest);
    System_State_actuator1_queue_elem_unhandled_input_event_assign_value(dst.event, src.event);
}
inline System_State_actuator1_queue_elem_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator1_queue_elem_no_event_PRESENT);
        System_State_actuator1_queue_elem_no_event_assign_value(dst.data.no_event, src.data.no_event);
    ::  (dst.selection == System_State_actuator1_queue_elem_system_startup_PRESENT);
        System_State_actuator1_queue_elem_system_startup_assign_value(dst.data.system_startup, src.data.system_startup);
    ::  (dst.selection == System_State_actuator1_queue_elem_input_event_PRESENT);
        System_State_actuator1_queue_elem_input_event_assign_value(dst.data.input_event, src.data.input_event);
    ::  (dst.selection == System_State_actuator1_queue_elem_output_event_PRESENT);
        System_State_actuator1_queue_elem_output_event_assign_value(dst.data.output_event, src.data.output_event);
    ::  (dst.selection == System_State_actuator1_queue_elem_unhandled_input_PRESENT);
        System_State_actuator1_queue_elem_unhandled_input_assign_value(dst.data.unhandled_input, src.data.unhandled_input);
    ::  else;
        skip;
    fi;
}
inline System_State_actuator1_queue_elem_init_value(dst)
{
    skip;
}
inline System_state_actuator1_queue_elem_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator1_queue_assign_value(dst, src)
{
    int i;
    for(i : 0 .. (src.length - 1))
    {
        System_State_actuator1_queue_elem_assign_value(dst.data[i], src.data[i]);
    }
    for(i : src.length .. 1)
    {
        System_State_actuator1_queue_elem_init_value(dst.data[i]);
    }
    dst.length = src.length;
}
inline System_State_actuator1_queue_size_check(System_State_actuator1_queue_sc)
{
    assert(((System_State_actuator1_queue_sc >= 0) && (System_State_actuator1_queue_sc <= 2)));
}
inline System_State_actuator2_queue_elem_no_event_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator2_queue_elem_system_startup_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator2_queue_elem_input_event_source_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_source_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_source_range_check(System_State_actuator2_queue_elem_input_event_source_vc)
{
    assert((((((((System_State_actuator2_queue_elem_input_event_source_vc == System_State_actuator2_queue_elem_input_event_source_actuator) || (System_State_actuator2_queue_elem_input_event_source_vc == System_State_actuator2_queue_elem_input_event_source_actuator1)) || (System_State_actuator2_queue_elem_input_event_source_vc == System_State_actuator2_queue_elem_input_event_source_actuator2)) || (System_State_actuator2_queue_elem_input_event_source_vc == System_State_actuator2_queue_elem_input_event_source_egse)) || (System_State_actuator2_queue_elem_input_event_source_vc == System_State_actuator2_queue_elem_input_event_source_modemanager)) || (System_State_actuator2_queue_elem_input_event_source_vc == System_State_actuator2_queue_elem_input_event_source_sensor)) || (System_State_actuator2_queue_elem_input_event_source_vc == System_State_actuator2_queue_elem_input_event_source_env)));
}
inline System_State_actuator2_queue_elem_input_event_dest_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_dest_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_dest_range_check(System_State_actuator2_queue_elem_input_event_dest_vc)
{
    assert((((((((System_State_actuator2_queue_elem_input_event_dest_vc == System_State_actuator2_queue_elem_input_event_dest_actuator) || (System_State_actuator2_queue_elem_input_event_dest_vc == System_State_actuator2_queue_elem_input_event_dest_actuator1)) || (System_State_actuator2_queue_elem_input_event_dest_vc == System_State_actuator2_queue_elem_input_event_dest_actuator2)) || (System_State_actuator2_queue_elem_input_event_dest_vc == System_State_actuator2_queue_elem_input_event_dest_egse)) || (System_State_actuator2_queue_elem_input_event_dest_vc == System_State_actuator2_queue_elem_input_event_dest_modemanager)) || (System_State_actuator2_queue_elem_input_event_dest_vc == System_State_actuator2_queue_elem_input_event_dest_sensor)) || (System_State_actuator2_queue_elem_input_event_dest_vc == System_State_actuator2_queue_elem_input_event_dest_env)));
}
inline System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_range_check(System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_input_none_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_input_event_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_range_check(System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_input_event_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_input_event_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_input_event_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_range_check(System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_input_none_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_input_event_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_range_check(System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_input_event_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_input_event_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_input_event_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_range_check(System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_range_check(System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_range_check(System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_input_event_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_range_check(System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_input_event_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_input_event_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_input_event_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_egse_msg_in_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_egse_msg_out_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_input_event_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_range_check(System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_range_check(System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_reading_x_range_check(System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_reading_x_vc)
{
    assert(((System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_reading_x_vc >= 0) && (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_input_none_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_reading_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_input_event_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_range_check(System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_range_check(System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_input_event_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_input_event_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_input_event_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_input_event_event_sensor_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator2_queue_elem_input_event_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_actuator1_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_actuator2_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_egse_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_modemanager_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_event_sensor_PRESENT);
        System_State_actuator2_queue_elem_input_event_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_input_event_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_input_event_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_input_event_source_assign_value(dst.source, src.source);
    System_State_actuator2_queue_elem_input_event_dest_assign_value(dst.dest, src.dest);
    System_State_actuator2_queue_elem_input_event_event_assign_value(dst.event, src.event);
}
inline System_State_actuator2_queue_elem_output_event_source_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_source_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_source_range_check(System_State_actuator2_queue_elem_output_event_source_vc)
{
    assert((((((((System_State_actuator2_queue_elem_output_event_source_vc == System_State_actuator2_queue_elem_output_event_source_actuator) || (System_State_actuator2_queue_elem_output_event_source_vc == System_State_actuator2_queue_elem_output_event_source_actuator1)) || (System_State_actuator2_queue_elem_output_event_source_vc == System_State_actuator2_queue_elem_output_event_source_actuator2)) || (System_State_actuator2_queue_elem_output_event_source_vc == System_State_actuator2_queue_elem_output_event_source_egse)) || (System_State_actuator2_queue_elem_output_event_source_vc == System_State_actuator2_queue_elem_output_event_source_modemanager)) || (System_State_actuator2_queue_elem_output_event_source_vc == System_State_actuator2_queue_elem_output_event_source_sensor)) || (System_State_actuator2_queue_elem_output_event_source_vc == System_State_actuator2_queue_elem_output_event_source_env)));
}
inline System_State_actuator2_queue_elem_output_event_dest_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_dest_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_dest_range_check(System_State_actuator2_queue_elem_output_event_dest_vc)
{
    assert((((((((System_State_actuator2_queue_elem_output_event_dest_vc == System_State_actuator2_queue_elem_output_event_dest_actuator) || (System_State_actuator2_queue_elem_output_event_dest_vc == System_State_actuator2_queue_elem_output_event_dest_actuator1)) || (System_State_actuator2_queue_elem_output_event_dest_vc == System_State_actuator2_queue_elem_output_event_dest_actuator2)) || (System_State_actuator2_queue_elem_output_event_dest_vc == System_State_actuator2_queue_elem_output_event_dest_egse)) || (System_State_actuator2_queue_elem_output_event_dest_vc == System_State_actuator2_queue_elem_output_event_dest_modemanager)) || (System_State_actuator2_queue_elem_output_event_dest_vc == System_State_actuator2_queue_elem_output_event_dest_sensor)) || (System_State_actuator2_queue_elem_output_event_dest_vc == System_State_actuator2_queue_elem_output_event_dest_env)));
}
inline System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_range_check(System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_input_none_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_output_event_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_range_check(System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_output_event_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_output_event_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_output_event_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_range_check(System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_input_none_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_output_event_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_range_check(System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_output_event_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_output_event_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_output_event_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_range_check(System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_range_check(System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_range_check(System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_output_event_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_range_check(System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_output_event_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_output_event_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_output_event_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_egse_msg_in_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_egse_msg_out_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_output_event_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_range_check(System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_range_check(System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_reading_x_range_check(System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_reading_x_vc)
{
    assert(((System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_reading_x_vc >= 0) && (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_input_none_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_reading_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_output_event_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_range_check(System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_range_check(System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_output_event_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_output_event_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_output_event_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_output_event_event_sensor_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator2_queue_elem_output_event_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_actuator1_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_actuator2_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_egse_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_modemanager_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_event_sensor_PRESENT);
        System_State_actuator2_queue_elem_output_event_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_output_event_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_output_event_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_output_event_source_assign_value(dst.source, src.source);
    System_State_actuator2_queue_elem_output_event_dest_assign_value(dst.dest, src.dest);
    System_State_actuator2_queue_elem_output_event_event_assign_value(dst.event, src.event);
}
inline System_State_actuator2_queue_elem_unhandled_input_source_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_source_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_source_range_check(System_State_actuator2_queue_elem_unhandled_input_source_vc)
{
    assert((((((((System_State_actuator2_queue_elem_unhandled_input_source_vc == System_State_actuator2_queue_elem_unhandled_input_source_actuator) || (System_State_actuator2_queue_elem_unhandled_input_source_vc == System_State_actuator2_queue_elem_unhandled_input_source_actuator1)) || (System_State_actuator2_queue_elem_unhandled_input_source_vc == System_State_actuator2_queue_elem_unhandled_input_source_actuator2)) || (System_State_actuator2_queue_elem_unhandled_input_source_vc == System_State_actuator2_queue_elem_unhandled_input_source_egse)) || (System_State_actuator2_queue_elem_unhandled_input_source_vc == System_State_actuator2_queue_elem_unhandled_input_source_modemanager)) || (System_State_actuator2_queue_elem_unhandled_input_source_vc == System_State_actuator2_queue_elem_unhandled_input_source_sensor)) || (System_State_actuator2_queue_elem_unhandled_input_source_vc == System_State_actuator2_queue_elem_unhandled_input_source_env)));
}
inline System_State_actuator2_queue_elem_unhandled_input_dest_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_dest_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_dest_range_check(System_State_actuator2_queue_elem_unhandled_input_dest_vc)
{
    assert((((((((System_State_actuator2_queue_elem_unhandled_input_dest_vc == System_State_actuator2_queue_elem_unhandled_input_dest_actuator) || (System_State_actuator2_queue_elem_unhandled_input_dest_vc == System_State_actuator2_queue_elem_unhandled_input_dest_actuator1)) || (System_State_actuator2_queue_elem_unhandled_input_dest_vc == System_State_actuator2_queue_elem_unhandled_input_dest_actuator2)) || (System_State_actuator2_queue_elem_unhandled_input_dest_vc == System_State_actuator2_queue_elem_unhandled_input_dest_egse)) || (System_State_actuator2_queue_elem_unhandled_input_dest_vc == System_State_actuator2_queue_elem_unhandled_input_dest_modemanager)) || (System_State_actuator2_queue_elem_unhandled_input_dest_vc == System_State_actuator2_queue_elem_unhandled_input_dest_sensor)) || (System_State_actuator2_queue_elem_unhandled_input_dest_vc == System_State_actuator2_queue_elem_unhandled_input_dest_env)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_range_check(System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_input_none_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_range_check(System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_unhandled_input_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_range_check(System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc == System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_input_none_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_range_check(System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc == System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_unhandled_input_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_range_check(System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_range_check(System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_range_check(System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_unhandled_input_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_range_check(System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_range_check(System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_unhandled_input_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_unhandled_input_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_range_check(System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_range_check(System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_range_check(System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_vc)
{
    assert(((System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_vc >= 0) && (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_range_check(System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_input_none_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_reading_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_range_check(System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_range_check(System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_range_check(System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_range_check(System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_range_check(System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_unhandled_input_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_sensor_assign_value(dst, src)
{
    skip;
}
inline System_State_actuator2_queue_elem_unhandled_input_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_actuator1_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_actuator2_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_egse_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_modemanager_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_event_sensor_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline System_state_actuator2_queue_elem_unhandled_input_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_elem_unhandled_input_assign_value(dst, src)
{
    System_State_actuator2_queue_elem_unhandled_input_source_assign_value(dst.source, src.source);
    System_State_actuator2_queue_elem_unhandled_input_dest_assign_value(dst.dest, src.dest);
    System_State_actuator2_queue_elem_unhandled_input_event_assign_value(dst.event, src.event);
}
inline System_State_actuator2_queue_elem_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_actuator2_queue_elem_no_event_PRESENT);
        System_State_actuator2_queue_elem_no_event_assign_value(dst.data.no_event, src.data.no_event);
    ::  (dst.selection == System_State_actuator2_queue_elem_system_startup_PRESENT);
        System_State_actuator2_queue_elem_system_startup_assign_value(dst.data.system_startup, src.data.system_startup);
    ::  (dst.selection == System_State_actuator2_queue_elem_input_event_PRESENT);
        System_State_actuator2_queue_elem_input_event_assign_value(dst.data.input_event, src.data.input_event);
    ::  (dst.selection == System_State_actuator2_queue_elem_output_event_PRESENT);
        System_State_actuator2_queue_elem_output_event_assign_value(dst.data.output_event, src.data.output_event);
    ::  (dst.selection == System_State_actuator2_queue_elem_unhandled_input_PRESENT);
        System_State_actuator2_queue_elem_unhandled_input_assign_value(dst.data.unhandled_input, src.data.unhandled_input);
    ::  else;
        skip;
    fi;
}
inline System_State_actuator2_queue_elem_init_value(dst)
{
    skip;
}
inline System_state_actuator2_queue_elem_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_actuator2_queue_assign_value(dst, src)
{
    int i;
    for(i : 0 .. (src.length - 1))
    {
        System_State_actuator2_queue_elem_assign_value(dst.data[i], src.data[i]);
    }
    for(i : src.length .. 1)
    {
        System_State_actuator2_queue_elem_init_value(dst.data[i]);
    }
    dst.length = src.length;
}
inline System_State_actuator2_queue_size_check(System_State_actuator2_queue_sc)
{
    assert(((System_State_actuator2_queue_sc >= 0) && (System_State_actuator2_queue_sc <= 2)));
}
inline System_State_modemanager_queue_elem_no_event_assign_value(dst, src)
{
    skip;
}
inline System_State_modemanager_queue_elem_system_startup_assign_value(dst, src)
{
    skip;
}
inline System_State_modemanager_queue_elem_input_event_source_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_source_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_source_range_check(System_State_modemanager_queue_elem_input_event_source_vc)
{
    assert((((((((System_State_modemanager_queue_elem_input_event_source_vc == System_State_modemanager_queue_elem_input_event_source_actuator) || (System_State_modemanager_queue_elem_input_event_source_vc == System_State_modemanager_queue_elem_input_event_source_actuator1)) || (System_State_modemanager_queue_elem_input_event_source_vc == System_State_modemanager_queue_elem_input_event_source_actuator2)) || (System_State_modemanager_queue_elem_input_event_source_vc == System_State_modemanager_queue_elem_input_event_source_egse)) || (System_State_modemanager_queue_elem_input_event_source_vc == System_State_modemanager_queue_elem_input_event_source_modemanager)) || (System_State_modemanager_queue_elem_input_event_source_vc == System_State_modemanager_queue_elem_input_event_source_sensor)) || (System_State_modemanager_queue_elem_input_event_source_vc == System_State_modemanager_queue_elem_input_event_source_env)));
}
inline System_State_modemanager_queue_elem_input_event_dest_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_dest_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_dest_range_check(System_State_modemanager_queue_elem_input_event_dest_vc)
{
    assert((((((((System_State_modemanager_queue_elem_input_event_dest_vc == System_State_modemanager_queue_elem_input_event_dest_actuator) || (System_State_modemanager_queue_elem_input_event_dest_vc == System_State_modemanager_queue_elem_input_event_dest_actuator1)) || (System_State_modemanager_queue_elem_input_event_dest_vc == System_State_modemanager_queue_elem_input_event_dest_actuator2)) || (System_State_modemanager_queue_elem_input_event_dest_vc == System_State_modemanager_queue_elem_input_event_dest_egse)) || (System_State_modemanager_queue_elem_input_event_dest_vc == System_State_modemanager_queue_elem_input_event_dest_modemanager)) || (System_State_modemanager_queue_elem_input_event_dest_vc == System_State_modemanager_queue_elem_input_event_dest_sensor)) || (System_State_modemanager_queue_elem_input_event_dest_vc == System_State_modemanager_queue_elem_input_event_dest_env)));
}
inline System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_range_check(System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_input_none_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_input_event_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_range_check(System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_input_event_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_input_event_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_input_event_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_range_check(System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_input_none_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_input_event_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_range_check(System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_input_event_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_input_event_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_input_event_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_range_check(System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_range_check(System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_range_check(System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_input_event_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_range_check(System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_input_event_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_input_event_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_input_event_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_egse_msg_in_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_egse_msg_out_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_input_event_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_range_check(System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_range_check(System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_reading_x_range_check(System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_reading_x_vc)
{
    assert(((System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_reading_x_vc >= 0) && (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_input_none_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_reading_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_input_event_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_range_check(System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_range_check(System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_input_event_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_input_event_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_input_event_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_input_event_event_sensor_assign_value(dst, src)
{
    skip;
}
inline System_State_modemanager_queue_elem_input_event_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_actuator1_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_actuator2_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_egse_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_modemanager_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_event_sensor_PRESENT);
        System_State_modemanager_queue_elem_input_event_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_input_event_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_input_event_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_input_event_source_assign_value(dst.source, src.source);
    System_State_modemanager_queue_elem_input_event_dest_assign_value(dst.dest, src.dest);
    System_State_modemanager_queue_elem_input_event_event_assign_value(dst.event, src.event);
}
inline System_State_modemanager_queue_elem_output_event_source_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_source_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_source_range_check(System_State_modemanager_queue_elem_output_event_source_vc)
{
    assert((((((((System_State_modemanager_queue_elem_output_event_source_vc == System_State_modemanager_queue_elem_output_event_source_actuator) || (System_State_modemanager_queue_elem_output_event_source_vc == System_State_modemanager_queue_elem_output_event_source_actuator1)) || (System_State_modemanager_queue_elem_output_event_source_vc == System_State_modemanager_queue_elem_output_event_source_actuator2)) || (System_State_modemanager_queue_elem_output_event_source_vc == System_State_modemanager_queue_elem_output_event_source_egse)) || (System_State_modemanager_queue_elem_output_event_source_vc == System_State_modemanager_queue_elem_output_event_source_modemanager)) || (System_State_modemanager_queue_elem_output_event_source_vc == System_State_modemanager_queue_elem_output_event_source_sensor)) || (System_State_modemanager_queue_elem_output_event_source_vc == System_State_modemanager_queue_elem_output_event_source_env)));
}
inline System_State_modemanager_queue_elem_output_event_dest_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_dest_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_dest_range_check(System_State_modemanager_queue_elem_output_event_dest_vc)
{
    assert((((((((System_State_modemanager_queue_elem_output_event_dest_vc == System_State_modemanager_queue_elem_output_event_dest_actuator) || (System_State_modemanager_queue_elem_output_event_dest_vc == System_State_modemanager_queue_elem_output_event_dest_actuator1)) || (System_State_modemanager_queue_elem_output_event_dest_vc == System_State_modemanager_queue_elem_output_event_dest_actuator2)) || (System_State_modemanager_queue_elem_output_event_dest_vc == System_State_modemanager_queue_elem_output_event_dest_egse)) || (System_State_modemanager_queue_elem_output_event_dest_vc == System_State_modemanager_queue_elem_output_event_dest_modemanager)) || (System_State_modemanager_queue_elem_output_event_dest_vc == System_State_modemanager_queue_elem_output_event_dest_sensor)) || (System_State_modemanager_queue_elem_output_event_dest_vc == System_State_modemanager_queue_elem_output_event_dest_env)));
}
inline System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_range_check(System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_input_none_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_output_event_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_range_check(System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_output_event_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_output_event_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_output_event_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_range_check(System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_input_none_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_output_event_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_range_check(System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_output_event_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_output_event_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_output_event_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_range_check(System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_range_check(System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_range_check(System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_output_event_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_range_check(System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_range_check(System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_output_event_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_output_event_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_output_event_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_egse_msg_in_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_egse_msg_out_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_output_event_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_range_check(System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_range_check(System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_reading_x_range_check(System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_reading_x_vc)
{
    assert(((System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_reading_x_vc >= 0) && (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_range_check(System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_input_none_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_reading_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_output_event_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_range_check(System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_range_check(System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_range_check(System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_range_check(System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_range_check(System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_output_event_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_output_event_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_output_event_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_output_event_event_sensor_assign_value(dst, src)
{
    skip;
}
inline System_State_modemanager_queue_elem_output_event_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_actuator1_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_actuator2_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_egse_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_modemanager_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_event_sensor_PRESENT);
        System_State_modemanager_queue_elem_output_event_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_output_event_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_output_event_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_output_event_source_assign_value(dst.source, src.source);
    System_State_modemanager_queue_elem_output_event_dest_assign_value(dst.dest, src.dest);
    System_State_modemanager_queue_elem_output_event_event_assign_value(dst.event, src.event);
}
inline System_State_modemanager_queue_elem_unhandled_input_source_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_source_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_source_range_check(System_State_modemanager_queue_elem_unhandled_input_source_vc)
{
    assert((((((((System_State_modemanager_queue_elem_unhandled_input_source_vc == System_State_modemanager_queue_elem_unhandled_input_source_actuator) || (System_State_modemanager_queue_elem_unhandled_input_source_vc == System_State_modemanager_queue_elem_unhandled_input_source_actuator1)) || (System_State_modemanager_queue_elem_unhandled_input_source_vc == System_State_modemanager_queue_elem_unhandled_input_source_actuator2)) || (System_State_modemanager_queue_elem_unhandled_input_source_vc == System_State_modemanager_queue_elem_unhandled_input_source_egse)) || (System_State_modemanager_queue_elem_unhandled_input_source_vc == System_State_modemanager_queue_elem_unhandled_input_source_modemanager)) || (System_State_modemanager_queue_elem_unhandled_input_source_vc == System_State_modemanager_queue_elem_unhandled_input_source_sensor)) || (System_State_modemanager_queue_elem_unhandled_input_source_vc == System_State_modemanager_queue_elem_unhandled_input_source_env)));
}
inline System_State_modemanager_queue_elem_unhandled_input_dest_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_dest_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_dest_range_check(System_State_modemanager_queue_elem_unhandled_input_dest_vc)
{
    assert((((((((System_State_modemanager_queue_elem_unhandled_input_dest_vc == System_State_modemanager_queue_elem_unhandled_input_dest_actuator) || (System_State_modemanager_queue_elem_unhandled_input_dest_vc == System_State_modemanager_queue_elem_unhandled_input_dest_actuator1)) || (System_State_modemanager_queue_elem_unhandled_input_dest_vc == System_State_modemanager_queue_elem_unhandled_input_dest_actuator2)) || (System_State_modemanager_queue_elem_unhandled_input_dest_vc == System_State_modemanager_queue_elem_unhandled_input_dest_egse)) || (System_State_modemanager_queue_elem_unhandled_input_dest_vc == System_State_modemanager_queue_elem_unhandled_input_dest_modemanager)) || (System_State_modemanager_queue_elem_unhandled_input_dest_vc == System_State_modemanager_queue_elem_unhandled_input_dest_sensor)) || (System_State_modemanager_queue_elem_unhandled_input_dest_vc == System_State_modemanager_queue_elem_unhandled_input_dest_env)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_range_check(System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorArm) || (System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_input_none_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_range_check(System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorArmed) || (System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator1_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_actuator1_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_unhandled_input_event_actuator1_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_range_check(System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc)
{
    assert((((System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorArm) || (System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorExecute)) || (System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_vc == System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_actuatorStandby)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_input_none_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_actuatortc_assign_value(dst.data.actuatortc, src.data.actuatortc);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_range_check(System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc)
{
    assert((((System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorArmed) || (System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorExecuting)) || (System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_vc == System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_actuatortm_assign_value(dst.data.actuatortm, src.data.actuatortm);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_actuator2_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_actuator2_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_unhandled_input_event_actuator2_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_range_check(System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_vc)
{
    assert(((System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_vc >= 0) && (System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_vc <= 255)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_range_check(System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc)
{
    assert((((System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorArmed) || (System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorExecuting)) || (System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_range_check(System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc)
{
    assert((((System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorArmed) || (System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorExecuting)) || (System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_unhandled_input_event_egse_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_range_check(System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_vc >= 0) && (System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_range_check(System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_range_check(System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_range_check(System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_vc)
{
    assert(((System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_vc >= 0) && (System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_unhandled_input_event_egse_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_egse_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_egse_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_unhandled_input_event_egse_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_input_none_assign_value(dst, src)
{
    skip;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_range_check(System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc)
{
    assert((((System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorArmed) || (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorExecuting)) || (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_range_check(System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc)
{
    assert((((System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorArmed) || (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorExecuting)) || (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_range_check(System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_vc)
{
    assert(((System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_vc >= 0) && (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_vc <= 255)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_reading_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_reading_x_assign_value(dst.x, src.x);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_range_check(System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_vc)
{
    assert(((System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_vc >= 0) && (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_vc <= 0)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_range_check(System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc)
{
    assert(((System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc >= 0) && (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_range_check(System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc)
{
    assert(((System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc >= 0) && (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_range_check(System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_vc)
{
    assert(((System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_vc >= 0) && (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_vc <= 0)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_input_none_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_input_none_assign_value(dst.data.input_none, src.data.input_none);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm1_assign_value(dst.data.actuatortm1, src.data.actuatortm1);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_actuatortm2_assign_value(dst.data.actuatortm2, src.data.actuatortm2);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_reading_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_reading_assign_value(dst.data.reading, src.data.reading);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_systemtc_assign_value(dst.data.systemtc, src.data.systemtc);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_range_check(System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc)
{
    assert((((System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorArm) || (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorExecute)) || (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_actuatorStandby)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_range_check(System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc)
{
    assert((((System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorArm) || (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorExecute)) || (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_actuatorStandby)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_tc_assign_value(dst.tc, src.tc);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_range_check(System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_vc)
{
    assert(((System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_vc >= 0) && (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_vc <= 255)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_range_check(System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc)
{
    assert((((System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorArmed) || (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorExecuting)) || (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_range_check(dst);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_range_check(System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc)
{
    assert((((System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorArmed) || (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorExecuting)) || (System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_vc == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_actuatorStandingBy)));
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_reading_assign_value(dst.reading, src.reading);
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status1_assign_value(dst.status1, src.status1);
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_tm_assign_value(dst.tm, src.tm);
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc1_assign_value(dst.data.actuatortc1, src.data.actuatortc1);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_actuatortc2_assign_value(dst.data.actuatortc2, src.data.actuatortc2);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_systemtm_assign_value(dst.data.systemtm, src.data.systemtm);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_modemanager_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_in_assign_value(dst.data.msg_in, src.data.msg_in);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_modemanager_msg_out_assign_value(dst.data.msg_out, src.data.msg_out);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_unhandled_input_event_modemanager_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_sensor_assign_value(dst, src)
{
    skip;
}
inline System_State_modemanager_queue_elem_unhandled_input_event_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_actuator1_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_actuator1_assign_value(dst.data.actuator1, src.data.actuator1);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_actuator2_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_actuator2_assign_value(dst.data.actuator2, src.data.actuator2);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_egse_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_egse_assign_value(dst.data.egse, src.data.egse);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_modemanager_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_modemanager_assign_value(dst.data.modemanager, src.data.modemanager);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_event_sensor_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_event_sensor_assign_value(dst.data.sensor, src.data.sensor);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_queue_elem_unhandled_input_event_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_elem_unhandled_input_assign_value(dst, src)
{
    System_State_modemanager_queue_elem_unhandled_input_source_assign_value(dst.source, src.source);
    System_State_modemanager_queue_elem_unhandled_input_dest_assign_value(dst.dest, src.dest);
    System_State_modemanager_queue_elem_unhandled_input_event_assign_value(dst.event, src.event);
}
inline System_State_modemanager_queue_elem_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_queue_elem_no_event_PRESENT);
        System_State_modemanager_queue_elem_no_event_assign_value(dst.data.no_event, src.data.no_event);
    ::  (dst.selection == System_State_modemanager_queue_elem_system_startup_PRESENT);
        System_State_modemanager_queue_elem_system_startup_assign_value(dst.data.system_startup, src.data.system_startup);
    ::  (dst.selection == System_State_modemanager_queue_elem_input_event_PRESENT);
        System_State_modemanager_queue_elem_input_event_assign_value(dst.data.input_event, src.data.input_event);
    ::  (dst.selection == System_State_modemanager_queue_elem_output_event_PRESENT);
        System_State_modemanager_queue_elem_output_event_assign_value(dst.data.output_event, src.data.output_event);
    ::  (dst.selection == System_State_modemanager_queue_elem_unhandled_input_PRESENT);
        System_State_modemanager_queue_elem_unhandled_input_assign_value(dst.data.unhandled_input, src.data.unhandled_input);
    ::  else;
        skip;
    fi;
}
inline System_State_modemanager_queue_elem_init_value(dst)
{
    skip;
}
inline System_state_modemanager_queue_elem_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_queue_assign_value(dst, src)
{
    int i;
    for(i : 0 .. (src.length - 1))
    {
        System_State_modemanager_queue_elem_assign_value(dst.data[i], src.data[i]);
    }
    for(i : src.length .. 1)
    {
        System_State_modemanager_queue_elem_init_value(dst.data[i]);
    }
    dst.length = src.length;
}
inline System_State_modemanager_queue_size_check(System_State_modemanager_queue_sc)
{
    assert(((System_State_modemanager_queue_sc >= 0) && (System_State_modemanager_queue_sc <= 2)));
}
inline System_State_actuator1_state_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_state_range_check(dst);
}
inline System_State_actuator1_state_range_check(System_State_actuator1_state_vc)
{
    assert((((System_State_actuator1_state_vc == System_State_actuator1_state_armed) || (System_State_actuator1_state_vc == System_State_actuator1_state_executing)) || (System_State_actuator1_state_vc == System_State_actuator1_state_standby)));
}
inline System_State_actuator1_init_done_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_init_done_range_check(dst);
}
inline System_State_actuator1_init_done_range_check(System_State_actuator1_init_done_vc)
{
    assert(true);
}
inline System_State_actuator1_sender_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_sender_range_check(dst);
}
inline System_State_actuator1_sender_range_check(System_State_actuator1_sender_vc)
{
    assert((((((((System_State_actuator1_sender_vc == System_State_actuator1_sender_actuator) || (System_State_actuator1_sender_vc == System_State_actuator1_sender_actuator1)) || (System_State_actuator1_sender_vc == System_State_actuator1_sender_actuator2)) || (System_State_actuator1_sender_vc == System_State_actuator1_sender_egse)) || (System_State_actuator1_sender_vc == System_State_actuator1_sender_modemanager)) || (System_State_actuator1_sender_vc == System_State_actuator1_sender_sensor)) || (System_State_actuator1_sender_vc == System_State_actuator1_sender_env)));
}
inline System_State_actuator1_cmd_assign_value(dst, src)
{
    dst = src;
    System_State_actuator1_cmd_range_check(dst);
}
inline System_State_actuator1_cmd_range_check(System_State_actuator1_cmd_vc)
{
    assert((((System_State_actuator1_cmd_vc == System_State_actuator1_cmd_actuatorArm) || (System_State_actuator1_cmd_vc == System_State_actuator1_cmd_actuatorExecute)) || (System_State_actuator1_cmd_vc == System_State_actuator1_cmd_actuatorStandby)));
}
inline System_State_actuator1_assign_value(dst, src)
{
    System_State_actuator1_state_assign_value(dst.state, src.state);
    System_State_actuator1_init_done_assign_value(dst.init_done, src.init_done);
    System_State_actuator1_sender_assign_value(dst.sender, src.sender);
    System_State_actuator1_cmd_assign_value(dst.cmd, src.cmd);
}
inline System_State_actuator2_state_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_state_range_check(dst);
}
inline System_State_actuator2_state_range_check(System_State_actuator2_state_vc)
{
    assert((((System_State_actuator2_state_vc == System_State_actuator2_state_armed) || (System_State_actuator2_state_vc == System_State_actuator2_state_executing)) || (System_State_actuator2_state_vc == System_State_actuator2_state_standby)));
}
inline System_State_actuator2_init_done_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_init_done_range_check(dst);
}
inline System_State_actuator2_init_done_range_check(System_State_actuator2_init_done_vc)
{
    assert(true);
}
inline System_State_actuator2_sender_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_sender_range_check(dst);
}
inline System_State_actuator2_sender_range_check(System_State_actuator2_sender_vc)
{
    assert((((((((System_State_actuator2_sender_vc == System_State_actuator2_sender_actuator) || (System_State_actuator2_sender_vc == System_State_actuator2_sender_actuator1)) || (System_State_actuator2_sender_vc == System_State_actuator2_sender_actuator2)) || (System_State_actuator2_sender_vc == System_State_actuator2_sender_egse)) || (System_State_actuator2_sender_vc == System_State_actuator2_sender_modemanager)) || (System_State_actuator2_sender_vc == System_State_actuator2_sender_sensor)) || (System_State_actuator2_sender_vc == System_State_actuator2_sender_env)));
}
inline System_State_actuator2_cmd_assign_value(dst, src)
{
    dst = src;
    System_State_actuator2_cmd_range_check(dst);
}
inline System_State_actuator2_cmd_range_check(System_State_actuator2_cmd_vc)
{
    assert((((System_State_actuator2_cmd_vc == System_State_actuator2_cmd_actuatorArm) || (System_State_actuator2_cmd_vc == System_State_actuator2_cmd_actuatorExecute)) || (System_State_actuator2_cmd_vc == System_State_actuator2_cmd_actuatorStandby)));
}
inline System_State_actuator2_assign_value(dst, src)
{
    System_State_actuator2_state_assign_value(dst.state, src.state);
    System_State_actuator2_init_done_assign_value(dst.init_done, src.init_done);
    System_State_actuator2_sender_assign_value(dst.sender, src.sender);
    System_State_actuator2_cmd_assign_value(dst.cmd, src.cmd);
}
inline System_State_modemanager_state_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_state_range_check(dst);
}
inline System_State_modemanager_state_range_check(System_State_modemanager_state_vc)
{
    assert(((((System_State_modemanager_state_vc == System_State_modemanager_state_starting) || (System_State_modemanager_state_vc == System_State_modemanager_state_operational)) || (System_State_modemanager_state_vc == System_State_modemanager_state_stopping)) || (System_State_modemanager_state_vc == System_State_modemanager_state_idle)));
}
inline System_State_modemanager_init_done_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_init_done_range_check(dst);
}
inline System_State_modemanager_init_done_range_check(System_State_modemanager_init_done_vc)
{
    assert(true);
}
inline System_State_modemanager_sender_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_sender_range_check(dst);
}
inline System_State_modemanager_sender_range_check(System_State_modemanager_sender_vc)
{
    assert((((((((System_State_modemanager_sender_vc == System_State_modemanager_sender_actuator) || (System_State_modemanager_sender_vc == System_State_modemanager_sender_actuator1)) || (System_State_modemanager_sender_vc == System_State_modemanager_sender_actuator2)) || (System_State_modemanager_sender_vc == System_State_modemanager_sender_egse)) || (System_State_modemanager_sender_vc == System_State_modemanager_sender_modemanager)) || (System_State_modemanager_sender_vc == System_State_modemanager_sender_sensor)) || (System_State_modemanager_sender_vc == System_State_modemanager_sender_env)));
}
inline System_State_modemanager_status1_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_status1_range_check(dst);
}
inline System_State_modemanager_status1_range_check(System_State_modemanager_status1_vc)
{
    assert((((System_State_modemanager_status1_vc == System_State_modemanager_status1_actuatorArmed) || (System_State_modemanager_status1_vc == System_State_modemanager_status1_actuatorExecuting)) || (System_State_modemanager_status1_vc == System_State_modemanager_status1_actuatorStandingBy)));
}
inline System_State_modemanager_status2_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_status2_range_check(dst);
}
inline System_State_modemanager_status2_range_check(System_State_modemanager_status2_vc)
{
    assert((((System_State_modemanager_status2_vc == System_State_modemanager_status2_actuatorArmed) || (System_State_modemanager_status2_vc == System_State_modemanager_status2_actuatorExecuting)) || (System_State_modemanager_status2_vc == System_State_modemanager_status2_actuatorStandingBy)));
}
inline System_State_modemanager_r_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_r_range_check(dst);
}
inline System_State_modemanager_r_range_check(System_State_modemanager_r_vc)
{
    assert(((System_State_modemanager_r_vc >= 0) && (System_State_modemanager_r_vc <= 255)));
}
inline System_State_modemanager_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_threshold1_range_check(dst);
}
inline System_State_modemanager_threshold1_range_check(System_State_modemanager_threshold1_vc)
{
    assert(((System_State_modemanager_threshold1_vc >= 0) && (System_State_modemanager_threshold1_vc <= 255)));
}
inline System_State_modemanager_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_threshold2_range_check(dst);
}
inline System_State_modemanager_threshold2_range_check(System_State_modemanager_threshold2_vc)
{
    assert(((System_State_modemanager_threshold2_vc >= 0) && (System_State_modemanager_threshold2_vc <= 255)));
}
inline System_State_modemanager_stc_goToIdle_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_stc_goToIdle_range_check(dst);
}
inline System_State_modemanager_stc_goToIdle_range_check(System_State_modemanager_stc_goToIdle_vc)
{
    assert(((System_State_modemanager_stc_goToIdle_vc >= 0) && (System_State_modemanager_stc_goToIdle_vc <= 0)));
}
inline System_State_modemanager_stc_goToOperational_threshold1_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_stc_goToOperational_threshold1_range_check(dst);
}
inline System_State_modemanager_stc_goToOperational_threshold1_range_check(System_State_modemanager_stc_goToOperational_threshold1_vc)
{
    assert(((System_State_modemanager_stc_goToOperational_threshold1_vc >= 0) && (System_State_modemanager_stc_goToOperational_threshold1_vc <= 255)));
}
inline System_State_modemanager_stc_goToOperational_threshold2_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_stc_goToOperational_threshold2_range_check(dst);
}
inline System_State_modemanager_stc_goToOperational_threshold2_range_check(System_State_modemanager_stc_goToOperational_threshold2_vc)
{
    assert(((System_State_modemanager_stc_goToOperational_threshold2_vc >= 0) && (System_State_modemanager_stc_goToOperational_threshold2_vc <= 255)));
}
inline System_State_modemanager_stc_goToOperational_assign_value(dst, src)
{
    System_State_modemanager_stc_goToOperational_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_modemanager_stc_goToOperational_threshold2_assign_value(dst.threshold2, src.threshold2);
}
inline System_State_modemanager_stc_doReport_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_stc_doReport_range_check(dst);
}
inline System_State_modemanager_stc_doReport_range_check(System_State_modemanager_stc_doReport_vc)
{
    assert(((System_State_modemanager_stc_doReport_vc >= 0) && (System_State_modemanager_stc_doReport_vc <= 0)));
}
inline System_State_modemanager_stc_assign_value(dst, src)
{
    dst.selection = src.selection;
    if
    ::  (dst.selection == System_State_modemanager_stc_goToIdle_PRESENT);
        System_State_modemanager_stc_goToIdle_assign_value(dst.data.goToIdle, src.data.goToIdle);
    ::  (dst.selection == System_State_modemanager_stc_goToOperational_PRESENT);
        System_State_modemanager_stc_goToOperational_assign_value(dst.data.goToOperational, src.data.goToOperational);
    ::  (dst.selection == System_State_modemanager_stc_doReport_PRESENT);
        System_State_modemanager_stc_doReport_assign_value(dst.data.doReport, src.data.doReport);
    ::  else;
        skip;
    fi;
}
inline System_state_modemanager_stc_selection_assign_value(dst, src)
{
    dst = src;
}
inline System_State_modemanager_stm_reading_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_stm_reading_range_check(dst);
}
inline System_State_modemanager_stm_reading_range_check(System_State_modemanager_stm_reading_vc)
{
    assert(((System_State_modemanager_stm_reading_vc >= 0) && (System_State_modemanager_stm_reading_vc <= 255)));
}
inline System_State_modemanager_stm_status1_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_stm_status1_range_check(dst);
}
inline System_State_modemanager_stm_status1_range_check(System_State_modemanager_stm_status1_vc)
{
    assert((((System_State_modemanager_stm_status1_vc == System_State_modemanager_stm_status1_actuatorArmed) || (System_State_modemanager_stm_status1_vc == System_State_modemanager_stm_status1_actuatorExecuting)) || (System_State_modemanager_stm_status1_vc == System_State_modemanager_stm_status1_actuatorStandingBy)));
}
inline System_State_modemanager_stm_status2_assign_value(dst, src)
{
    dst = src;
    System_State_modemanager_stm_status2_range_check(dst);
}
inline System_State_modemanager_stm_status2_range_check(System_State_modemanager_stm_status2_vc)
{
    assert((((System_State_modemanager_stm_status2_vc == System_State_modemanager_stm_status2_actuatorArmed) || (System_State_modemanager_stm_status2_vc == System_State_modemanager_stm_status2_actuatorExecuting)) || (System_State_modemanager_stm_status2_vc == System_State_modemanager_stm_status2_actuatorStandingBy)));
}
inline System_State_modemanager_stm_assign_value(dst, src)
{
    System_State_modemanager_stm_reading_assign_value(dst.reading, src.reading);
    System_State_modemanager_stm_status1_assign_value(dst.status1, src.status1);
    System_State_modemanager_stm_status2_assign_value(dst.status2, src.status2);
}
inline System_State_modemanager_assign_value(dst, src)
{
    System_State_modemanager_state_assign_value(dst.state, src.state);
    System_State_modemanager_init_done_assign_value(dst.init_done, src.init_done);
    System_State_modemanager_sender_assign_value(dst.sender, src.sender);
    System_State_modemanager_status1_assign_value(dst.status1, src.status1);
    System_State_modemanager_status2_assign_value(dst.status2, src.status2);
    System_State_modemanager_r_assign_value(dst.r, src.r);
    System_State_modemanager_threshold1_assign_value(dst.threshold1, src.threshold1);
    System_State_modemanager_threshold2_assign_value(dst.threshold2, src.threshold2);
    System_State_modemanager_stc_assign_value(dst.stc, src.stc);
    System_State_modemanager_stm_assign_value(dst.stm, src.stm);
}
inline System_State_assign_value(dst, src)
{
    System_State_timers_assign_value(dst.timers, src.timers);
    System_State_actuator1_queue_assign_value(dst.actuator1_queue, src.actuator1_queue);
    System_State_actuator2_queue_assign_value(dst.actuator2_queue, src.actuator2_queue);
    System_State_modemanager_queue_assign_value(dst.modemanager_queue, src.modemanager_queue);
    System_State_actuator1_assign_value(dst.actuator1, src.actuator1);
    System_State_actuator2_assign_value(dst.actuator2, src.actuator2);
    System_State_modemanager_assign_value(dst.modemanager, src.modemanager);
}
inline nothing_init()
{
    d_step {
        nothing.selection = Observable_Event_no_event_PRESENT;
    }
}
inline TimerData_timer_enabled_assign_value(dst, src)
{
    dst = src;
    TimerData_timer_enabled_range_check(dst);
}
inline TimerData_timer_enabled_range_check(TimerData_timer_enabled_vc)
{
    assert(true);
}
inline TimerData_interval_assign_value(dst, src)
{
    dst = src;
    TimerData_interval_range_check(dst);
}
inline TimerData_interval_range_check(TimerData_interval_vc)
{
    assert(((TimerData_interval_vc >= 0) && (TimerData_interval_vc <= 50000)));
}
inline TimerData_assign_value(dst, src)
{
    TimerData_timer_enabled_assign_value(dst.timer_enabled, src.timer_enabled);
    TimerData_interval_assign_value(dst.interval, src.interval);
}
inline AggregateTimerData_actuator1_assign_value(dst, src)
{
    skip;
}
inline AggregateTimerData_actuator2_assign_value(dst, src)
{
    skip;
}
inline AggregateTimerData_modemanager_assign_value(dst, src)
{
    skip;
}
inline AggregateTimerData_dummy_entry_assign_value(dst, src)
{
    skip;
}
inline AggregateTimerData_assign_value(dst, src)
{
    AggregateTimerData_actuator1_assign_value(dst.actuator1, src.actuator1);
    AggregateTimerData_actuator2_assign_value(dst.actuator2, src.actuator2);
    AggregateTimerData_modemanager_assign_value(dst.modemanager, src.modemanager);
    AggregateTimerData_dummy_entry_assign_value(dst.dummy_entry, src.dummy_entry);
}
inline global_dataview_init()
{
    d_step {
        nothing_init();
    }
}
