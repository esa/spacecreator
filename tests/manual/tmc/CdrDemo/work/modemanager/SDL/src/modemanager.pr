/* CIF PROCESS (250, 150), (150, 75) */
process Modemanager;
    /* CIF TEXT (197, 112), (190, 140) */
    DCL status1 ActuatorStatus;
    DCL status2 ActuatorStatus;
    DCL r DataItem;
    DCL threshold1 DataItem;
    DCL threshold2 DataItem;
    DCL stc SystemCommand;
    DCL stm SystemTelemetry;
    /* CIF ENDTEXT */
    /* CIF START (473, 124), (70, 35) */
    START;
        /* CIF NEXTSTATE (473, 174), (70, 35) */
        NEXTSTATE Idle;
    /* CIF label (1624, 278), (86, 35) */
    connection startCheck:
        /* CIF decision (1495, 333), (344, 50) */
        decision status1 = actuatorArmed and status2 = actuatorArmed;
            /* CIF ANSWER (1677, 403), (70, 23) */
            (false):
                /* CIF NEXTSTATE (1677, 446), (70, 35) */
                NEXTSTATE -;
            /* CIF ANSWER (1587, 403), (70, 23) */
            (true):
                /* CIF NEXTSTATE (1575, 446), (93, 35) */
                NEXTSTATE Operational;
        enddecision;
    /* CIF End Label */
    endconnection;
    /* CIF label (1157, 269), (84, 35) */
    connection stopCheck:
        /* CIF decision (999, 324), (400, 50) */
        decision status1 = actuatorStandingBy and status2 = actuatorStandingBy;
            /* CIF ANSWER (1213, 394), (70, 23) */
            (false):
                /* CIF NEXTSTATE (1213, 437), (70, 35) */
                NEXTSTATE -;
            /* CIF ANSWER (1121, 394), (70, 23) */
            (true):
                /* CIF NEXTSTATE (1121, 437), (70, 35) */
                NEXTSTATE Idle;
        enddecision;
    /* CIF End Label */
    endconnection;
    /* CIF state (582, 120), (70, 35) */
    state Idle;
        /* CIF input (564, 175), (102, 35) */
        input systemTc(stc);
            /* CIF decision (567, 230), (96, 50) */
            decision present(stc);
                /* CIF ANSWER (438, 300), (123, 23) */
                (goToOperational):
                    /* CIF task (354, 343), (291, 35) */
                    task threshold1 := stc.goToOperational.threshold1;
                    /* CIF task (354, 398), (291, 35) */
                    task threshold2 := stc.goToOperational.threshold2;
                    /* CIF output (412, 453), (175, 35) */
                    output actuatorTc1(actuatorArm);
                    /* CIF output (412, 508), (175, 35) */
                    output actuatorTc2(actuatorArm);
                    /* CIF NEXTSTATE (464, 558), (70, 35) */
                    NEXTSTATE Starting;
                /* CIF ANSWER (693, 300), (79, 23) */
                (doReport):
                    /* CIF task (655, 343), (155, 53) */
                    task stm.status1 := status1,
stm.status2 := status2,
stm.reading := r;
                    /* CIF output (676, 426), (112, 35) */
                    output systemTm(stm);
                    /* CIF NEXTSTATE (698, 481), (70, 35) */
                    NEXTSTATE -;
                /* CIF ANSWER (273, 300), (70, 23) */
                else:
                    /* CIF NEXTSTATE (273, 343), (70, 35) */
                    NEXTSTATE -;
            enddecision;
    endstate;
    /* CIF state (1134, 132), (76, 35) */
    state Stopping;
        /* CIF input (1307, 187), (150, 35) */
        input actuatorTm2(status2);
            /* CIF join (1365, 242), (35, 35) */
            join stopCheck;
        /* CIF input (895, 187), (150, 35) */
        input actuatorTm1(status1);
            /* CIF join (953, 242), (35, 35) */
            join stopCheck;
    endstate;
    /* CIF state (1713, 118), (70, 35) */
    state Starting;
        /* CIF input (1758, 173), (150, 35) */
        input actuatorTm2(status2);
            /* CIF join (1816, 228), (35, 35) */
            join startCheck;
        /* CIF input (1597, 173), (150, 35) */
        input actuatorTm1(status1);
            /* CIF join (1655, 228), (35, 35) */
            join startCheck;
    endstate;
    /* CIF state (2194, 128), (93, 35) */
    state Operational;
        /* CIF input (2022, 183), (102, 35) */
        input systemTc(stc);
            /* CIF decision (2025, 238), (96, 50) */
            decision present(stc);
                /* CIF ANSWER (1913, 308), (74, 23) */
                (goToIdle):
                    /* CIF output (1851, 351), (199, 35) */
                    output actuatorTc1(actuatorStandby);
                    /* CIF output (1851, 406), (199, 35) */
                    output actuatorTc2(actuatorStandby);
                    /* CIF NEXTSTATE (1912, 461), (76, 35) */
                    NEXTSTATE Stopping;
                /* CIF ANSWER (2180, 308), (79, 23) */
                (doReport):
                    /* CIF task (2142, 351), (155, 53) */
                    task stm.status1 := status1,
stm.status2 := status2,
stm.reading := r;
                    /* CIF output (2163, 437), (112, 35) */
                    output systemTm(stm);
                    /* CIF NEXTSTATE (2185, 492), (70, 35) */
                    NEXTSTATE -;
                /* CIF ANSWER (2061, 308), (70, 23) */
                else:
                    /* CIF NEXTSTATE (2061, 351), (70, 35) */
                    NEXTSTATE -;
            enddecision;
        /* CIF input (2591, 189), (81, 35) */
        input reading(r);
            /* CIF decision (2596, 244), (70, 50) */
            decision r;
                /* CIF ANSWER (2358, 314), (97, 23) */
                (< threshold1):
                    /* CIF output (2308, 357), (198, 35) */
                    output actuatorTc1(actuatorExecute);
                /* CIF ANSWER (2582, 314), (70, 23) */
                else:
                    /* CIF output (2517, 357), (199, 35) */
                    output actuatorTc1(actuatorStandby);
            enddecision;
            /* CIF decision (2596, 408), (70, 50) */
            decision r;
                /* CIF ANSWER (2472, 478), (97, 23) */
                (> threshold2):
                    /* CIF output (2422, 521), (198, 35) */
                    output actuatorTc2(actuatorExecute);
                /* CIF ANSWER (2697, 478), (70, 23) */
                else:
                    /* CIF output (2632, 521), (199, 35) */
                    output actuatorTc2(actuatorStandby);
            enddecision;
            /* CIF NEXTSTATE (2596, 572), (70, 35) */
            NEXTSTATE -;
    endstate;
endprocess Modemanager;