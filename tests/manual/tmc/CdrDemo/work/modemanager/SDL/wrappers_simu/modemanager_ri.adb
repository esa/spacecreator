-- DO NOT EDIT THIS FILE, IT WILL BE OVERWRITTEN DURING THE BUILD
-- Generated by TASTE (kazoo/templates/glue/language_wrappers/ri_adb/function.tmplt)
with Simulator;            use Simulator;
with Simulation_Dataview;  use Simulation_Dataview;
with System_Dataview;      use System_Dataview;
package body Modemanager_RI is

   procedure Actuatortc1
      (Tc : in out asn1SccActuatorcommand;
       Dest_PID : asn1sccPID := asn1sccEnv) is
      --  Generate an event to the simulator for the output
      Event_Out_Actuator1 : asn1SccObservable_Event (Kind => Output_Event_PRESENT);
   begin
      if Dest_PID = asn1sccEnv or Dest_PID = asn1sccActuator1 then
         Event_Out_Actuator1.Output_Event :=
           (Source => asn1sccModemanager,
            Dest   => asn1sccActuator1,
            Event  => (Kind => Modemanager_PRESENT,
                       Modemanager =>
                         (Kind   => Msg_Out_PRESENT,
                          Msg_Out =>
                             (Kind => Actuatortc1_PRESENT,
                        Actuatortc1 =>
                              (Tc => Tc)))));
         Push_Event (Event_Out_Actuator1);
      end if;
   
   end Actuatortc1;
   
   
   
   procedure Actuatortc2
      (Tc : in out asn1SccActuatorcommand;
       Dest_PID : asn1sccPID := asn1sccEnv) is
      --  Generate an event to the simulator for the output
      Event_Out_Actuator2 : asn1SccObservable_Event (Kind => Output_Event_PRESENT);
   begin
      if Dest_PID = asn1sccEnv or Dest_PID = asn1sccActuator2 then
         Event_Out_Actuator2.Output_Event :=
           (Source => asn1sccModemanager,
            Dest   => asn1sccActuator2,
            Event  => (Kind => Modemanager_PRESENT,
                       Modemanager =>
                         (Kind   => Msg_Out_PRESENT,
                          Msg_Out =>
                             (Kind => Actuatortc2_PRESENT,
                        Actuatortc2 =>
                              (Tc => Tc)))));
         Push_Event (Event_Out_Actuator2);
      end if;
   
   end Actuatortc2;
   
   
   
   procedure Systemtm
      (Tm : in out asn1SccSystemtelemetry;
       Dest_PID : asn1sccPID := asn1sccEnv) is
      --  Generate an event to the simulator for the output
      Event_Out_Egse : asn1SccObservable_Event (Kind => Output_Event_PRESENT);
   begin
      if Dest_PID = asn1sccEnv or Dest_PID = asn1sccEgse then
         Event_Out_Egse.Output_Event :=
           (Source => asn1sccModemanager,
            Dest   => asn1sccEgse,
            Event  => (Kind => Modemanager_PRESENT,
                       Modemanager =>
                         (Kind   => Msg_Out_PRESENT,
                          Msg_Out =>
                             (Kind => Systemtm_PRESENT,
                        Systemtm =>
                              (Tm => Tm)))));
         Push_Event (Event_Out_Egse);
      end if;
   
   end Systemtm;

end Modemanager_RI;
