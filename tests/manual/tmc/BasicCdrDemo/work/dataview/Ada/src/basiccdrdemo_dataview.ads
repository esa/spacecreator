pragma Style_Checks (Off);
--  Code automatically generated by asn1scc tool
pragma Warnings (Off, "no entities of ""Interfaces"" are referenced");
with Interfaces;
pragma Warnings (On, "no entities of ""Interfaces"" are referenced");

pragma Warnings (Off, "use clause for package ""Interfaces"" has no effect");
use Interfaces;
pragma Warnings (On, "use clause for package ""Interfaces"" has no effect");

with adaasn1rtl;


pragma Warnings (Off, "unit ""System"" is not referenced");
with System;
pragma Warnings (On, "unit ""System"" is not referenced");

pragma Warnings (Off, "use clause for package ""adaasn1rtl"" has no effect");
use adaasn1rtl;
pragma Warnings (On, "use clause for package ""adaasn1rtl"" has no effect");

pragma Warnings (Off, "use clause for type");
pragma Warnings (Off, "is already use-visible through package use clause at line");
use type adaasn1rtl.OctetBuffer;
use type adaasn1rtl.BitArray;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;
pragma Warnings (On, "use clause for type");
pragma Warnings (On, "is already use-visible through package use clause at line");



package BASICCDRDEMO_DATAVIEW with SPARK_Mode
is


subtype asn1SccT_Integer is adaasn1rtl.Asn1UInt range 0 .. 1000000;


function asn1SccT_Integer_Equal(val1, val2 : asn1SccT_Integer) return Boolean;

ERR_T_INTEGER:constant Integer := 1; -- (0 .. 1000000)
function asn1SccT_Integer_IsConstraintValid(val : asn1SccT_Integer) return adaasn1rtl.ASN1_RESULT;

function asn1SccT_Integer_Init  return asn1SccT_Integer is
(0);
-- asn1SccT_Config --------------------------------------------

type asn1SccT_Config is record 
    param_a : asn1SccT_Integer;
    param_b : asn1SccT_Integer;
end record;


function asn1SccT_Config_Equal(val1, val2 : asn1SccT_Config) return Boolean;

ERR_T_CONFIG:constant Integer := 26; -- 
ERR_T_CONFIG_PARAM_A_2:constant Integer := 11; -- 
ERR_T_CONFIG_PARAM_B_2:constant Integer := 21; -- 
function asn1SccT_Config_IsConstraintValid(val : asn1SccT_Config) return adaasn1rtl.ASN1_RESULT;

function asn1SccT_Config_Init  return asn1SccT_Config is
((param_a => 0, param_b => 0));
-- asn1SccT_Report --------------------------------------------

type asn1SccT_Report is record 
    reading : asn1SccT_Integer;
    ctrl : asn1SccT_Integer;
    feedback : asn1SccT_Integer;
end record;


function asn1SccT_Report_Equal(val1, val2 : asn1SccT_Report) return Boolean;

ERR_T_REPORT:constant Integer := 61; -- 
ERR_T_REPORT_READING_2:constant Integer := 36; -- 
ERR_T_REPORT_CTRL_2:constant Integer := 46; -- 
ERR_T_REPORT_FEEDBACK_2:constant Integer := 56; -- 
function asn1SccT_Report_IsConstraintValid(val : asn1SccT_Report) return adaasn1rtl.ASN1_RESULT;

function asn1SccT_Report_Init  return asn1SccT_Report is
((reading => 0, ctrl => 0, feedback => 0));
pragma Warnings (Off, "there are no others");
 
pragma Warnings (On, "there are no others");
private
   --# hide BASICCDRDEMO_DATAVIEW;


end BASICCDRDEMO_DATAVIEW;