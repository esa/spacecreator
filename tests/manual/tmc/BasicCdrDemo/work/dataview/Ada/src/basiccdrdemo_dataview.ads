pragma Style_Checks (Off);
--  Code automatically generated by asn1scc tool
pragma Warnings (Off, "no entities of ""Interfaces"" are referenced");
with Interfaces;
pragma Warnings (On, "no entities of ""Interfaces"" are referenced");

pragma Warnings (Off, "use clause for package ""Interfaces"" has no effect");
use Interfaces;
pragma Warnings (On, "use clause for package ""Interfaces"" has no effect");

with adaasn1rtl;


pragma Warnings (Off, "unit ""System"" is not referenced");
with System;
pragma Warnings (On, "unit ""System"" is not referenced");

pragma Warnings (Off, "use clause for package ""adaasn1rtl"" has no effect");
use adaasn1rtl;
pragma Warnings (On, "use clause for package ""adaasn1rtl"" has no effect");

pragma Warnings (Off, "use clause for type");
pragma Warnings (Off, "is already use-visible through package use clause at line");
use type adaasn1rtl.OctetBuffer;
use type adaasn1rtl.BitArray;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;
pragma Warnings (On, "use clause for type");
pragma Warnings (On, "is already use-visible through package use clause at line");



package BASICCDRDEMO_DATAVIEW with SPARK_Mode
is


subtype asn1SccTInteger is adaasn1rtl.Asn1UInt range 0 .. 1000000;


function asn1SccTInteger_Equal(val1, val2 : asn1SccTInteger) return Boolean;

ERR_TINTEGER:constant Integer := 1; -- (0 .. 1000000)
function asn1SccTInteger_IsConstraintValid(val : asn1SccTInteger) return adaasn1rtl.ASN1_RESULT;

function asn1SccTInteger_Init  return asn1SccTInteger is
(0);
-- asn1SccTConfig --------------------------------------------

type asn1SccTConfig is record 
    param_a : asn1SccTInteger;
    param_b : asn1SccTInteger;
end record;


function asn1SccTConfig_Equal(val1, val2 : asn1SccTConfig) return Boolean;

ERR_TCONFIG:constant Integer := 26; -- 
ERR_TCONFIG_PARAM_A_2:constant Integer := 11; -- 
ERR_TCONFIG_PARAM_B_2:constant Integer := 21; -- 
function asn1SccTConfig_IsConstraintValid(val : asn1SccTConfig) return adaasn1rtl.ASN1_RESULT;

function asn1SccTConfig_Init  return asn1SccTConfig is
((param_a => 0, param_b => 0));
-- asn1SccTReport --------------------------------------------

type asn1SccTReport is record 
    reading : asn1SccTInteger;
    ctrl : asn1SccTInteger;
    feedback : asn1SccTInteger;
end record;


function asn1SccTReport_Equal(val1, val2 : asn1SccTReport) return Boolean;

ERR_TREPORT:constant Integer := 61; -- 
ERR_TREPORT_READING_2:constant Integer := 36; -- 
ERR_TREPORT_CTRL_2:constant Integer := 46; -- 
ERR_TREPORT_FEEDBACK_2:constant Integer := 56; -- 
function asn1SccTReport_IsConstraintValid(val : asn1SccTReport) return adaasn1rtl.ASN1_RESULT;

function asn1SccTReport_Init  return asn1SccTReport is
((reading => 0, ctrl => 0, feedback => 0));
pragma Warnings (Off, "there are no others");
 
pragma Warnings (On, "there are no others");
private
   --# hide BASICCDRDEMO_DATAVIEW;


end BASICCDRDEMO_DATAVIEW;