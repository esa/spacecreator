--  TASTE Concurrency View - Generated by Kazoo, do not edit manually
--  Generated by the template: ~/tool-src/kazoo/templates/concurrency_view/aadl_2_threads/system.tmplt

package Actuator_Ctrl_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Actuator_Ctrl
features
   INPORT_Ctrl : in event data port DataView::T_Integer_Buffer.impl
      { Compute_Execution_Time =>  0 ms ..  0 ms;
        Queue_Size =>  1;
        Compute_Entrypoint_Source_Text => "Demo_TASTE_Interface.Actuator_Ctrl_ctrl"; };
   OUTPORT_Modemanager_Feedback : out event data port DataView::T_Integer_Buffer.impl;
end Actuator_Ctrl;

thread implementation Actuator_Ctrl.others
properties
   Activate_Entrypoint_Source_Text => "Demo_TASTE_Interface.Actuator_Ctrl_Init";
   Dispatch_Protocol                 => Sporadic;
   Period                            => 1 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  2;
end Actuator_Ctrl.others;

end Actuator_Ctrl_Thread;
package Egse_Poll_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Egse_Poll
features
   OUTPORT_Modemanager_Tc : out event data port DataView::T_Config_Buffer.impl;
end Egse_Poll;

thread implementation Egse_Poll.others
properties
   Activate_Entrypoint_Source_Text => "Demo_TASTE_Interface.Egse_Poll_Init";
   Compute_Entrypoint_Source_Text    => "Demo_TASTE_Interface.Egse_Poll_Poll";
   Dispatch_Protocol                 => Periodic;
   Period                            => 10 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  4096 Bytes;
   Priority                          =>  1;
end Egse_Poll.others;

end Egse_Poll_Thread;
package Egse_Tm_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Egse_Tm
features
   INPORT_Tm : in event data port DataView::T_Report_Buffer.impl
      { Compute_Execution_Time =>  0 ms ..  0 ms;
        Queue_Size =>  1;
        Compute_Entrypoint_Source_Text => "Demo_TASTE_Interface.Egse_Tm_tm"; };
   OUTPORT_Modemanager_Tc : out event data port DataView::T_Config_Buffer.impl;
end Egse_Tm;

thread implementation Egse_Tm.others
properties
   Activate_Entrypoint_Source_Text => "Demo_TASTE_Interface.Egse_Tm_Init";
   Dispatch_Protocol                 => Sporadic;
   Period                            => 1 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  4;
end Egse_Tm.others;

end Egse_Tm_Thread;
package Modemanager_Feedback_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Modemanager_Feedback
features
   INPORT_Feedback : in event data port DataView::T_Integer_Buffer.impl
      { Compute_Execution_Time =>  0 ms ..  0 ms;
        Queue_Size =>  1;
        Compute_Entrypoint_Source_Text => "Demo_TASTE_Interface.Modemanager_Feedback_feedback"; };
   OUTPORT_Actuator_Ctrl : out event data port DataView::T_Integer_Buffer.impl;
   OUTPORT_Egse_Tm : out event data port DataView::T_Report_Buffer.impl;
end Modemanager_Feedback;

thread implementation Modemanager_Feedback.others
properties
   Activate_Entrypoint_Source_Text => "Demo_TASTE_Interface.Modemanager_Feedback_Init";
   Dispatch_Protocol                 => Sporadic;
   Period                            => 1 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  3;
end Modemanager_Feedback.others;

end Modemanager_Feedback_Thread;
package Modemanager_Reading_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Modemanager_Reading
features
   INPORT_Reading : in event data port DataView::T_Integer_Buffer.impl
      { Compute_Execution_Time =>  0 ms ..  0 ms;
        Queue_Size =>  1;
        Compute_Entrypoint_Source_Text => "Demo_TASTE_Interface.Modemanager_Reading_reading"; };
   OUTPORT_Actuator_Ctrl : out event data port DataView::T_Integer_Buffer.impl;
   OUTPORT_Egse_Tm : out event data port DataView::T_Report_Buffer.impl;
end Modemanager_Reading;

thread implementation Modemanager_Reading.others
properties
   Activate_Entrypoint_Source_Text => "Demo_TASTE_Interface.Modemanager_Reading_Init";
   Dispatch_Protocol                 => Sporadic;
   Period                            => 1 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  1;
end Modemanager_Reading.others;

end Modemanager_Reading_Thread;
package Modemanager_Tc_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Modemanager_Tc
features
   INPORT_Tc : in event data port DataView::T_Config_Buffer.impl
      { Compute_Execution_Time =>  0 ms ..  0 ms;
        Queue_Size =>  1;
        Compute_Entrypoint_Source_Text => "Demo_TASTE_Interface.Modemanager_Tc_tc"; };
   OUTPORT_Actuator_Ctrl : out event data port DataView::T_Integer_Buffer.impl;
   OUTPORT_Egse_Tm : out event data port DataView::T_Report_Buffer.impl;
end Modemanager_Tc;

thread implementation Modemanager_Tc.others
properties
   Activate_Entrypoint_Source_Text => "Demo_TASTE_Interface.Modemanager_Tc_Init";
   Dispatch_Protocol                 => Sporadic;
   Period                            => 1 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  1024 Bytes;
   Priority                          =>  1;
end Modemanager_Tc.others;

end Modemanager_Tc_Thread;
package Sensor_Poll_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Sensor_Poll
features
   OUTPORT_Modemanager_Reading : out event data port DataView::T_Integer_Buffer.impl;
end Sensor_Poll;

thread implementation Sensor_Poll.others
properties
   Activate_Entrypoint_Source_Text => "Demo_TASTE_Interface.Sensor_Poll_Init";
   Compute_Entrypoint_Source_Text    => "Demo_TASTE_Interface.Sensor_Poll_Poll";
   Dispatch_Protocol                 => Periodic;
   Period                            => 10 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        =>  4096 Bytes;
   Priority                          =>  1;
end Sensor_Poll.others;

end Sensor_Poll_Thread;

package Process_Package
public
   with arinc653;
   with Deployment;
   with DataView;
   with interfaceview::IV;
   with deploymentview::DV;
   with deploymentview::DV::node_linux;
   with Actuator_Ctrl_Thread;
   with Egse_Poll_Thread;
   with Egse_Tm_Thread;
   with Modemanager_Feedback_Thread;
   with Modemanager_Reading_Thread;
   with Modemanager_Tc_Thread;
   with Sensor_Poll_Thread;
   with Ocarina_Processors_X86;


--  Required by AIR to allow inter-partition communications
subprogram do_ports_polling
properties
   Source_Language => C;
   Source_Name     => "user_ports_polling";
   Source_Text     => ("air_polling.c");
end do_ports_polling;
thread Port_Poller
end    Port_Poller;

thread implementation Port_Poller.i
calls
   Mycalls: {
      P_Spg : subprogram do_ports_polling;
   };
properties
   Dispatch_Protocol => Periodic;
   Period            => 100 ms;
   Deadline          => 100 ms;
end Port_Poller.i;


processor node_linux_Board extends ocarina_processors_x86::x86
end node_linux_Board;

processor implementation node_linux_Board.final extends ocarina_processors_x86::x86.generic_linux
end node_linux_Board.final;


process Demo extends DeploymentView::DV::Node_Linux::Demo
end demo;

process implementation Demo.final
subcomponents
   
   actuator_ctrl        : thread actuator_ctrl_Thread::actuator_ctrl.others;
   egse_Poll            : thread egse_Poll_Thread::egse_Poll.others;
   egse_tm              : thread egse_tm_Thread::egse_tm.others;
   modemanager_feedback : thread modemanager_feedback_Thread::modemanager_feedback.others;
   modemanager_reading  : thread modemanager_reading_Thread::modemanager_reading.others;
   modemanager_tc       : thread modemanager_tc_Thread::modemanager_tc.others;
   sensor_Poll          : thread sensor_Poll_Thread::sensor_Poll.others;
connections
   port Actuator_Ctrl.OUTPORT_Modemanager_Feedback -> Modemanager_Feedback.INPORT_Feedback;
   port Egse_Poll.OUTPORT_Modemanager_Tc           -> Modemanager_Tc.INPORT_Tc;
   port Egse_Tm.OUTPORT_Modemanager_Tc             -> Modemanager_Tc.INPORT_Tc;
   port Modemanager_Feedback.OUTPORT_Actuator_Ctrl -> Actuator_Ctrl.INPORT_Ctrl;
   port Modemanager_Feedback.OUTPORT_Egse_Tm       -> Egse_Tm.INPORT_Tm;
   port Modemanager_Reading.OUTPORT_Actuator_Ctrl  -> Actuator_Ctrl.INPORT_Ctrl;
   port Modemanager_Reading.OUTPORT_Egse_Tm        -> Egse_Tm.INPORT_Tm;
   port Modemanager_Tc.OUTPORT_Actuator_Ctrl       -> Actuator_Ctrl.INPORT_Ctrl;
   port Modemanager_Tc.OUTPORT_Egse_Tm             -> Egse_Tm.INPORT_Tm;
   port Sensor_Poll.OUTPORT_Modemanager_Reading    -> Modemanager_Reading.INPORT_Reading;
end Demo.final;

system DeploymentView
end DeploymentView;

system implementation DeploymentView.final
subcomponents
   Demo : process Demo.final;
   Node_Linux_x86_linux : processor Node_Linux_Board.final;
properties
   Actual_Processor_Binding => (reference (Node_Linux_x86_linux)) applies to Demo;
--  patchable area (do not remove this line):
end DeploymentView.final;

end Process_Package;

-- deploymenttview.final
