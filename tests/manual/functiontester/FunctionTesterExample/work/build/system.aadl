--  TASTE Concurrency View - Generated by Kazoo, do not edit manually
--  Generated by the template: ~/tool-src/kazoo/templates/concurrency_view/aadl_2_threads/system.tmplt

package Controller_Trigger_Thread
public
   with Deployment;
   with Process_Package;
   with Dataview;

thread Controller_Trigger
end Controller_Trigger;

thread implementation Controller_Trigger.others
properties
   Activate_Entrypoint_Source_Text => "init_controller";
   Compute_Entrypoint_Source_Text    => "call_controller_trigger";
   Dispatch_Protocol                 => Periodic;
   Period                            => 1000 ms;
   Dispatch_Offset                   =>  0 ms;
   Compute_Execution_Time            =>  0 ms ..  0 ms;
   Stack_Size                        => 0 Bytes;
   Priority                          =>  1;
end Controller_Trigger.others;

end Controller_Trigger_Thread;

package Process_Package
public
   with arinc653;
   with Deployment;
   with DataView;
   with interfaceview::IV;
   with deploymentview::DV;
   with deploymentview::DV::node_linux;
   with Controller_Trigger_Thread;
   with Ocarina_Processors_X86;

data TASTE_Protected
properties
   Concurrency_Control_Protocol => Protected_Access;
end TASTE_Protected;

data implementation TASTE_Protected.Object
properties
   Concurrency_Control_Protocol => Protected_Access;
end TASTE_Protected.Object;

--  Required by AIR to allow inter-partition communications
subprogram do_ports_polling
properties
   Source_Language => C;
   Source_Name     => "user_ports_polling";
   Source_Text     => ("air_polling.c");
end do_ports_polling;
thread Port_Poller
end    Port_Poller;

thread implementation Port_Poller.i
calls
   Mycalls: {
      P_Spg : subprogram do_ports_polling;
   };
properties
   Dispatch_Protocol => Periodic;
   Period            => 100 ms;
   Deadline          => 100 ms;
end Port_Poller.i;


processor node_linux_Board extends ocarina_processors_x86::x86
end node_linux_Board;

processor implementation node_linux_Board.final extends ocarina_processors_x86::x86.linux
end node_linux_Board.final;


process Demo extends DeploymentView::DV::Node_Linux::Demo
end demo;

process implementation Demo.final
subcomponents
   controller_protected : data TASTE_Protected.Object;
   
   qgenhost_protected : data TASTE_Protected.Object;
   controller_Trigger : thread controller_Trigger_Thread::controller_Trigger.others;
end Demo.final;

system DeploymentView
end DeploymentView;

system implementation DeploymentView.final
subcomponents
   Demo : process Demo.final;
   Node_Linux_x86_linux : processor Node_Linux_Board.final;
properties
   Actual_Processor_Binding => (reference (Node_Linux_x86_linux)) applies to Demo;
--  patchable area (do not remove this line):
end DeploymentView.final;

end Process_Package;

-- deploymenttview.final
