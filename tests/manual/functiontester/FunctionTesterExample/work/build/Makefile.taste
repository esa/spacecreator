TOOL_INST       := $(shell taste-config --prefix)

all: node_linux_x86_linux
	# Check stack usage for all tasks of all nodes
	python3 ./checkAllStacks.py

# Generate a dynamic library excluding the runtime for each node
simu: node_linux_simu


run:	run_demo_partition


ocarina:  # call Ocarina for POHI targets
	ocarina -x main.aadl

DriversConfig/drivers_config.h:  # Not a distributed system => nothing to do

check_targets:  # check that runtime of every node is installed
	check_deployment_target_cli.py x86_linux


# Build of node node_linux for PLATFORM_NATIVE
# (rule generated by templates/concurrency_view/aadl_4_makefile/node.tmplt)

node_linux_x86_linux: demo_glue DriversConfig/drivers_config.h
	$(MAKE) -j -C node_linux -f Makefile.node_linux



#  Build of partition demo (common to all targets)
# (rule generated by templates/concurrency_view/aadl_4_makefile/partition.tmplt)

DEMO_USER_CFLAGS += -no-pie
export DEMO_USER_CFLAGS
DEMO_USER_LDFLAGS += -no-pie
export DEMO_USER_LDFLAGS

# CPU PLATFORM: PLATFORM_NATIVE
demo_glue:	controller  qgenhost
	touch $@



# Rule to execute the generated binary for this partition (used by space creator Run button)
run_demo_partition:
	# make sure the generated artefacts appear in space creator
	touch ../../*.pro
	# Coverage = FALSE
	cd ../binaries && taste-run-and-trace ./demo || :


controller:
	touch $@
	@# If you need to add a call to a code generator, or anything else
	@# related to functions in C, edit the following template:
	@# $(KAZOO_SRC)/templates/concurrency_view/aadl_4_makefile/block.tmplt
	@# Placeholder if anything has to be done for this function coded in C


qgenhost:
	@# If you need to add a call to a code generator, or anything else
	@# related to functions in QGenC, edit the following template:
	@# $(KAZOO_SRC)/templates/concurrency_view/aadl_4_makefile/block.tmplt
	@# Placeholder if anything has to be done for this function coded in QGenC
	$(warning ---------------------------------------------------------------------)
	$(warning NOTE: The following is a patch to generate source code automatically.)
	$(warning ---------------------------------------------------------------------)
	make -C ../$@/QGenC/ Makefile generate-code



clean:
	$(MAKE) -C node_linux -f Makefile.node_linux clean
	rm -rf *_adainit deploymentview_final

.PHONY:	clean simu run $(IF_PROPERTIES)

