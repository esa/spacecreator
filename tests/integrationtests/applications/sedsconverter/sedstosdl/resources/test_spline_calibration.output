process Calibration;
    dcl Iterator RealType;
    dcl Calibratedvalue RealType;
    dcl RawSplinePoints1 SplinePointsArray;
    dcl CalibratedSplinePoints1 SplinePointsArray;

    procedure FindInterval;
        dcl result SplinePointsArrayIndex;
        fpar
            in value SplinePointValue,
            in rawPoints SplinePointsArray;
        returns SplinePointsArrayIndex;
        START;
            task result := 0;
            find_interval_start:
            decision result < length(rawPoints);
                (True):
                    decision rawPoints(result) >= value;
                        (True):
                            return result;
                        (False):
                            task result := result + 1;
                            join find_interval_start;
                    enddecision;
                (False):
                    join find_interval_end;
            enddecision;
            find_interval_end:
            task result := result + 1;
        return result;
    endprocedure;

    procedure LinearCalibration;
        dcl intervalIndex SplinePointsArrayIndex;
        dcl result SplinePointValue;
        fpar
            in value SplinePointValue,
            in rawPoints SplinePointsArray,
            in calibratedPoints SplinePointsArray;
        returns SplinePointValue;
        START;
            task intervalIndex := call FindInterval(value, rawPoints);
            task result := value;
        return result;
    endprocedure;

    procedure SquareCalibration;
        START;
        return ;
    endprocedure;

    procedure CubicCalibration;
        START;
        return ;
    endprocedure;

    procedure InitRawSplinePoints1;
        START;
            task RawSplinePoints1 := {1.000000, 5.000000, 20.000000};
        return ;
    endprocedure;

    procedure InitCalibratedSplinePoints1;
        START;
            task CalibratedSplinePoints1 := {20.000000, 200.000000, 4000.000000};
        return ;
    endprocedure;

    procedure CalibrateActivity;
        START;
            task Iterator := 1.0;

            loop_start_1:
            decision Iterator <= 20.0;
                (False):
                    join loop_end_2;
                (True):
                    task Calibratedvalue := call LinearCalibration(Iterator, RawSplinePoints1, CalibratedSplinePoints1);
                    task Iterator := Iterator + 1.0;
                    join loop_start_1;
            enddecision;
            loop_end_2:
        return ;
    endprocedure;

    START;
        call InitRawSplinePoints1;
        call InitCalibratedSplinePoints1;
        NEXTSTATE Idle;

    state DoCalibration;
    endstate;

    state Idle;
        input ComponentInterface_Tick_Pi;
            call CalibrateActivity;
            NEXTSTATE DoCalibration;
    endstate;

endprocess Calibration;
