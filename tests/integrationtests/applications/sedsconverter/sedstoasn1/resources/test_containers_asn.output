COM-N7SPACE-CONTAINERS DEFINITIONS ::= BEGIN
-- A sample data item to be embedded within other structures
DataItemA ::= INTEGER(0 .. 255)
-- A sample data item to be embedded within other structures
DataItemB ::= INTEGER(0 .. 255)
-- Type used for array length specification
LengthType ::= INTEGER(0 .. 65535)
-- A simple array type
ArrayType ::= SEQUENCE (SIZE(15)) OF DataItemA(0 .. 255)
-- A basic container data type
BasicContainer ::= SEQUENCE
{
    fieldA DataItemA(0 .. 255),
    fieldB DataItemB(0 .. 255)
}
BinaryPattern ::= BIT STRING(SIZE(0 .. 8))
-- Packet ID to distinguish between packets
PacketId ::= ENUMERATED
{
    packetA(1),
    packetB(2)
}
EmptyContainer ::= SEQUENCE
{
}
EmptyAbstractContainer ::= SEQUENCE
{
}
-- Base for the packet payload data
PayloadBase ::= SEQUENCE
{
    realization CHOICE
    {
        realizationPayloadA PayloadA,
        realizationPayloadB PayloadB
    }
}
-- Payload A for a data packet
PayloadA ::= SEQUENCE
{
    data DataItemA(0 .. 255)
}
-- Payload B for a data packet
PayloadB ::= SEQUENCE
{
    data DataItemB(0 .. 255)
}
-- A data packet
DataPacket ::= SEQUENCE
{
    realization CHOICE
    {
        realizationDataPacketA DataPacketA,
        realizationDataPacketB DataPacketB
    }
}
-- Concrete packet implementation A
DataPacketA ::= SEQUENCE
{
    id PacketId(packetA),
    payload PayloadBase
}
-- Concrete packet implementation B
DataPacketB ::= SEQUENCE
{
    id PacketId(packetB),
    payload PayloadBase
}
END

