-- Timer Manager autogenerated code (from TASTE/Kazoo) : DO NOT EDIT
system demo_timer_manager;

   /* CIF TEXT (0, 0), (100, 100) */
   use dataview comment 'dataview-uniq.asn';
   signal pinger_pingertimer;

   exported procedure set_pinger_pingertimer;
      fpar in val T_UInt32;
   referenced;

   signal pinger_pingertimer_set (T_UInt32);
   signal pinger_pingertimer_reset;

   exported procedure reset_pinger_pingertimer;
   referenced;

   signal ponger_pongertimer;

   exported procedure set_ponger_pongertimer;
      fpar in val T_UInt32;
   referenced;

   signal ponger_pongertimer_set (T_UInt32);
   signal ponger_pongertimer_reset;

   exported procedure reset_ponger_pongertimer;
   referenced;

   /* CIF ENDTEXT */

   channel c
      from demo_timer_manager to env with
      pinger_pingertimer, pinger_pingertimer_set, pinger_pingertimer_reset, ponger_pongertimer, ponger_pongertimer_set, ponger_pongertimer_reset;

   endchannel;

   block demo_timer_manager;
      signalroute r
         from demo_timer_manager to env with
            pinger_pingertimer, pinger_pingertimer_set, pinger_pingertimer_reset, ponger_pongertimer, ponger_pongertimer_set, ponger_pongertimer_reset;


      connect c and r;

      process demo_timer_manager;
         /* CIF TEXT (0, 0), (100, 100) */

         procedure set_pinger_pingertimer;
            fpar in val T_UInt32;
         start;
            output pinger_pingertimer_set(val);
            return;
         endprocedure;
         procedure reset_pinger_pingertimer;
         start;
            output pinger_pingertimer_reset;
            return;
         endprocedure;
         procedure set_ponger_pongertimer;
            fpar in val T_UInt32;
         start;
            output ponger_pongertimer_set(val);
            return;
         endprocedure;
         procedure reset_ponger_pongertimer;
         start;
            output ponger_pongertimer_reset;
            return;
         endprocedure;
         /* CIF ENDTEXT */

         start;
         nextstate wait;
         state wait;
         endstate;
      endprocess demo_timer_manager;
   endblock;
endsystem;
