--------------------------------------------------------
--! File generated by asn2aadl v2.2-r7ce94a1: DO NOT EDIT !
--------------------------------------------------------
--! MadeInFastMode:True:
--! InputASN1FileChecksum:ff35cd78b1e82f09b63b209ab7cf7c34:/home/taste/tool-inst/share/taste-types/taste-types.asn:
--! InputASN1FileChecksum:f5b944b785fee7f4d10244c199cc212f:data_model/basic_types.asn:
--! InputASN1FileChecksum:557e6c7e89416c061fcb3b526e686ad0:data_model/bilevel_types.asn:
--! InputASN1FileChecksum:3b54759884c586a2e1468178a73e342e:data_model/uart_dlc.asn:
--! InputASN1FileChecksum:7788def2887f97004e4f7a84c541f4f1:uart_protocol_dlc.acn:
--! InputASN1FileChecksum:520d7245aae72bfb6a3c57971df133b5:uart_protocol_dlc.asn:
--------------------------------------------------------

package DataView

public

  with Data_Model;
  with Taste;
  with Base_Types;
  with Deployment;
DATA Simulink_Tunable_Parameter
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Simulink-Tunable-Parameter";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Simulink_Tunable_Parameter;

DATA Timer
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Timer";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Timer;

DATA Taste_directive
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Taste-directive";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Taste_directive;

DATA Taste_Implementation
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Taste-Implementation";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Taste_Implementation;


data Stream_Element_Buffer
    -- Root type for buffer elements
properties
    Data_Model::Data_Representation => Character;
end Stream_Element_Buffer;
DATA INT16
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "INT16";
    TASTE::Position_In_File => [ line => 24 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END INT16;

DATA IMPLEMENTATION INT16.impl
END INT16.impl;

DATA INT16_Buffer_Max
END INT16_Buffer_Max;

DATA IMPLEMENTATION INT16_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type INT16
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END INT16_Buffer_Max.impl;

DATA INT16_Buffer
END INT16_Buffer;

DATA IMPLEMENTATION INT16_Buffer.impl
    -- Buffer to hold a marshalled data of type INT16
SUBCOMPONENTS
    Buffer : data INT16_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END INT16_Buffer.impl;

DATA INT24
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "INT24";
    TASTE::Position_In_File => [ line => 26 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END INT24;

DATA IMPLEMENTATION INT24.impl
END INT24.impl;

DATA INT24_Buffer_Max
END INT24_Buffer_Max;

DATA IMPLEMENTATION INT24_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type INT24
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END INT24_Buffer_Max.impl;

DATA INT24_Buffer
END INT24_Buffer;

DATA IMPLEMENTATION INT24_Buffer.impl
    -- Buffer to hold a marshalled data of type INT24
SUBCOMPONENTS
    Buffer : data INT24_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END INT24_Buffer.impl;

DATA INT32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "INT32";
    TASTE::Position_In_File => [ line => 25 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END INT32;

DATA IMPLEMENTATION INT32.impl
END INT32.impl;

DATA INT32_Buffer_Max
END INT32_Buffer_Max;

DATA IMPLEMENTATION INT32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type INT32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END INT32_Buffer_Max.impl;

DATA INT32_Buffer
END INT32_Buffer;

DATA IMPLEMENTATION INT32_Buffer.impl
    -- Buffer to hold a marshalled data of type INT32
SUBCOMPONENTS
    Buffer : data INT32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END INT32_Buffer.impl;

DATA MyInteger
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("uart_protocol_dlc.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_UART_PROTOCOL_DLC_DATAVIEW);
    TASTE::Ada_Package_Name => "UART_PROTOCOL_DLC_DATAVIEW";
    Deployment::ASN1_Module_Name => "UART-PROTOCOL-DLC-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyInteger";
    TASTE::Position_In_File => [ line => 4 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END MyInteger;

DATA IMPLEMENTATION MyInteger.impl
END MyInteger.impl;

DATA MyInteger_Buffer_Max
END MyInteger_Buffer_Max;

DATA IMPLEMENTATION MyInteger_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyInteger
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END MyInteger_Buffer_Max.impl;

DATA MyInteger_Buffer
END MyInteger_Buffer;

DATA IMPLEMENTATION MyInteger_Buffer.impl
    -- Buffer to hold a marshalled data of type MyInteger
SUBCOMPONENTS
    Buffer : data MyInteger_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyInteger_Buffer.impl;

DATA T_ActiveInactiveState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-ActiveInactiveState";
    TASTE::Position_In_File => [ line => 18 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_ActiveInactiveState;

DATA IMPLEMENTATION T_ActiveInactiveState.impl
END T_ActiveInactiveState.impl;

DATA T_ActiveInactiveState_Buffer_Max
END T_ActiveInactiveState_Buffer_Max;

DATA IMPLEMENTATION T_ActiveInactiveState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_ActiveInactiveState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_ActiveInactiveState_Buffer_Max.impl;

DATA T_ActiveInactiveState_Buffer
END T_ActiveInactiveState_Buffer;

DATA IMPLEMENTATION T_ActiveInactiveState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_ActiveInactiveState
SUBCOMPONENTS
    Buffer : data T_ActiveInactiveState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_ActiveInactiveState_Buffer.impl;

DATA T_ArmedDisarmedState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-ArmedDisarmedState";
    TASTE::Position_In_File => [ line => 17 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_ArmedDisarmedState;

DATA IMPLEMENTATION T_ArmedDisarmedState.impl
END T_ArmedDisarmedState.impl;

DATA T_ArmedDisarmedState_Buffer_Max
END T_ArmedDisarmedState_Buffer_Max;

DATA IMPLEMENTATION T_ArmedDisarmedState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_ArmedDisarmedState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_ArmedDisarmedState_Buffer_Max.impl;

DATA T_ArmedDisarmedState_Buffer
END T_ArmedDisarmedState_Buffer;

DATA IMPLEMENTATION T_ArmedDisarmedState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_ArmedDisarmedState
SUBCOMPONENTS
    Buffer : data T_ArmedDisarmedState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_ArmedDisarmedState_Buffer.impl;

DATA T_Bit
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Bit";
    TASTE::Position_In_File => [ line => 21 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Bit;

DATA IMPLEMENTATION T_Bit.impl
END T_Bit.impl;

DATA T_Bit_Buffer_Max
END T_Bit_Buffer_Max;

DATA IMPLEMENTATION T_Bit_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Bit
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Bit_Buffer_Max.impl;

DATA T_Bit_Buffer
END T_Bit_Buffer;

DATA IMPLEMENTATION T_Bit_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Bit
SUBCOMPONENTS
    Buffer : data T_Bit_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Bit_Buffer.impl;

DATA T_Boolean
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Boolean";
    TASTE::Position_In_File => [ line => 14 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aBOOLEAN;
END T_Boolean;

DATA IMPLEMENTATION T_Boolean.impl
END T_Boolean.impl;

DATA T_Boolean_Buffer_Max
END T_Boolean_Buffer_Max;

DATA IMPLEMENTATION T_Boolean_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Boolean
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Boolean_Buffer_Max.impl;

DATA T_Boolean_Buffer
END T_Boolean_Buffer;

DATA IMPLEMENTATION T_Boolean_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Boolean
SUBCOMPONENTS
    Buffer : data T_Boolean_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Boolean_Buffer.impl;

DATA T_ConnectionState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-ConnectionState";
    TASTE::Position_In_File => [ line => 7 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_ConnectionState;

DATA IMPLEMENTATION T_ConnectionState.impl
END T_ConnectionState.impl;

DATA T_ConnectionState_Buffer_Max
END T_ConnectionState_Buffer_Max;

DATA IMPLEMENTATION T_ConnectionState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_ConnectionState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_ConnectionState_Buffer_Max.impl;

DATA T_ConnectionState_Buffer
END T_ConnectionState_Buffer;

DATA IMPLEMENTATION T_ConnectionState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_ConnectionState
SUBCOMPONENTS
    Buffer : data T_ConnectionState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_ConnectionState_Buffer.impl;

DATA T_EnabledInhibitedState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-EnabledInhibitedState";
    TASTE::Position_In_File => [ line => 19 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_EnabledInhibitedState;

DATA IMPLEMENTATION T_EnabledInhibitedState.impl
END T_EnabledInhibitedState.impl;

DATA T_EnabledInhibitedState_Buffer_Max
END T_EnabledInhibitedState_Buffer_Max;

DATA IMPLEMENTATION T_EnabledInhibitedState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_EnabledInhibitedState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_EnabledInhibitedState_Buffer_Max.impl;

DATA T_EnabledInhibitedState_Buffer
END T_EnabledInhibitedState_Buffer;

DATA IMPLEMENTATION T_EnabledInhibitedState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_EnabledInhibitedState
SUBCOMPONENTS
    Buffer : data T_EnabledInhibitedState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_EnabledInhibitedState_Buffer.impl;

DATA T_FaultState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-FaultState";
    TASTE::Position_In_File => [ line => 9 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_FaultState;

DATA IMPLEMENTATION T_FaultState.impl
END T_FaultState.impl;

DATA T_FaultState_Buffer_Max
END T_FaultState_Buffer_Max;

DATA IMPLEMENTATION T_FaultState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_FaultState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_FaultState_Buffer_Max.impl;

DATA T_FaultState_Buffer
END T_FaultState_Buffer;

DATA IMPLEMENTATION T_FaultState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_FaultState
SUBCOMPONENTS
    Buffer : data T_FaultState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_FaultState_Buffer.impl;

DATA T_FlagState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-FlagState";
    TASTE::Position_In_File => [ line => 20 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_FlagState;

DATA IMPLEMENTATION T_FlagState.impl
END T_FlagState.impl;

DATA T_FlagState_Buffer_Max
END T_FlagState_Buffer_Max;

DATA IMPLEMENTATION T_FlagState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_FlagState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_FlagState_Buffer_Max.impl;

DATA T_FlagState_Buffer
END T_FlagState_Buffer;

DATA IMPLEMENTATION T_FlagState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_FlagState
SUBCOMPONENTS
    Buffer : data T_FlagState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_FlagState_Buffer.impl;

DATA T_ForwardBackwardState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-ForwardBackwardState";
    TASTE::Position_In_File => [ line => 12 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_ForwardBackwardState;

DATA IMPLEMENTATION T_ForwardBackwardState.impl
END T_ForwardBackwardState.impl;

DATA T_ForwardBackwardState_Buffer_Max
END T_ForwardBackwardState_Buffer_Max;

DATA IMPLEMENTATION T_ForwardBackwardState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_ForwardBackwardState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_ForwardBackwardState_Buffer_Max.impl;

DATA T_ForwardBackwardState_Buffer
END T_ForwardBackwardState_Buffer;

DATA IMPLEMENTATION T_ForwardBackwardState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_ForwardBackwardState
SUBCOMPONENTS
    Buffer : data T_ForwardBackwardState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_ForwardBackwardState_Buffer.impl;

DATA T_HighLowState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-HighLowState";
    TASTE::Position_In_File => [ line => 22 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_HighLowState;

DATA IMPLEMENTATION T_HighLowState.impl
END T_HighLowState.impl;

DATA T_HighLowState_Buffer_Max
END T_HighLowState_Buffer_Max;

DATA IMPLEMENTATION T_HighLowState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_HighLowState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_HighLowState_Buffer_Max.impl;

DATA T_HighLowState_Buffer
END T_HighLowState_Buffer;

DATA IMPLEMENTATION T_HighLowState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_HighLowState
SUBCOMPONENTS
    Buffer : data T_HighLowState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_HighLowState_Buffer.impl;

DATA T_Int32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int32";
    TASTE::Position_In_File => [ line => 6 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int32;

DATA IMPLEMENTATION T_Int32.impl
END T_Int32.impl;

DATA T_Int32_Buffer_Max
END T_Int32_Buffer_Max;

DATA IMPLEMENTATION T_Int32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int32_Buffer_Max.impl;

DATA T_Int32_Buffer
END T_Int32_Buffer;

DATA IMPLEMENTATION T_Int32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int32
SUBCOMPONENTS
    Buffer : data T_Int32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int32_Buffer.impl;

DATA T_Int8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int8";
    TASTE::Position_In_File => [ line => 10 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int8;

DATA IMPLEMENTATION T_Int8.impl
END T_Int8.impl;

DATA T_Int8_Buffer_Max
END T_Int8_Buffer_Max;

DATA IMPLEMENTATION T_Int8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int8_Buffer_Max.impl;

DATA T_Int8_Buffer
END T_Int8_Buffer;

DATA IMPLEMENTATION T_Int8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int8
SUBCOMPONENTS
    Buffer : data T_Int8_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int8_Buffer.impl;

DATA T_LeftRightState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-LeftRightState";
    TASTE::Position_In_File => [ line => 13 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_LeftRightState;

DATA IMPLEMENTATION T_LeftRightState.impl
END T_LeftRightState.impl;

DATA T_LeftRightState_Buffer_Max
END T_LeftRightState_Buffer_Max;

DATA IMPLEMENTATION T_LeftRightState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_LeftRightState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_LeftRightState_Buffer_Max.impl;

DATA T_LeftRightState_Buffer
END T_LeftRightState_Buffer;

DATA IMPLEMENTATION T_LeftRightState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_LeftRightState
SUBCOMPONENTS
    Buffer : data T_LeftRightState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_LeftRightState_Buffer.impl;

DATA T_LockedUnlockedState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-LockedUnlockedState";
    TASTE::Position_In_File => [ line => 24 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_LockedUnlockedState;

DATA IMPLEMENTATION T_LockedUnlockedState.impl
END T_LockedUnlockedState.impl;

DATA T_LockedUnlockedState_Buffer_Max
END T_LockedUnlockedState_Buffer_Max;

DATA IMPLEMENTATION T_LockedUnlockedState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_LockedUnlockedState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_LockedUnlockedState_Buffer_Max.impl;

DATA T_LockedUnlockedState_Buffer
END T_LockedUnlockedState_Buffer;

DATA IMPLEMENTATION T_LockedUnlockedState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_LockedUnlockedState
SUBCOMPONENTS
    Buffer : data T_LockedUnlockedState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_LockedUnlockedState_Buffer.impl;

DATA T_MovingStillState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-MovingStillState";
    TASTE::Position_In_File => [ line => 15 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_MovingStillState;

DATA IMPLEMENTATION T_MovingStillState.impl
END T_MovingStillState.impl;

DATA T_MovingStillState_Buffer_Max
END T_MovingStillState_Buffer_Max;

DATA IMPLEMENTATION T_MovingStillState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_MovingStillState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_MovingStillState_Buffer_Max.impl;

DATA T_MovingStillState_Buffer
END T_MovingStillState_Buffer;

DATA IMPLEMENTATION T_MovingStillState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_MovingStillState
SUBCOMPONENTS
    Buffer : data T_MovingStillState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_MovingStillState_Buffer.impl;

DATA T_NominalRedundantState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-NominalRedundantState";
    TASTE::Position_In_File => [ line => 6 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_NominalRedundantState;

DATA IMPLEMENTATION T_NominalRedundantState.impl
END T_NominalRedundantState.impl;

DATA T_NominalRedundantState_Buffer_Max
END T_NominalRedundantState_Buffer_Max;

DATA IMPLEMENTATION T_NominalRedundantState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_NominalRedundantState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_NominalRedundantState_Buffer_Max.impl;

DATA T_NominalRedundantState_Buffer
END T_NominalRedundantState_Buffer;

DATA IMPLEMENTATION T_NominalRedundantState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_NominalRedundantState
SUBCOMPONENTS
    Buffer : data T_NominalRedundantState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_NominalRedundantState_Buffer.impl;

DATA T_Null_Record
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Null-Record";
    TASTE::Position_In_File => [ line => 16 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END T_Null_Record;

DATA IMPLEMENTATION T_Null_Record.impl
END T_Null_Record.impl;

DATA T_Null_Record_Buffer_Max
END T_Null_Record_Buffer_Max;

DATA IMPLEMENTATION T_Null_Record_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Null_Record
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Null_Record_Buffer_Max.impl;

DATA T_Null_Record_Buffer
END T_Null_Record_Buffer;

DATA IMPLEMENTATION T_Null_Record_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Null_Record
SUBCOMPONENTS
    Buffer : data T_Null_Record_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Null_Record_Buffer.impl;

DATA T_OCTET
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-OCTET";
    TASTE::Position_In_File => [ line => 28 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSTRING;
END T_OCTET;

DATA IMPLEMENTATION T_OCTET.impl
END T_OCTET.impl;

DATA T_OCTET_Buffer_Max
END T_OCTET_Buffer_Max;

DATA IMPLEMENTATION T_OCTET_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_OCTET
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_OCTET_Buffer_Max.impl;

DATA T_OCTET_Buffer
END T_OCTET_Buffer;

DATA IMPLEMENTATION T_OCTET_Buffer.impl
    -- Buffer to hold a marshalled data of type T_OCTET
SUBCOMPONENTS
    Buffer : data T_OCTET_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_OCTET_Buffer.impl;

DATA T_OnOffState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-OnOffState";
    TASTE::Position_In_File => [ line => 5 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_OnOffState;

DATA IMPLEMENTATION T_OnOffState.impl
END T_OnOffState.impl;

DATA T_OnOffState_Buffer_Max
END T_OnOffState_Buffer_Max;

DATA IMPLEMENTATION T_OnOffState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_OnOffState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_OnOffState_Buffer_Max.impl;

DATA T_OnOffState_Buffer
END T_OnOffState_Buffer;

DATA IMPLEMENTATION T_OnOffState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_OnOffState
SUBCOMPONENTS
    Buffer : data T_OnOffState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_OnOffState_Buffer.impl;

DATA T_OverrideState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-OverrideState";
    TASTE::Position_In_File => [ line => 23 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_OverrideState;

DATA IMPLEMENTATION T_OverrideState.impl
END T_OverrideState.impl;

DATA T_OverrideState_Buffer_Max
END T_OverrideState_Buffer_Max;

DATA IMPLEMENTATION T_OverrideState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_OverrideState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_OverrideState_Buffer_Max.impl;

DATA T_OverrideState_Buffer
END T_OverrideState_Buffer;

DATA IMPLEMENTATION T_OverrideState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_OverrideState
SUBCOMPONENTS
    Buffer : data T_OverrideState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_OverrideState_Buffer.impl;

DATA T_PlusMinusState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-PlusMinusState";
    TASTE::Position_In_File => [ line => 16 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_PlusMinusState;

DATA IMPLEMENTATION T_PlusMinusState.impl
END T_PlusMinusState.impl;

DATA T_PlusMinusState_Buffer_Max
END T_PlusMinusState_Buffer_Max;

DATA IMPLEMENTATION T_PlusMinusState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_PlusMinusState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_PlusMinusState_Buffer_Max.impl;

DATA T_PlusMinusState_Buffer
END T_PlusMinusState_Buffer;

DATA IMPLEMENTATION T_PlusMinusState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_PlusMinusState
SUBCOMPONENTS
    Buffer : data T_PlusMinusState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_PlusMinusState_Buffer.impl;

DATA T_PresenceState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-PresenceState";
    TASTE::Position_In_File => [ line => 11 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_PresenceState;

DATA IMPLEMENTATION T_PresenceState.impl
END T_PresenceState.impl;

DATA T_PresenceState_Buffer_Max
END T_PresenceState_Buffer_Max;

DATA IMPLEMENTATION T_PresenceState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_PresenceState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_PresenceState_Buffer_Max.impl;

DATA T_PresenceState_Buffer
END T_PresenceState_Buffer;

DATA IMPLEMENTATION T_PresenceState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_PresenceState
SUBCOMPONENTS
    Buffer : data T_PresenceState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_PresenceState_Buffer.impl;

DATA T_RMAPCRCTable
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/uart_dlc.asn");
    TASTE::Ada_Package_Name => "UART_DLC";
    Deployment::ASN1_Module_Name => "UART-DLC";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-RMAPCRCTable";
    TASTE::Position_In_File => [ line => 45 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END T_RMAPCRCTable;

DATA IMPLEMENTATION T_RMAPCRCTable.impl
END T_RMAPCRCTable.impl;

DATA T_RMAPCRCTable_Buffer_Max
END T_RMAPCRCTable_Buffer_Max;

DATA IMPLEMENTATION T_RMAPCRCTable_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_RMAPCRCTable
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_RMAPCRCTable_Buffer_Max.impl;

DATA T_RMAPCRCTable_Buffer
END T_RMAPCRCTable_Buffer;

DATA IMPLEMENTATION T_RMAPCRCTable_Buffer.impl
    -- Buffer to hold a marshalled data of type T_RMAPCRCTable
SUBCOMPONENTS
    Buffer : data T_RMAPCRCTable_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_RMAPCRCTable_Buffer.impl;

DATA T_SelectionState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-SelectionState";
    TASTE::Position_In_File => [ line => 10 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_SelectionState;

DATA IMPLEMENTATION T_SelectionState.impl
END T_SelectionState.impl;

DATA T_SelectionState_Buffer_Max
END T_SelectionState_Buffer_Max;

DATA IMPLEMENTATION T_SelectionState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_SelectionState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_SelectionState_Buffer_Max.impl;

DATA T_SelectionState_Buffer
END T_SelectionState_Buffer;

DATA IMPLEMENTATION T_SelectionState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_SelectionState
SUBCOMPONENTS
    Buffer : data T_SelectionState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_SelectionState_Buffer.impl;

DATA T_SuccessFailState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-SuccessFailState";
    TASTE::Position_In_File => [ line => 21 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_SuccessFailState;

DATA IMPLEMENTATION T_SuccessFailState.impl
END T_SuccessFailState.impl;

DATA T_SuccessFailState_Buffer_Max
END T_SuccessFailState_Buffer_Max;

DATA IMPLEMENTATION T_SuccessFailState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_SuccessFailState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_SuccessFailState_Buffer_Max.impl;

DATA T_SuccessFailState_Buffer
END T_SuccessFailState_Buffer;

DATA IMPLEMENTATION T_SuccessFailState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_SuccessFailState
SUBCOMPONENTS
    Buffer : data T_SuccessFailState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_SuccessFailState_Buffer.impl;

DATA T_SwitchState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-SwitchState";
    TASTE::Position_In_File => [ line => 8 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_SwitchState;

DATA IMPLEMENTATION T_SwitchState.impl
END T_SwitchState.impl;

DATA T_SwitchState_Buffer_Max
END T_SwitchState_Buffer_Max;

DATA IMPLEMENTATION T_SwitchState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_SwitchState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_SwitchState_Buffer_Max.impl;

DATA T_SwitchState_Buffer
END T_SwitchState_Buffer;

DATA IMPLEMENTATION T_SwitchState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_SwitchState
SUBCOMPONENTS
    Buffer : data T_SwitchState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_SwitchState_Buffer.impl;

DATA T_UART_DLC_FrameBuffer
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/uart_dlc.asn");
    TASTE::Ada_Package_Name => "UART_DLC";
    Deployment::ASN1_Module_Name => "UART-DLC";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UART-DLC-FrameBuffer";
    TASTE::Position_In_File => [ line => 16 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSTRING;
END T_UART_DLC_FrameBuffer;

DATA IMPLEMENTATION T_UART_DLC_FrameBuffer.impl
END T_UART_DLC_FrameBuffer.impl;

DATA T_UART_DLC_FrameBuffer_Buffer_Max
END T_UART_DLC_FrameBuffer_Buffer_Max;

DATA IMPLEMENTATION T_UART_DLC_FrameBuffer_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UART_DLC_FrameBuffer
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UART_DLC_FrameBuffer_Buffer_Max.impl;

DATA T_UART_DLC_FrameBuffer_Buffer
END T_UART_DLC_FrameBuffer_Buffer;

DATA IMPLEMENTATION T_UART_DLC_FrameBuffer_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UART_DLC_FrameBuffer
SUBCOMPONENTS
    Buffer : data T_UART_DLC_FrameBuffer_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UART_DLC_FrameBuffer_Buffer.impl;

DATA T_UART_DLC_FrameCRC
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/uart_dlc.asn");
    TASTE::Ada_Package_Name => "UART_DLC";
    Deployment::ASN1_Module_Name => "UART-DLC";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UART-DLC-FrameCRC";
    TASTE::Position_In_File => [ line => 14 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UART_DLC_FrameCRC;

DATA IMPLEMENTATION T_UART_DLC_FrameCRC.impl
END T_UART_DLC_FrameCRC.impl;

DATA T_UART_DLC_FrameCRC_Buffer_Max
END T_UART_DLC_FrameCRC_Buffer_Max;

DATA IMPLEMENTATION T_UART_DLC_FrameCRC_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UART_DLC_FrameCRC
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UART_DLC_FrameCRC_Buffer_Max.impl;

DATA T_UART_DLC_FrameCRC_Buffer
END T_UART_DLC_FrameCRC_Buffer;

DATA IMPLEMENTATION T_UART_DLC_FrameCRC_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UART_DLC_FrameCRC
SUBCOMPONENTS
    Buffer : data T_UART_DLC_FrameCRC_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UART_DLC_FrameCRC_Buffer.impl;

DATA T_UART_DLC_Header
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/uart_dlc.asn");
    TASTE::Ada_Package_Name => "UART_DLC";
    Deployment::ASN1_Module_Name => "UART-DLC";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UART-DLC-Header";
    TASTE::Position_In_File => [ line => 14 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UART_DLC_Header;

DATA IMPLEMENTATION T_UART_DLC_Header.impl
END T_UART_DLC_Header.impl;

DATA T_UART_DLC_Header_Buffer_Max
END T_UART_DLC_Header_Buffer_Max;

DATA IMPLEMENTATION T_UART_DLC_Header_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UART_DLC_Header
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UART_DLC_Header_Buffer_Max.impl;

DATA T_UART_DLC_Header_Buffer
END T_UART_DLC_Header_Buffer;

DATA IMPLEMENTATION T_UART_DLC_Header_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UART_DLC_Header
SUBCOMPONENTS
    Buffer : data T_UART_DLC_Header_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UART_DLC_Header_Buffer.impl;

DATA T_UART_DLC_PDU
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/uart_dlc.asn");
    TASTE::Ada_Package_Name => "UART_DLC";
    Deployment::ASN1_Module_Name => "UART-DLC";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UART-DLC-PDU";
    TASTE::Position_In_File => [ line => 30 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END T_UART_DLC_PDU;

DATA IMPLEMENTATION T_UART_DLC_PDU.impl
END T_UART_DLC_PDU.impl;

DATA T_UART_DLC_PDU_Buffer_Max
END T_UART_DLC_PDU_Buffer_Max;

DATA IMPLEMENTATION T_UART_DLC_PDU_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UART_DLC_PDU
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UART_DLC_PDU_Buffer_Max.impl;

DATA T_UART_DLC_PDU_Buffer
END T_UART_DLC_PDU_Buffer;

DATA IMPLEMENTATION T_UART_DLC_PDU_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UART_DLC_PDU
SUBCOMPONENTS
    Buffer : data T_UART_DLC_PDU_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UART_DLC_PDU_Buffer.impl;

DATA T_UART_DLC_RxErrorCode
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/uart_dlc.asn");
    TASTE::Ada_Package_Name => "UART_DLC";
    Deployment::ASN1_Module_Name => "UART-DLC";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UART-DLC-RxErrorCode";
    TASTE::Position_In_File => [ line => 36 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_UART_DLC_RxErrorCode;

DATA IMPLEMENTATION T_UART_DLC_RxErrorCode.impl
END T_UART_DLC_RxErrorCode.impl;

DATA T_UART_DLC_RxErrorCode_Buffer_Max
END T_UART_DLC_RxErrorCode_Buffer_Max;

DATA IMPLEMENTATION T_UART_DLC_RxErrorCode_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UART_DLC_RxErrorCode
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UART_DLC_RxErrorCode_Buffer_Max.impl;

DATA T_UART_DLC_RxErrorCode_Buffer
END T_UART_DLC_RxErrorCode_Buffer;

DATA IMPLEMENTATION T_UART_DLC_RxErrorCode_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UART_DLC_RxErrorCode
SUBCOMPONENTS
    Buffer : data T_UART_DLC_RxErrorCode_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UART_DLC_RxErrorCode_Buffer.impl;

DATA T_UART_DLC_SDU
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/uart_dlc.asn");
    TASTE::Ada_Package_Name => "UART_DLC";
    Deployment::ASN1_Module_Name => "UART-DLC";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UART-DLC-SDU";
    TASTE::Position_In_File => [ line => 28 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSTRING;
END T_UART_DLC_SDU;

DATA IMPLEMENTATION T_UART_DLC_SDU.impl
END T_UART_DLC_SDU.impl;

DATA T_UART_DLC_SDU_Buffer_Max
END T_UART_DLC_SDU_Buffer_Max;

DATA IMPLEMENTATION T_UART_DLC_SDU_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UART_DLC_SDU
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UART_DLC_SDU_Buffer_Max.impl;

DATA T_UART_DLC_SDU_Buffer
END T_UART_DLC_SDU_Buffer;

DATA IMPLEMENTATION T_UART_DLC_SDU_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UART_DLC_SDU
SUBCOMPONENTS
    Buffer : data T_UART_DLC_SDU_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UART_DLC_SDU_Buffer.impl;

DATA T_UInt32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt32";
    TASTE::Position_In_File => [ line => 8 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt32;

DATA IMPLEMENTATION T_UInt32.impl
END T_UInt32.impl;

DATA T_UInt32_Buffer_Max
END T_UInt32_Buffer_Max;

DATA IMPLEMENTATION T_UInt32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt32_Buffer_Max.impl;

DATA T_UInt32_Buffer
END T_UInt32_Buffer;

DATA IMPLEMENTATION T_UInt32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt32
SUBCOMPONENTS
    Buffer : data T_UInt32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt32_Buffer.impl;

DATA T_UInt8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt8";
    TASTE::Position_In_File => [ line => 12 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt8;

DATA IMPLEMENTATION T_UInt8.impl
END T_UInt8.impl;

DATA T_UInt8_Buffer_Max
END T_UInt8_Buffer_Max;

DATA IMPLEMENTATION T_UInt8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt8_Buffer_Max.impl;

DATA T_UInt8_Buffer
END T_UInt8_Buffer;

DATA IMPLEMENTATION T_UInt8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt8
SUBCOMPONENTS
    Buffer : data T_UInt8_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt8_Buffer.impl;

DATA T_UsedUnusedState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UsedUnusedState";
    TASTE::Position_In_File => [ line => 14 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_UsedUnusedState;

DATA IMPLEMENTATION T_UsedUnusedState.impl
END T_UsedUnusedState.impl;

DATA T_UsedUnusedState_Buffer_Max
END T_UsedUnusedState_Buffer_Max;

DATA IMPLEMENTATION T_UsedUnusedState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UsedUnusedState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UsedUnusedState_Buffer_Max.impl;

DATA T_UsedUnusedState_Buffer
END T_UsedUnusedState_Buffer;

DATA IMPLEMENTATION T_UsedUnusedState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UsedUnusedState
SUBCOMPONENTS
    Buffer : data T_UsedUnusedState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UsedUnusedState_Buffer.impl;

DATA T_ValidInvalidState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-ValidInvalidState";
    TASTE::Position_In_File => [ line => 26 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_ValidInvalidState;

DATA IMPLEMENTATION T_ValidInvalidState.impl
END T_ValidInvalidState.impl;

DATA T_ValidInvalidState_Buffer_Max
END T_ValidInvalidState_Buffer_Max;

DATA IMPLEMENTATION T_ValidInvalidState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_ValidInvalidState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_ValidInvalidState_Buffer_Max.impl;

DATA T_ValidInvalidState_Buffer
END T_ValidInvalidState_Buffer;

DATA IMPLEMENTATION T_ValidInvalidState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_ValidInvalidState
SUBCOMPONENTS
    Buffer : data T_ValidInvalidState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_ValidInvalidState_Buffer.impl;

DATA T_WarningState
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/bilevel_types.asn");
    TASTE::Ada_Package_Name => "Bilevel_Types";
    Deployment::ASN1_Module_Name => "Bilevel-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-WarningState";
    TASTE::Position_In_File => [ line => 25 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END T_WarningState;

DATA IMPLEMENTATION T_WarningState.impl
END T_WarningState.impl;

DATA T_WarningState_Buffer_Max
END T_WarningState_Buffer_Max;

DATA IMPLEMENTATION T_WarningState_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_WarningState
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_WarningState_Buffer_Max.impl;

DATA T_WarningState_Buffer
END T_WarningState_Buffer;

DATA IMPLEMENTATION T_WarningState_Buffer.impl
    -- Buffer to hold a marshalled data of type T_WarningState
SUBCOMPONENTS
    Buffer : data T_WarningState_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_WarningState_Buffer.impl;

DATA UINT1
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UINT1";
    TASTE::Position_In_File => [ line => 21 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END UINT1;

DATA IMPLEMENTATION UINT1.impl
END UINT1.impl;

DATA UINT1_Buffer_Max
END UINT1_Buffer_Max;

DATA IMPLEMENTATION UINT1_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UINT1
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UINT1_Buffer_Max.impl;

DATA UINT1_Buffer
END UINT1_Buffer;

DATA IMPLEMENTATION UINT1_Buffer.impl
    -- Buffer to hold a marshalled data of type UINT1
SUBCOMPONENTS
    Buffer : data UINT1_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UINT1_Buffer.impl;

DATA UINT10
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UINT10";
    TASTE::Position_In_File => [ line => 13 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END UINT10;

DATA IMPLEMENTATION UINT10.impl
END UINT10.impl;

DATA UINT10_Buffer_Max
END UINT10_Buffer_Max;

DATA IMPLEMENTATION UINT10_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UINT10
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UINT10_Buffer_Max.impl;

DATA UINT10_Buffer
END UINT10_Buffer;

DATA IMPLEMENTATION UINT10_Buffer.impl
    -- Buffer to hold a marshalled data of type UINT10
SUBCOMPONENTS
    Buffer : data UINT10_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UINT10_Buffer.impl;

DATA UINT11
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UINT11";
    TASTE::Position_In_File => [ line => 12 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END UINT11;

DATA IMPLEMENTATION UINT11.impl
END UINT11.impl;

DATA UINT11_Buffer_Max
END UINT11_Buffer_Max;

DATA IMPLEMENTATION UINT11_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UINT11
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UINT11_Buffer_Max.impl;

DATA UINT11_Buffer
END UINT11_Buffer;

DATA IMPLEMENTATION UINT11_Buffer.impl
    -- Buffer to hold a marshalled data of type UINT11
SUBCOMPONENTS
    Buffer : data UINT11_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UINT11_Buffer.impl;

DATA UINT12
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UINT12";
    TASTE::Position_In_File => [ line => 11 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END UINT12;

DATA IMPLEMENTATION UINT12.impl
END UINT12.impl;

DATA UINT12_Buffer_Max
END UINT12_Buffer_Max;

DATA IMPLEMENTATION UINT12_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UINT12
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UINT12_Buffer_Max.impl;

DATA UINT12_Buffer
END UINT12_Buffer;

DATA IMPLEMENTATION UINT12_Buffer.impl
    -- Buffer to hold a marshalled data of type UINT12
SUBCOMPONENTS
    Buffer : data UINT12_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UINT12_Buffer.impl;

DATA UINT14
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UINT14";
    TASTE::Position_In_File => [ line => 10 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END UINT14;

DATA IMPLEMENTATION UINT14.impl
END UINT14.impl;

DATA UINT14_Buffer_Max
END UINT14_Buffer_Max;

DATA IMPLEMENTATION UINT14_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UINT14
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UINT14_Buffer_Max.impl;

DATA UINT14_Buffer
END UINT14_Buffer;

DATA IMPLEMENTATION UINT14_Buffer.impl
    -- Buffer to hold a marshalled data of type UINT14
SUBCOMPONENTS
    Buffer : data UINT14_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UINT14_Buffer.impl;

DATA UINT16
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UINT16";
    TASTE::Position_In_File => [ line => 9 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END UINT16;

DATA IMPLEMENTATION UINT16.impl
END UINT16.impl;

DATA UINT16_Buffer_Max
END UINT16_Buffer_Max;

DATA IMPLEMENTATION UINT16_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UINT16
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UINT16_Buffer_Max.impl;

DATA UINT16_Buffer
END UINT16_Buffer;

DATA IMPLEMENTATION UINT16_Buffer.impl
    -- Buffer to hold a marshalled data of type UINT16
SUBCOMPONENTS
    Buffer : data UINT16_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UINT16_Buffer.impl;

DATA UINT2
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UINT2";
    TASTE::Position_In_File => [ line => 20 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END UINT2;

DATA IMPLEMENTATION UINT2.impl
END UINT2.impl;

DATA UINT2_Buffer_Max
END UINT2_Buffer_Max;

DATA IMPLEMENTATION UINT2_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UINT2
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UINT2_Buffer_Max.impl;

DATA UINT2_Buffer
END UINT2_Buffer;

DATA IMPLEMENTATION UINT2_Buffer.impl
    -- Buffer to hold a marshalled data of type UINT2
SUBCOMPONENTS
    Buffer : data UINT2_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UINT2_Buffer.impl;

DATA UINT24
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UINT24";
    TASTE::Position_In_File => [ line => 8 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END UINT24;

DATA IMPLEMENTATION UINT24.impl
END UINT24.impl;

DATA UINT24_Buffer_Max
END UINT24_Buffer_Max;

DATA IMPLEMENTATION UINT24_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UINT24
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UINT24_Buffer_Max.impl;

DATA UINT24_Buffer
END UINT24_Buffer;

DATA IMPLEMENTATION UINT24_Buffer.impl
    -- Buffer to hold a marshalled data of type UINT24
SUBCOMPONENTS
    Buffer : data UINT24_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UINT24_Buffer.impl;

DATA UINT3
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UINT3";
    TASTE::Position_In_File => [ line => 19 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END UINT3;

DATA IMPLEMENTATION UINT3.impl
END UINT3.impl;

DATA UINT3_Buffer_Max
END UINT3_Buffer_Max;

DATA IMPLEMENTATION UINT3_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UINT3
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UINT3_Buffer_Max.impl;

DATA UINT3_Buffer
END UINT3_Buffer;

DATA IMPLEMENTATION UINT3_Buffer.impl
    -- Buffer to hold a marshalled data of type UINT3
SUBCOMPONENTS
    Buffer : data UINT3_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UINT3_Buffer.impl;

DATA UINT32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UINT32";
    TASTE::Position_In_File => [ line => 7 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END UINT32;

DATA IMPLEMENTATION UINT32.impl
END UINT32.impl;

DATA UINT32_Buffer_Max
END UINT32_Buffer_Max;

DATA IMPLEMENTATION UINT32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UINT32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UINT32_Buffer_Max.impl;

DATA UINT32_Buffer
END UINT32_Buffer;

DATA IMPLEMENTATION UINT32_Buffer.impl
    -- Buffer to hold a marshalled data of type UINT32
SUBCOMPONENTS
    Buffer : data UINT32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UINT32_Buffer.impl;

DATA UINT4
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UINT4";
    TASTE::Position_In_File => [ line => 18 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END UINT4;

DATA IMPLEMENTATION UINT4.impl
END UINT4.impl;

DATA UINT4_Buffer_Max
END UINT4_Buffer_Max;

DATA IMPLEMENTATION UINT4_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UINT4
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UINT4_Buffer_Max.impl;

DATA UINT4_Buffer
END UINT4_Buffer;

DATA IMPLEMENTATION UINT4_Buffer.impl
    -- Buffer to hold a marshalled data of type UINT4
SUBCOMPONENTS
    Buffer : data UINT4_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UINT4_Buffer.impl;

DATA UINT40
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UINT40";
    TASTE::Position_In_File => [ line => 6 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END UINT40;

DATA IMPLEMENTATION UINT40.impl
END UINT40.impl;

DATA UINT40_Buffer_Max
END UINT40_Buffer_Max;

DATA IMPLEMENTATION UINT40_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UINT40
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UINT40_Buffer_Max.impl;

DATA UINT40_Buffer
END UINT40_Buffer;

DATA IMPLEMENTATION UINT40_Buffer.impl
    -- Buffer to hold a marshalled data of type UINT40
SUBCOMPONENTS
    Buffer : data UINT40_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UINT40_Buffer.impl;

DATA UINT5
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UINT5";
    TASTE::Position_In_File => [ line => 17 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END UINT5;

DATA IMPLEMENTATION UINT5.impl
END UINT5.impl;

DATA UINT5_Buffer_Max
END UINT5_Buffer_Max;

DATA IMPLEMENTATION UINT5_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UINT5
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UINT5_Buffer_Max.impl;

DATA UINT5_Buffer
END UINT5_Buffer;

DATA IMPLEMENTATION UINT5_Buffer.impl
    -- Buffer to hold a marshalled data of type UINT5
SUBCOMPONENTS
    Buffer : data UINT5_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UINT5_Buffer.impl;

DATA UINT6
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UINT6";
    TASTE::Position_In_File => [ line => 16 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END UINT6;

DATA IMPLEMENTATION UINT6.impl
END UINT6.impl;

DATA UINT6_Buffer_Max
END UINT6_Buffer_Max;

DATA IMPLEMENTATION UINT6_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UINT6
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UINT6_Buffer_Max.impl;

DATA UINT6_Buffer
END UINT6_Buffer;

DATA IMPLEMENTATION UINT6_Buffer.impl
    -- Buffer to hold a marshalled data of type UINT6
SUBCOMPONENTS
    Buffer : data UINT6_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UINT6_Buffer.impl;

DATA UINT7
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UINT7";
    TASTE::Position_In_File => [ line => 15 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END UINT7;

DATA IMPLEMENTATION UINT7.impl
END UINT7.impl;

DATA UINT7_Buffer_Max
END UINT7_Buffer_Max;

DATA IMPLEMENTATION UINT7_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UINT7
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UINT7_Buffer_Max.impl;

DATA UINT7_Buffer
END UINT7_Buffer;

DATA IMPLEMENTATION UINT7_Buffer.impl
    -- Buffer to hold a marshalled data of type UINT7
SUBCOMPONENTS
    Buffer : data UINT7_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UINT7_Buffer.impl;

DATA UINT8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("data_model/basic_types.asn");
    TASTE::Ada_Package_Name => "Basic_Types";
    Deployment::ASN1_Module_Name => "Basic-Types";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "UINT8";
    TASTE::Position_In_File => [ line => 14 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END UINT8;

DATA IMPLEMENTATION UINT8.impl
END UINT8.impl;

DATA UINT8_Buffer_Max
END UINT8_Buffer_Max;

DATA IMPLEMENTATION UINT8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type UINT8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END UINT8_Buffer_Max.impl;

DATA UINT8_Buffer
END UINT8_Buffer;

DATA IMPLEMENTATION UINT8_Buffer.impl
    -- Buffer to hold a marshalled data of type UINT8
SUBCOMPONENTS
    Buffer : data UINT8_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END UINT8_Buffer.impl;

SYSTEM Taste_DataView
END    Taste_DataView;

SYSTEM IMPLEMENTATION Taste_DataView.others
SUBCOMPONENTS
   INT16 : DATA INT16.impl;
   INT24 : DATA INT24.impl;
   INT32 : DATA INT32.impl;
   MyInteger : DATA MyInteger.impl;
   T_ActiveInactiveState : DATA T_ActiveInactiveState.impl;
   T_ArmedDisarmedState : DATA T_ArmedDisarmedState.impl;
   T_Bit : DATA T_Bit.impl;
   T_Boolean : DATA T_Boolean.impl;
   T_ConnectionState : DATA T_ConnectionState.impl;
   T_EnabledInhibitedState : DATA T_EnabledInhibitedState.impl;
   T_FaultState : DATA T_FaultState.impl;
   T_FlagState : DATA T_FlagState.impl;
   T_ForwardBackwardState : DATA T_ForwardBackwardState.impl;
   T_HighLowState : DATA T_HighLowState.impl;
   T_Int32 : DATA T_Int32.impl;
   T_Int8 : DATA T_Int8.impl;
   T_LeftRightState : DATA T_LeftRightState.impl;
   T_LockedUnlockedState : DATA T_LockedUnlockedState.impl;
   T_MovingStillState : DATA T_MovingStillState.impl;
   T_NominalRedundantState : DATA T_NominalRedundantState.impl;
   T_Null_Record : DATA T_Null_Record.impl;
   T_OCTET : DATA T_OCTET.impl;
   T_OnOffState : DATA T_OnOffState.impl;
   T_OverrideState : DATA T_OverrideState.impl;
   T_PlusMinusState : DATA T_PlusMinusState.impl;
   T_PresenceState : DATA T_PresenceState.impl;
   T_RMAPCRCTable : DATA T_RMAPCRCTable.impl;
   T_SelectionState : DATA T_SelectionState.impl;
   T_SuccessFailState : DATA T_SuccessFailState.impl;
   T_SwitchState : DATA T_SwitchState.impl;
   T_UART_DLC_FrameBuffer : DATA T_UART_DLC_FrameBuffer.impl;
   T_UART_DLC_FrameCRC : DATA T_UART_DLC_FrameCRC.impl;
   T_UART_DLC_Header : DATA T_UART_DLC_Header.impl;
   T_UART_DLC_PDU : DATA T_UART_DLC_PDU.impl;
   T_UART_DLC_RxErrorCode : DATA T_UART_DLC_RxErrorCode.impl;
   T_UART_DLC_SDU : DATA T_UART_DLC_SDU.impl;
   T_UInt32 : DATA T_UInt32.impl;
   T_UInt8 : DATA T_UInt8.impl;
   T_UsedUnusedState : DATA T_UsedUnusedState.impl;
   T_ValidInvalidState : DATA T_ValidInvalidState.impl;
   T_WarningState : DATA T_WarningState.impl;
   UINT1 : DATA UINT1.impl;
   UINT10 : DATA UINT10.impl;
   UINT11 : DATA UINT11.impl;
   UINT12 : DATA UINT12.impl;
   UINT14 : DATA UINT14.impl;
   UINT16 : DATA UINT16.impl;
   UINT2 : DATA UINT2.impl;
   UINT24 : DATA UINT24.impl;
   UINT3 : DATA UINT3.impl;
   UINT32 : DATA UINT32.impl;
   UINT4 : DATA UINT4.impl;
   UINT40 : DATA UINT40.impl;
   UINT5 : DATA UINT5.impl;
   UINT6 : DATA UINT6.impl;
   UINT7 : DATA UINT7.impl;
   UINT8 : DATA UINT8.impl;
END Taste_DataView.others;
DATA ACN_UART_PROTOCOL_DLC_DATAVIEW
PROPERTIES
    Source_Text => ("uart_protocol_dlc.acn");
    Source_Language => (ACN);
END ACN_UART_PROTOCOL_DLC_DATAVIEW;

end DataView;
