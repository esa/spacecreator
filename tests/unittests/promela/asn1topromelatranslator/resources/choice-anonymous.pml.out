#define SimpleChoiceWithAnonymousTypes_alt1_PRESENT 1
#define SimpleChoiceWithAnonymousTypes_alt2_PRESENT 2
inline SimpleChoiceWithAnonymousTypes_alt1_generate_value(value)
{
    if
    ::  atomic {
        select (value : 0 .. 5);
    }
   fi;
}
inline SimpleChoiceWithAnonymousTypes_alt2_generate_value(value)
{
    if
    ::  atomic {
        select (value : -1 .. 1);
    }
    fi;
}
inline SimpleChoiceWithAnonymousTypes_generate_value(value)
{
    if
    ::  true;
        SimpleChoiceWithAnonymousTypes_alt1_generate_value(value.alt1);
        value.selection = SimpleChoiceWithAnonymousTypes_alt1_PRESENT;
    ::  true;
        SimpleChoiceWithAnonymousTypes_alt2_generate_value(value.alt2);
        value.selection = SimpleChoiceWithAnonymousTypes_alt2_PRESENT;
    fi;
}
